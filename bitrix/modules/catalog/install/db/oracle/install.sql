CREATE TABLE B_CATALOG_IBLOCK
(
	IBLOCK_ID NUMBER(18) NOT NULL,
	YANDEX_EXPORT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SUBSCRIPTION CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	VAT_ID NUMBER(18) DEFAULT '0' NULL,
	PRODUCT_IBLOCK_ID NUMBER(18) DEFAULT '0' NOT NULL,
	SKU_PROPERTY_ID NUMBER(18) DEFAULT '0' NOT NULL,
	PRIMARY KEY (IBLOCK_ID)
)
/
CREATE INDEX IXS_CAT_IB_PRODUCT ON B_CATALOG_IBLOCK(PRODUCT_IBLOCK_ID)
/
CREATE INDEX IXS_CAT_IB_SKU_PROP ON B_CATALOG_IBLOCK(SKU_PROPERTY_ID)
/

CREATE TABLE B_CATALOG_PRICE
(
	ID NUMBER(18) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	EXTRA_ID NUMBER(18) NULL,
	CATALOG_GROUP_ID NUMBER(18) NOT NULL,
	PRICE NUMBER(18,2) NOT NULL,
	CURRENCY CHAR(3 CHAR) NOT NULL,
	TIMESTAMP_X DATE DEFAULT SYSDATE NOT NULL,
	QUANTITY_FROM NUMBER(18) NULL,
	QUANTITY_TO NUMBER(18) NULL,
	TMP_ID VARCHAR2(40 CHAR) NULL,
	PRICE_SCALE NUMBER(26,12) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_CATALOG_PID ON B_CATALOG_PRICE(PRODUCT_ID, CATALOG_GROUP_ID)
/
CREATE INDEX IX_CATALOG_PRICE ON B_CATALOG_PRICE(CATALOG_GROUP_ID)
/
CREATE INDEX IXS_CAT_PRICE_SCALE ON B_CATALOG_PRICE(PRICE_SCALE)
/
CREATE SEQUENCE SQ_B_CATALOG_PRICE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_PRICE_INSERT
BEFORE INSERT
ON B_CATALOG_PRICE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_PRICE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_PRODUCT
(
	ID NUMBER(18) NOT NULL,
	QUANTITY FLOAT DEFAULT '0' NOT NULL,
	QUANTITY_TRACE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	WEIGHT FLOAT DEFAULT ('0') NOT NULL,
	TIMESTAMP_X DATE DEFAULT SYSDATE NOT NULL,
	PRICE_TYPE CHAR(1 CHAR) DEFAULT 'S' NOT NULL,
	RECUR_SCHEME_LENGTH NUMBER(18) NULL,
	RECUR_SCHEME_TYPE CHAR(1 CHAR) DEFAULT 'D' NOT NULL,
	TRIAL_PRICE_ID NUMBER(18) NULL,
	WITHOUT_ORDER CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SELECT_BEST_PRICE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	VAT_ID NUMBER(18) DEFAULT '0' NULL,
	VAT_INCLUDED CHAR(1 CHAR) DEFAULT 'Y' NULL,
	CAN_BUY_ZERO CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	NEGATIVE_AMOUNT_TRACE char(1 CHAR) DEFAULT 'D' NOT NULL,
	TMP_ID VARCHAR2(40 CHAR) NULL,
	PURCHASING_PRICE NUMBER(18,2) NULL,
	PURCHASING_CURRENCY CHAR(3 CHAR) NULL,
	BARCODE_MULTI CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	QUANTITY_RESERVED NUMBER(18,2) DEFAULT '0' NULL,
	SUBSCRIBE CHAR(1 CHAR) NULL,
	WIDTH FLOAT NULL,
	LENGTH FLOAT NULL,
	HEIGHT FLOAT NULL,
	MEASURE NUMBER(18) NULL,
	TYPE NUMBER(18) NULL,
	AVAILABLE CHAR(1 CHAR) NULL,
	BUNDLE CHAR(1 CHAR) NULL,
	PRIMARY KEY (ID)
)
/

CREATE TABLE B_CATALOG_EXTRA
(
	ID NUMBER(18) NOT NULL,
	NAME VARCHAR2(50 CHAR) NOT NULL,
	PERCENTAGE NUMBER(18,2) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_EXTRA START WITH 3 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_EXTRA_INSERT
BEFORE INSERT
ON B_CATALOG_EXTRA
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_EXTRA.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_GROUP
(
	ID NUMBER(18) NOT NULL,
	NAME VARCHAR2(100 CHAR) NOT NULL,
	BASE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SORT NUMBER(18) DEFAULT '100' NOT NULL,
	XML_ID VARCHAR2(255 CHAR) NULL,
	TIMESTAMP_X DATE NULL,
	MODIFIED_BY NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_GROUP START WITH 3 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_GROUP_INSERT
BEFORE INSERT
ON B_CATALOG_GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_GROUP_LANG
(
	ID NUMBER(18) NOT NULL,
	CATALOG_GROUP_ID NUMBER(18) NOT NULL,
	LANG CHAR(2 CHAR) NOT NULL,
	NAME VARCHAR2(100 CHAR) NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_CATALOG_GROUP_ID ON B_CATALOG_GROUP_LANG(CATALOG_GROUP_ID, LANG)
/
CREATE SEQUENCE SQ_B_CATALOG_GROUP_LANG START WITH 5 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_GROUP_LANG_INSERT
BEFORE INSERT
ON B_CATALOG_GROUP_LANG
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_GROUP_LANG.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_GROUP2GROUP
(
	ID NUMBER(18) NOT NULL,
	CATALOG_GROUP_ID NUMBER(18) NOT NULL,
	GROUP_ID NUMBER(18) NOT NULL,
	BUY CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_GROUP2GROUP ON B_CATALOG_GROUP2GROUP(CATALOG_GROUP_ID, GROUP_ID, BUY)
/
CREATE SEQUENCE SQ_B_CATALOG_GROUP2GROUP START WITH 5 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_GROUP2GROUP_INSERT
BEFORE INSERT
ON B_CATALOG_GROUP2GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_GROUP2GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_LOAD
(
	NAME VARCHAR2(250 CHAR) NOT NULL,
	VALUE VARCHAR2(2000 CHAR) NOT NULL,
	TYPE CHAR(1 CHAR) DEFAULT 'I' NOT NULL,
	LAST_USED CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	PRIMARY KEY (NAME,TYPE)
)
/

CREATE TABLE B_CATALOG_EXPORT
(
	ID NUMBER(18) NOT NULL,
	FILE_NAME VARCHAR2(100 CHAR) NOT NULL,
	NAME VARCHAR2(250 CHAR) NOT NULL,
	DEFAULT_PROFILE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	IN_MENU CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	IN_AGENT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	IN_CRON CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SETUP_VARS CLOB NULL,
	LAST_USE DATE NULL,
	IS_EXPORT CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	NEED_EDIT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	TIMESTAMP_X DATE NULL,
	MODIFIED_BY NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX BCAT_EX_FILE_NAME ON B_CATALOG_EXPORT(FILE_NAME)
/
CREATE INDEX IX_CAT_IS_EXPORT ON B_CATALOG_EXPORT(IS_EXPORT)
/
CREATE SEQUENCE SQ_B_CATALOG_EXPORT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_EXPORT_INSERT
BEFORE INSERT
ON B_CATALOG_EXPORT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_EXPORT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_PRODUCT2GROUP
(
	ID NUMBER(18) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	GROUP_ID NUMBER(18) NOT NULL,
	ACCESS_LENGTH NUMBER(18) NOT NULL,
	ACCESS_LENGTH_TYPE CHAR(1 CHAR) DEFAULT 'D' NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_C_P2G_PROD_GROUP ON B_CATALOG_PRODUCT2GROUP(PRODUCT_ID, GROUP_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_PRODUCT2GROUP INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_PRODUCT2GROUP_INSERT
BEFORE INSERT
ON B_CATALOG_PRODUCT2GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_PRODUCT2GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT
(
	ID NUMBER(18) NOT NULL,
	XML_ID VARCHAR2(255 CHAR) NULL,
	SITE_ID CHAR(2 CHAR) NOT NULL,
	TYPE NUMBER(18) DEFAULT 0 NOT NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	ACTIVE_FROM DATE NULL,
	ACTIVE_TO DATE NULL,
	RENEWAL CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	NAME VARCHAR2(255 CHAR) NULL,
	MAX_USES NUMBER(18) DEFAULT 0 NOT NULL,
	COUNT_USES NUMBER(18) DEFAULT 0 NOT NULL,
	COUPON VARCHAR2(20 CHAR) NULL,
	SORT NUMBER(18) DEFAULT 100 NOT NULL,
	MAX_DISCOUNT NUMBER(18,4) NULL,
	VALUE_TYPE CHAR(1 CHAR) DEFAULT 'P' NOT NULL,
	VALUE NUMBER(18,4) DEFAULT 0.0 NOT NULL,
	CURRENCY CHAR(3 CHAR) NOT NULL,
	MIN_ORDER_SUM NUMBER(18,4) DEFAULT 0.0 NULL,
	TIMESTAMP_X DATE DEFAULT SYSDATE NOT NULL,
	COUNT_PERIOD CHAR(1 CHAR) DEFAULT 'U' NOT NULL,
	COUNT_SIZE NUMBER(18) DEFAULT 0 NOT NULL,
	COUNT_TYPE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	COUNT_FROM DATE NULL,
	COUNT_TO DATE NULL,
	ACTION_SIZE NUMBER(18) DEFAULT 0 NOT NULL,
	ACTION_TYPE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	MODIFIED_BY NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	PRIORITY NUMBER(18) DEFAULT 1 NOT NULL,
	LAST_DISCOUNT CHAR(1 char) DEFAULT 'Y' NOT NULL,
	VERSION NUMBER(18) DEFAULT 1 NOT NULL,
	NOTES VARCHAR2(255 CHAR) NULL,
	CONDITIONS CLOB NULL,
	UNPACK CLOB NULL,
	USE_COUPONS CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SALE_ID NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_C_D_ACT ON B_CATALOG_DISCOUNT(ACTIVE, ACTIVE_FROM, ACTIVE_TO)
/
CREATE INDEX IX_B_CATALOG_DISCOUNT_B ON B_CATALOG_DISCOUNT(SITE_ID, RENEWAL, ACTIVE, ACTIVE_FROM, ACTIVE_TO)
/
CREATE INDEX IX_B_CAT_DISCOUNT_COUPON ON B_CATALOG_DISCOUNT(USE_COUPONS)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISCOUNT_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT_COND
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	ACTIVE CHAR(1 CHAR) NULL,
	USER_GROUP_ID NUMBER(18) DEFAULT -1 NOT NULL,
	PRICE_TYPE_ID NUMBER(18) DEFAULT -1 NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT_COND INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISC_COND_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT_COND
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT_COND.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT_MODULE
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	MODULE_ID VARCHAR2(50 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_CAT_DSC_MOD ON B_CATALOG_DISCOUNT_MODULE(DISCOUNT_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT_MODULE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DSC_MODULE_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT_MODULE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT_MODULE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT2PRODUCT
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_C_D2P_PRODIS ON B_CATALOG_DISCOUNT2PRODUCT(PRODUCT_ID, DISCOUNT_ID)
/
CREATE UNIQUE INDEX IX_C_D2P_PRODIS_B ON B_CATALOG_DISCOUNT2PRODUCT(DISCOUNT_ID, PRODUCT_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT2PRODUCT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISC2PROD_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT2PRODUCT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT2PRODUCT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT2GROUP
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	GROUP_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_C_D2G_GRDIS ON B_CATALOG_DISCOUNT2GROUP(GROUP_ID, DISCOUNT_ID)
/
CREATE UNIQUE INDEX IX_C_D2G_GRDIS_B ON B_CATALOG_DISCOUNT2GROUP(DISCOUNT_ID, GROUP_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT2GROUP INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISC2GROUP_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT2GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT2GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT2CAT
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	CATALOG_GROUP_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_C_D2C_CATDIS ON B_CATALOG_DISCOUNT2CAT(CATALOG_GROUP_ID, DISCOUNT_ID)
/
CREATE UNIQUE INDEX IX_C_D2C_CATDIS_B ON B_CATALOG_DISCOUNT2CAT(DISCOUNT_ID, CATALOG_GROUP_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT2CAT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISCOUNT2CAT_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT2CAT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT2CAT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT2SECTION
(
	ID INT NOT NULL,
	DISCOUNT_ID INT NOT NULL,
	SECTION_ID INT NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_C_D2S_SECDIS ON B_CATALOG_DISCOUNT2SECTION(SECTION_ID, DISCOUNT_ID)
/
CREATE UNIQUE INDEX IX_C_D2S_SECDIS_B ON B_CATALOG_DISCOUNT2SECTION(DISCOUNT_ID, SECTION_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT2SECTION INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISC2SECT_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT2SECTION
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT2SECTION.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT2IBLOCK
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	IBLOCK_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE UNIQUE INDEX IX_C_D2I_IBDIS ON B_CATALOG_DISCOUNT2IBLOCK(IBLOCK_ID, DISCOUNT_ID)
/
CREATE UNIQUE INDEX IX_C_D2I_IBDIS_B ON B_CATALOG_DISCOUNT2IBLOCK(DISCOUNT_ID, IBLOCK_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT2IBLOCK INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_DISC2IBLOCK_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT2IBLOCK
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT2IBLOCK.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISCOUNT_COUPON
(
	ID NUMBER(18) not null,
	DISCOUNT_ID NUMBER(18) not null,
	ACTIVE CHAR(1 CHAR) default 'Y' not null,
	COUPON VARCHAR2(32 CHAR) not null,
	DATE_APPLY DATE null,
	ONE_TIME CHAR(1 CHAR) default 'Y' not null,
	TIMESTAMP_X DATE NULL,
	MODIFIED_BY NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	DESCRIPTION CLOB NULL,
	PRIMARY KEY(ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DISCOUNT_COUPON START WITH 1 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE UNIQUE INDEX IX_CAT_DISCOU_1 ON B_CATALOG_DISCOUNT_COUPON(DISCOUNT_ID, COUPON)
/
CREATE INDEX IX_CAT_DISCOU_2 ON B_CATALOG_DISCOUNT_COUPON(COUPON, ACTIVE)
/
CREATE OR REPLACE TRIGGER B_CAT_DISCOU_INSERT
BEFORE INSERT
ON B_CATALOG_DISCOUNT_COUPON
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISCOUNT_COUPON.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CATALOG_VAT
(
	ID NUMBER(11) NOT NULL,
	TIMESTAMP_X DATE DEFAULT SYSDATE NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NULL,
	C_SORT NUMBER(18) DEFAULT 100 NULL,
	NAME VARCHAR2(50 CHAR) default '' NOT NULL,
	RATE NUMBER(18,2) default '0.00' NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_VAT START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_ACTIVE ON B_CATALOG_VAT(ACTIVE)
/
CREATE OR REPLACE TRIGGER B_CAT_VAT_INSERT
BEFORE INSERT
ON B_CATALOG_VAT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_VAT.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISC_SAVE_RANGE
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	RANGE_FROM NUMBER(18,4) NOT NULL,
	TYPE CHAR(1 CHAR) DEFAULT 'P' NOT NULL,
	VALUE NUMBER(18,4) default 0.0 NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DISC_SAVE_RANGE START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_DSR_DISCOUNT ON B_CATALOG_DISC_SAVE_RANGE(DISCOUNT_ID)
/
CREATE INDEX IX_CAT_DSR_DISCOUNT2 ON B_CATALOG_DISC_SAVE_RANGE(DISCOUNT_ID, RANGE_FROM)
/
CREATE OR REPLACE TRIGGER B_CAT_DSSR_INSERT
BEFORE INSERT
ON B_CATALOG_DISC_SAVE_RANGE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISC_SAVE_RANGE.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISC_SAVE_GROUP
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	GROUP_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DISC_SAVE_GROUP START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_DSG_DISCOUNT ON B_CATALOG_DISC_SAVE_GROUP(DISCOUNT_ID)
/
CREATE INDEX IX_CAT_DSG_GROUP ON B_CATALOG_DISC_SAVE_GROUP(GROUP_ID)
/
CREATE OR REPLACE TRIGGER B_CAT_DSSG_INSERT
BEFORE INSERT
ON B_CATALOG_DISC_SAVE_GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISC_SAVE_GROUP.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DISC_SAVE_USER
(
	ID NUMBER(18) NOT NULL,
	DISCOUNT_ID NUMBER(18) NOT NULL,
	USER_ID NUMBER(18) NOT NULL,
	ACTIVE_FROM DATE NOT NULL,
	ACTIVE_TO DATE NOT NULL,
	RANGE_FROM NUMBER(18,4) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DISC_SAVE_USER START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_DSU_DISCOUNT ON B_CATALOG_DISC_SAVE_USER(DISCOUNT_ID)
/
CREATE INDEX IX_CAT_DSU_USER ON B_CATALOG_DISC_SAVE_USER(DISCOUNT_ID, USER_ID)
/
CREATE OR REPLACE TRIGGER B_CAT_DSSU_INSERT
BEFORE INSERT
ON B_CATALOG_DISC_SAVE_USER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DISC_SAVE_USER.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_STORE
(
	ID NUMBER(18) NOT NULL,
	TITLE VARCHAR2(75 CHAR) NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	ADDRESS VARCHAR2(245 CHAR) NOT NULL,
	DESCRIPTION VARCHAR2(2000 CHAR) NULL,
	GPS_N VARCHAR2(15 CHAR) DEFAULT '0' NULL,
	GPS_S VARCHAR2(15 CHAR) DEFAULT '0' NULL,
	IMAGE_ID VARCHAR2(45 CHAR) NULL,
	LOCATION_ID NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	DATE_MODIFY DATE DEFAULT SYSDATE NULL,
	USER_ID NUMBER(18) NULL,
	MODIFIED_BY NUMBER(18) NULL,
	PHONE VARCHAR2(45 CHAR) NULL,
	SCHEDULE VARCHAR2(255 CHAR) NULL,
	XML_ID VARCHAR2(255 CHAR) NULL,
	SORT NUMBER(18) DEFAULT 100 NOT NULL,
	EMAIL VARCHAR2(255 CHAR) NULL,
	ISSUING_CENTER CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SHIPPING_CENTER CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SITE_ID CHAR(2 CHAR) NULL,
	CODE VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_STORE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CAT_STORE_INSERT
BEFORE INSERT
ON B_CATALOG_STORE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_STORE.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_STORE_PRODUCT
(
	ID NUMBER(18) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	AMOUNT NUMBER(18,4) DEFAULT '0' NOT NULL,
	STORE_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_STORE_PRODUCT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CATALOG_STORE_PRODUCT1 ON B_CATALOG_STORE_PRODUCT(STORE_ID)
/
CREATE UNIQUE INDEX IX_CATALOG_STORE_PRODUCT2 ON B_CATALOG_STORE_PRODUCT(PRODUCT_ID, STORE_ID)
/
CREATE OR REPLACE TRIGGER B_CAT_STORE_PROD_INSERT
BEFORE INSERT
ON B_CATALOG_STORE_PRODUCT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_STORE_PRODUCT.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_STORE_BARCODE
(
	ID NUMBER(18) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	BARCODE VARCHAR2(100 CHAR) NULL,
	STORE_ID NUMBER(18) NULL,
	ORDER_ID NUMBER(18) NULL,
	DATE_MODIFY DATE NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	MODIFIED_BY NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_STORE_BARCODE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE UNIQUE INDEX IX_B_CATALOG_STORE_BARCODE1 ON B_CATALOG_STORE_BARCODE(BARCODE)
/
CREATE OR REPLACE TRIGGER B_CAT_STORE_BARC_INSERT
BEFORE INSERT
ON B_CATALOG_STORE_BARCODE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_STORE_BARCODE.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_CONTRACTOR
(
	ID NUMBER(18) NOT NULL,
	PERSON_TYPE CHAR(1 CHAR) NOT NULL,
	PERSON_NAME VARCHAR2(100 CHAR) NULL,
	PERSON_LASTNAME VARCHAR2(100 CHAR) NULL,
	PERSON_MIDDLENAME VARCHAR2(100 CHAR) NULL,
	EMAIL VARCHAR2(100 CHAR) NULL,
	PHONE VARCHAR2(45 CHAR) NULL,
	POST_INDEX VARCHAR2(45 CHAR) NULL,
	COUNTRY VARCHAR2(45 CHAR) NULL,
	CITY VARCHAR2(45 CHAR) NULL,
	COMPANY VARCHAR2(145 CHAR) NULL,
	INN VARCHAR2(145 CHAR) NULL,
	KPP VARCHAR2(145 CHAR) NULL,
	ADDRESS VARCHAR2(255 CHAR) NULL,
	DATE_MODIFY DATE NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	MODIFIED_BY NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_CONTRACTOR INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_CONTRACTOR_INSERT
BEFORE INSERT
ON B_CATALOG_CONTRACTOR
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_CONTRACTOR.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_STORE_DOCS
(
	ID NUMBER(18) NOT NULL,
	DOC_TYPE CHAR(1 CHAR) NOT NULL,
	SITE_ID CHAR(2 CHAR) NULL,
	CONTRACTOR_ID NUMBER(18) NULL,
	DATE_MODIFY DATE NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) NULL,
	MODIFIED_BY NUMBER(18) NULL,
	CURRENCY CHAR(3 CHAR) NULL,
	STATUS CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	DATE_STATUS DATE NULL,
	DATE_DOCUMENT DATE NULL,
	STATUS_BY NUMBER(18) NULL,
	TOTAL NUMBER(18) NULL,
	COMMENTARY VARCHAR2(1000 CHAR) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_STORE_DOCS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CAT_STORE_DOCS_INSERT
BEFORE INSERT
ON B_CATALOG_STORE_DOCS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_STORE_DOCS.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DOCS_ELEMENT
(
	ID NUMBER(18) NOT NULL,
	DOC_ID NUMBER(18) NOT NULL,
	STORE_FROM NUMBER(18) NULL,
	STORE_TO NUMBER(18) NULL,
	ELEMENT_ID NUMBER(18) NULL,
	AMOUNT NUMBER(18,2) NULL,
	PURCHASING_PRICE NUMBER(18,2) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DOCS_ELEMENT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_B_CATALOG_DOCS_ELEMENT1 ON B_CATALOG_DOCS_ELEMENT(DOC_ID)
/
CREATE OR REPLACE TRIGGER B_CATALOG_DOCS_ELEMENT_INSERT
BEFORE INSERT
ON B_CATALOG_DOCS_ELEMENT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DOCS_ELEMENT.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_DOCS_BARCODE
(
	ID NUMBER(18) NOT NULL,
	DOC_ELEMENT_ID NUMBER(18) NOT NULL,
	BARCODE VARCHAR(100 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_DOCS_BARCODE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_B_CATALOG_DOCS_BARCODE1 ON B_CATALOG_DOCS_BARCODE(DOC_ELEMENT_ID)
/
CREATE OR REPLACE TRIGGER B_CATALOG_DOCS_BARCODE_INSERT
BEFORE INSERT
ON B_CATALOG_DOCS_BARCODE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_DOCS_BARCODE.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_MEASURE
(
	ID NUMBER(18) NOT NULL,
	CODE NUMBER(18) NOT NULL,
	MEASURE_TITLE VARCHAR2(500 CHAR) NULL,
	SYMBOL_RUS VARCHAR2(20 CHAR) NULL,
	SYMBOL_INTL VARCHAR2(20 CHAR) NULL,
	SYMBOL_LETTER_INTL VARCHAR2(20 CHAR) NULL,
	IS_DEFAULT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_MEASURE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE UNIQUE INDEX IX_B_CATALOG_MEASURE1 ON B_CATALOG_MEASURE(CODE)
/
CREATE OR REPLACE TRIGGER B_CATALOG_MEASURE_INSERT
BEFORE INSERT
ON B_CATALOG_MEASURE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_MEASURE.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_MEASURE_RATIO
(
	ID NUMBER(18) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	RATIO NUMBER(18,2) DEFAULT '1' NOT NULL,
	IS_DEFAULT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_MEASURE_RATIO INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE UNIQUE INDEX IX_B_CATALOG_MEASURE_RATIO ON B_CATALOG_MEASURE_RATIO(PRODUCT_ID, RATIO)
/
CREATE OR REPLACE TRIGGER B_CATALOG_MEASURE_RATIO_INSERT
BEFORE INSERT
ON B_CATALOG_MEASURE_RATIO
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_MEASURE_RATIO.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_PRODUCT_SETS
(
	ID NUMBER(18) NOT NULL,
	TYPE NUMBER(18) NOT NULL,
	SET_ID NUMBER(18) NOT NULL,
	ACTIVE CHAR(1 CHAR) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	ITEM_ID NUMBER(18) NOT NULL,
	QUANTITY NUMBER(18,4) NULL,
	MEASURE NUMBER(18) NULL,
	DISCOUNT_PERCENT NUMBER(18,2) NULL,
	SORT NUMBER(18) DEFAULT 100 NOT NULL,
	CREATED_BY NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	MODIFIED_BY NUMBER(18) NULL,
	TIMESTAMP_X DATE NULL,
	XML_ID VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY(ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_PRODUCT_SETS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_PR_SET_TYPE ON B_CATALOG_PRODUCT_SETS(TYPE)
/
CREATE INDEX IX_CAT_PR_SET_OWNER_ID ON B_CATALOG_PRODUCT_SETS(OWNER_ID)
/
CREATE INDEX IX_CAT_PR_SET_SET_ID ON B_CATALOG_PRODUCT_SETS(SET_ID)
/
CREATE INDEX IX_CAT_PR_SET_ITEM_ID ON B_CATALOG_PRODUCT_SETS(ITEM_ID)
/
CREATE OR REPLACE TRIGGER B_CATALOG_PRODUCT_SETS_INSERT
BEFORE INSERT
ON B_CATALOG_PRODUCT_SETS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CATALOG_PRODUCT_SETS.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/

CREATE TABLE B_CATALOG_VIEWED_PRODUCT
(
	ID NUMBER(18) NOT NULL,
	FUSER_ID NUMBER(18) NOT NULL,
	DATE_VISIT DATE NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	ELEMENT_ID NUMBER(18) DEFAULT 0 NOT NULL,
	SITE_ID CHAR(2 CHAR) NOT NULL,
	VIEW_COUNT NUMBER(18) DEFAULT 1 NOT NULL,
	RECOMMENDATION VARCHAR2(40 CHAR) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_VIEWED_PRODUCT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_V_PR_FUSER_ID ON B_CATALOG_VIEWED_PRODUCT(FUSER_ID)
/

CREATE TABLE B_CATALOG_SUBSCRIBE (
	ID NUMBER(18) NOT NULL,
	DATE_FROM DATE NOT NULL,
	DATE_TO DATE NULL,
	USER_CONTACT VARCHAR2(255 CHAR) NOT NULL,
	CONTACT_TYPE NUMBER(6) NOT NULL,
	USER_ID NUMBER(18) NULL,
	ITEM_ID NUMBER(18) NOT NULL,
	NEED_SENDING CHAR(1 CHAR) NOT NULL,
	SITE_ID CHAR(2 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_SUBSCRIBE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_SUB_USER_CONTACT ON B_CATALOG_SUBSCRIBE (USER_CONTACT)
/
CREATE INDEX IX_CAT_SUB_USER_ID ON B_CATALOG_SUBSCRIBE (USER_ID)
/
CREATE INDEX IX_CAT_SUB_ITEM_ID ON B_CATALOG_SUBSCRIBE (ITEM_ID)
/

CREATE TABLE B_CATALOG_SUBSCRIBE_ACCESS (
	ID NUMBER(18) NOT NULL,
	DATE_FROM DATE NOT NULL,
	USER_CONTACT VARCHAR2(255 CHAR) NOT NULL,
	TOKEN CHAR(6 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CATALOG_SUBSCRIBE_ACCESS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE INDEX IX_CAT_SUB_ACS_USER_CONTACT ON B_CATALOG_SUBSCRIBE_ACCESS (USER_CONTACT)
/

CREATE TABLE B_CATALOG_ROUNDING
(
	ID NUMBER(18) NOT NULL,
	CATALOG_GROUP_ID NUMBER(18) NOT NULL,
	PRICE NUMBER(18, 4) NOT NULL,
	ROUND_TYPE NUMBER(18) NOT NULL,
	ROUND_PRECISION NUMBER(18, 4) NOT NULL,
	CREATED_BY NUMBER(18) NULL,
	DATE_CREATE DATE NULL,
	MODIFIED_BY NUMBER(18) NULL,
	DATE_MODIFY DATE NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_CAT_RND_CATALOG_GROUP ON B_CATALOG_ROUNDING (CATALOG_GROUP_ID)
/
CREATE SEQUENCE SQ_B_CATALOG_ROUNDING INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CATALOG_ROUNDING_INSERT
BEFORE INSERT
ON B_CATALOG_ROUNDING
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CATALOG_ROUNDING.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/