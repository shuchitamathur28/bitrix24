CREATE TABLE B_SOCIALSERVICES_USER
(
	ID NUMBER(18) NOT NULL,
	LOGIN VARCHAR2(100 CHAR) NOT NULL,
	NAME VARCHAR2(100 CHAR) NULL,
	LAST_NAME VARCHAR2(100 CHAR) NULL,
	EMAIL VARCHAR2(100 CHAR) NULL,
	PERSONAL_PHOTO NUMBER(18) NULL,
	EXTERNAL_AUTH_ID VARCHAR2(100 CHAR) NOT NULL,
	USER_ID NUMBER(18) NOT NULL,
	XML_ID VARCHAR2(100 CHAR) NOT NULL,
	CAN_DELETE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	PERSONAL_WWW VARCHAR2(100 CHAR) NULL,
	PERMISSIONS VARCHAR2(555 CHAR) NULL,
	OATOKEN VARCHAR2(1000 CHAR) NULL,
	OATOKEN_EXPIRES NUMBER(18) NULL,
	OASECRET VARCHAR2(250 CHAR) NULL,
	REFRESH_TOKEN VARCHAR2(1000 CHAR) NULL,
	SEND_ACTIVITY CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SITE_ID VARCHAR2(50 CHAR) NULL,
	INITIALIZED CHAR(1 CHAR) DEFAULT 'N' NULL,
	PRIMARY KEY (ID)
)
/

CREATE SEQUENCE SQ_B_SOCIALSERVICES_USER INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE UNIQUE INDEX IX_B_SOCIALSERVICES_USER ON B_SOCIALSERVICES_USER(XML_ID, EXTERNAL_AUTH_ID)
/

CREATE INDEX IX_B_SOCIALSERVICES_US_1 ON B_SOCIALSERVICES_USER(USER_ID)
/
CREATE INDEX IX_B_SOCIALSERVICES_US_3 ON B_SOCIALSERVICES_USER(LOGIN)
/

CREATE OR REPLACE TRIGGER B_SOCIALSERVICES_USER_INSERT
BEFORE INSERT
ON B_SOCIALSERVICES_USER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_SOCIALSERVICES_USER.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_SOCIALSERVICES_MESSAGE
(
	ID NUMBER(18) NOT NULL,
	USER_ID NUMBER(18) NOT NULL,
	SOCSERV_USER_ID NUMBER(18) NOT NULL,
	PROVIDER VARCHAR2(100 CHAR) NOT NULL,
	MESSAGE VARCHAR2(1000 CHAR) NULL,
	INSERT_DATE DATE NULL,
	SUCCES_SENT CHAR(1 CHAR) DEFAULT 'N' NOT NULL ,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_SOCIALSERVICES_MESSAGE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_SOCSERV_MESSAGE_INSERT
BEFORE INSERT
ON B_SOCIALSERVICES_MESSAGE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_SOCIALSERVICES_MESSAGE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/


CREATE TABLE B_SOCIALSERVICES_USER_LINK
(
	ID NUMBER(18) NOT NULL,
	USER_ID NUMBER(18) NOT NULL,
	SOCSERV_USER_ID NUMBER(18) NOT NULL,
	LINK_USER_ID NUMBER(18) NULL,
	LINK_UID VARCHAR2(100 CHAR) NOT NULL,
	LINK_NAME VARCHAR2(255 CHAR) NULL,
	LINK_LAST_NAME VARCHAR2(255 CHAR) NULL,
	LINK_PICTURE VARCHAR2(255 CHAR) NULL,
	LINK_EMAIL VARCHAR2(255 CHAR) NULL,
	TIMESTAMP_X DATE NULL,
	PRIMARY KEY(ID)
)
/
CREATE SEQUENCE SQ_B_SOCIALSERVICES_USER_LINK INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_SOCSERV_USER_LINK_INSERT
BEFORE INSERT
ON B_SOCIALSERVICES_USER_LINK
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_SOCIALSERVICES_USER_LINK.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/


CREATE TABLE B_SOCIALSERVICES_AP
(
	ID NUMBER(18) NOT NULL,
	TIMESTAMP_X DATE NULL,
	USER_ID NUMBER(18) NOT NULL,
	DOMAIN VARCHAR (255 CHAR) NOT NULL,
	ENDPOINT VARCHAR (255 CHAR) NULL,
	LOGIN VARCHAR (50 CHAR) NULL,
	PASSWORD VARCHAR (50 CHAR) NULL,
	LAST_AUTHORIZE DATE NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_SOCIALSERVICES_AP INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_SOCIALSERVICES_AP_INSERT
BEFORE INSERT
ON B_SOCIALSERVICES_AP
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL
		THEN
			SELECT SQ_B_SOCIALSERVICES_AP.NEXTVAL
			INTO :NEW.ID
			FROM dual;
		END IF;
	END;
/
CREATE INDEX IX_B_SOCIALSERVICES_AP1 ON B_SOCIALSERVICES_AP (USER_ID, DOMAIN)
/
