CREATE TABLE B_FORUM (
	ID               NUMBER(18)     NOT NULL,
	FORUM_GROUP_ID NUMBER(18) NULL,
	NAME             VARCHAR2(255 CHAR)  NOT NULL,
	DESCRIPTION      VARCHAR2(1000 CHAR)     NULL,
	SORT             NUMBER(18)     DEFAULT '150' NOT NULL,
	ACTIVE           CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_HTML       CHAR(1 CHAR)        DEFAULT 'N' NOT NULL,
	ALLOW_ANCHOR     CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_BIU        CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_IMG        CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_VIDEO      CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_LIST       CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_QUOTE      CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_CODE       CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_FONT       CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_SMILES     CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_TABLE      CHAR(1 CHAR)        DEFAULT 'N' NOT NULL,
	ALLOW_ALIGN      CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_UPLOAD     CHAR(1 CHAR)        DEFAULT 'N' NOT NULL,
	ALLOW_UPLOAD_EXT VARCHAR2(255 CHAR) NULL,
	ALLOW_MOVE_TOPIC CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_TOPIC_TITLED     CHAR(1 CHAR)	DEFAULT 'N' NOT NULL,
	ALLOW_SIGNATURE  CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ALLOW_NL2BR      CHAR(1 CHAR)        DEFAULT 'N' NOT NULL,
	PATH2FORUM_MESSAGE VARCHAR2(255 CHAR) NULL,
	ASK_GUEST_EMAIL CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	USE_CAPTCHA CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	INDEXATION       CHAR(1 CHAR) 		DEFAULT 'Y' NOT NULL,
	MODERATION       CHAR(1 CHAR)        DEFAULT 'N' NOT NULL,
	DEDUPLICATION    CHAR(1 CHAR)        DEFAULT 'Y' NOT NULL,
	ORDER_BY         CHAR(1 CHAR)        DEFAULT 'P' NOT NULL,
	ORDER_DIRECTION  CHAR(4 CHAR)        DEFAULT 'DESC' NOT NULL,
	LID              CHAR(2 CHAR)        DEFAULT 'ru' NOT NULL,
	TOPICS           NUMBER(18)     DEFAULT '0' NOT NULL,
	POSTS            NUMBER(18)     DEFAULT '0' NOT NULL,
	LAST_POSTER_ID   NUMBER(18)         NULL,
	LAST_POSTER_NAME VARCHAR2(255 CHAR)       NULL,
	LAST_POST_DATE   DATE               NULL,
	LAST_MESSAGE_ID  NUMBER(20)         NULL,
	POSTS_UNAPPROVED NUMBER(18)     DEFAULT '0' NULL,
	ABS_LAST_POSTER_ID   NUMBER(18)         NULL,
	ABS_LAST_POSTER_NAME VARCHAR2(255 CHAR)       NULL,
	ABS_LAST_POST_DATE   DATE               NULL,
	ABS_LAST_MESSAGE_ID  NUMBER(20)         NULL,
	EVENT1           VARCHAR2(255 CHAR)  DEFAULT 'forum'     NULL,
	EVENT2           VARCHAR2(255 CHAR)  DEFAULT 'message'     NULL,
	EVENT3           VARCHAR2(255 CHAR)      NULL,
	HTML VARCHAR2(1000 CHAR) NULL,
	XML_ID VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY(ID),
	CONSTRAINT FK_B_FORUM_B_USER FOREIGN KEY (LAST_POSTER_ID) REFERENCES B_USER(ID)
)
/

CREATE SEQUENCE SQ_B_FORUM INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_insert
BEFORE INSERT
ON B_FORUM
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_B_FORUM.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_FORUM_SORT ON B_FORUM(SORT)
/
CREATE INDEX IX_FORUM_ACTIVE ON B_FORUM(ACTIVE)
/
CREATE INDEX IX_FORUM_GROUP_ID ON B_FORUM(FORUM_GROUP_ID)
/

CREATE TABLE B_FORUM_TOPIC (
	ID number(20) not null,
	FORUM_ID number(18) not null,
	TOPIC_ID number(20),
	TITLE VARCHAR2(255 CHAR) not null,
	TITLE_SEO VARCHAR2(255 CHAR),
	TAGS VARCHAR2(255 CHAR),
	DESCRIPTION VARCHAR2(255 CHAR),
	ICON VARCHAR2(255 CHAR),
	STATE CHAR(1 CHAR) default 'Y' not null,
	APPROVED CHAR(1 CHAR) default 'Y' not null,
	SORT number(18) default '150' not null,
	POSTS number(18) default '0' not null,
	POSTS_UNAPPROVED number(18) default '0' not null,
	VIEWS number(18) default '0' not null,
	USER_START_ID number(18),
	USER_START_NAME VARCHAR2(255 CHAR) not null,
	START_DATE date not null,
	LAST_POSTER_ID number(18),
	LAST_POSTER_NAME VARCHAR2(255 CHAR) not null,
	LAST_POST_DATE date not null,
	LAST_MESSAGE_ID number(20) null,
	ABS_LAST_POSTER_ID number(18),
	ABS_LAST_POSTER_NAME VARCHAR2(255 CHAR) not null,
	ABS_LAST_POST_DATE date not null,
	ABS_LAST_MESSAGE_ID number(20) null,
	XML_ID VARCHAR2(255 CHAR) NULL,
	HTML CLOB NULL,
	SOCNET_GROUP_ID number(20) null,
	OWNER_ID number(20) null,
	PRIMARY KEY (ID),
	CONSTRAINT FK_B_FORUM_TOPIC_B_USER FOREIGN KEY (USER_START_ID) REFERENCES B_USER(ID),
	CONSTRAINT FK_B_FORUM_TOPIC_B_USER1 FOREIGN KEY (LAST_POSTER_ID) REFERENCES B_USER(ID),
	CONSTRAINT FK_B_FORUM_TOPIC_B_FORUM FOREIGN KEY (FORUM_ID) REFERENCES B_FORUM(ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_TOPIC INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_TOPIC_insert
BEFORE INSERT
ON B_FORUM_TOPIC
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_B_FORUM_TOPIC.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_FORUM_TOPIC_FORUM ON B_FORUM_TOPIC(FORUM_ID, APPROVED)
/
CREATE INDEX IX_FORUM_TOPIC_APPROVED ON B_FORUM_TOPIC(APPROVED)
/
CREATE INDEX IX_FORUM_TOPIC_LAST_POST_DATE ON B_FORUM_TOPIC(LAST_POST_DATE)
/
CREATE INDEX IX_FORUM_TOPIC_ABS_L_POST_DATE ON B_FORUM_TOPIC(ABS_LAST_POST_DATE)
/
CREATE INDEX IX_FORUM_TOPIC_USER_START_ID ON B_FORUM_TOPIC(USER_START_ID)
/
CREATE INDEX IX_FORUM_TOPIC_DATE_USER_ID ON B_FORUM_TOPIC(START_DATE, USER_START_ID)
/
CREATE INDEX IX_FORUM_TOPIC_XML_ID ON B_FORUM_TOPIC(XML_ID)
/
CREATE INDEX IX_FORUM_TOPIC_TITLE_SEO ON B_FORUM_TOPIC(FORUM_ID, TITLE_SEO)
/
CREATE INDEX IX_FORUM_TOPIC_TITLE_SEO2 ON B_FORUM_TOPIC(TITLE_SEO)
/
CREATE TABLE B_FORUM_MESSAGE (
	ID number(20) not null,
	FORUM_ID number(18) not null,
	TOPIC_ID number(20) not null,
	USE_SMILES CHAR(1 CHAR) default 'Y' not null,
	NEW_TOPIC CHAR(1 CHAR) default 'N' not null,
	APPROVED CHAR(1 CHAR) default 'Y' not null,
	SOURCE_ID VARCHAR2(255 CHAR) default 'WEB' not null,
	POST_DATE date not null,
	POST_MESSAGE clob,
	POST_MESSAGE_HTML clob,
	POST_MESSAGE_FILTER clob,
	POST_MESSAGE_CHECK char(32 CHAR),
	ATTACH_IMG NUMBER(18) NULL,
	PARAM1 VARCHAR2(2 CHAR) NULL,
	PARAM2 NUMBER(18) NULL,
	AUTHOR_ID number(18) null,
	AUTHOR_NAME VARCHAR2(255 CHAR) null,
	AUTHOR_EMAIL VARCHAR2(255 CHAR) null,
	AUTHOR_IP VARCHAR2(255 CHAR) null,
	AUTHOR_REAL_IP VARCHAR2(128 CHAR) NULL,
	GUEST_ID NUMBER(18) NULL,
	EDITOR_ID number(18) null,
	EDITOR_NAME VARCHAR2(255 CHAR) null,
	EDITOR_EMAIL VARCHAR2(255 CHAR) null,
	EDIT_REASON clob,
	EDIT_DATE date null,
	XML_ID VARCHAR2(255 CHAR) NULL,
	HTML clob,
	MAIL_HEADER clob,
	PRIMARY KEY (ID),
	CONSTRAINT FK_B_FORUM_MESSAGE_B_USER FOREIGN KEY (AUTHOR_ID) REFERENCES B_USER(ID),
	CONSTRAINT FK_B_FORUM_MESSAGE_B_FORUM FOREIGN KEY (FORUM_ID) REFERENCES B_FORUM(ID),
	CONSTRAINT FK_FORUM_MESS_FORUM_TOPIC FOREIGN KEY (TOPIC_ID) REFERENCES B_FORUM_TOPIC(ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_MESSAGE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_MESSAGE_insert
BEFORE INSERT
ON B_FORUM_MESSAGE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_B_FORUM_MESSAGE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_FORUM_MESSAGE_FORUM ON B_FORUM_MESSAGE(FORUM_ID, APPROVED)
/
CREATE INDEX IX_FORUM_MESSAGE_TOPIC ON B_FORUM_MESSAGE(TOPIC_ID, APPROVED, ID)
/
CREATE INDEX IX_FORUM_MESSAGE_AUTHOR ON B_FORUM_MESSAGE(AUTHOR_ID, APPROVED, FORUM_ID, ID)
/
CREATE INDEX IX_FORUM_MESSAGE_APPROVED ON B_FORUM_MESSAGE(APPROVED)
/
CREATE INDEX IX_FORUM_MESSAGE_PARAM2 ON B_FORUM_MESSAGE(PARAM2)
/
CREATE INDEX IX_FORUM_MESSAGE_XML_ID ON B_FORUM_MESSAGE(XML_ID)
/
CREATE INDEX IX_FORUM_MESSAGE_DATE_USER_ID ON B_FORUM_MESSAGE(POST_DATE, AUTHOR_ID)
/
CREATE INDEX IX_FORUM_MESSAGE_AU_TOPIC_ID ON B_FORUM_MESSAGE(AUTHOR_ID, TOPIC_ID, ID)
/
CREATE INDEX IX_FORUM_MESSAGE_AU_FORUM_ID ON B_FORUM_MESSAGE(AUTHOR_ID, FORUM_ID, ID, APPROVED, TOPIC_ID)
/
CREATE TABLE B_FORUM_FILE (
	ID number(18) not null,
	FILE_ID number(18) not null,
	USER_ID number(18) null,
	FORUM_ID number(18) null,
	TOPIC_ID number(20) null,
	MESSAGE_ID number(20) null,
	TIMESTAMP_X date default sysdate not null,
	HITS number(18) null,
	PRIMARY KEY (ID),
	CONSTRAINT FK_B_FORUM_FILE_B_FILE FOREIGN KEY (FILE_ID) REFERENCES B_FILE(ID), 
	CONSTRAINT FK_B_FORUM_FILE_B_FORUM FOREIGN KEY (FORUM_ID) REFERENCES B_FORUM(ID)
)
/
CREATE SEQUENCE SQ_B_FORUM_FILE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_FILE_INSERT
BEFORE INSERT
ON B_FORUM_FILE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_FILE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_FORUM_FILE_FILE ON B_FORUM_FILE(FILE_ID)
/
CREATE INDEX IX_FORUM_FILE_FORUM ON B_FORUM_FILE(FORUM_ID)
/
CREATE INDEX IX_FORUM_FILE_TOPIC ON B_FORUM_FILE(TOPIC_ID)
/
CREATE INDEX IX_FORUM_FILE_MESSAGE ON B_FORUM_FILE(MESSAGE_ID)
/
CREATE TABLE B_FORUM_USER (
	ID number(18) not null,
	USER_ID number(18) not null,
	ALIAS varchar2(64 CHAR) null,
	DESCRIPTION VARCHAR2(255 CHAR) null,
	IP_ADDRESS varchar2(128 CHAR) null,
	AVATAR number(18) null,
	NUM_POSTS number(10) default '0' not null,
	INTERESTS clob,
	LAST_POST number(18),
	ALLOW_POST CHAR(1 CHAR) default 'Y' not null,
	LAST_VISIT date not null,
	DATE_REG date not null,
	REAL_IP_ADDRESS VARCHAR2(128 CHAR) NULL,
	SIGNATURE VARCHAR2(255 CHAR) NULL,
	SHOW_NAME CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	RANK_ID NUMBER(18) NULL,
	POINTS NUMBER(18) DEFAULT 0 NOT NULL,
	HIDE_FROM_ONLINE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SUBSC_GROUP_MESSAGE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SUBSC_GET_MY_MESSAGE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_B_FORUM_USER_B_USER FOREIGN KEY (USER_ID) REFERENCES B_USER(ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_USER INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_USER_insert
BEFORE INSERT
ON B_FORUM_USER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_B_FORUM_USER.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE UNIQUE INDEX IX_FORUM_USER_USER6 ON B_FORUM_USER(USER_ID)
/

CREATE TABLE B_FORUM_PERMS
(
	ID number(18) not null,
	FORUM_ID number(18) not null,
	GROUP_ID number(18) not null,
	PERMISSION CHAR(1 CHAR) default 'M' not null,
	PRIMARY KEY (ID),
	CONSTRAINT FK_B_FORUM_PERMS_B_FORUM FOREIGN KEY (FORUM_ID) REFERENCES B_FORUM(ID),
	CONSTRAINT FK_B_FORUM_PERMS_B_GROUP FOREIGN KEY (GROUP_ID) REFERENCES B_GROUP(ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_PERMS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_PERMS_insert
BEFORE INSERT
ON B_FORUM_PERMS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_B_FORUM_PERMS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_FORUM_PERMS_FORUM ON B_FORUM_PERMS(FORUM_ID, GROUP_ID)
/
CREATE INDEX IX_FORUM_PERMS_GROUP ON B_FORUM_PERMS(GROUP_ID)
/

CREATE TABLE B_FORUM_SUBSCRIBE (
	ID number(18) not null,
	USER_ID number(18) not null,
	FORUM_ID number(18) not null,
	TOPIC_ID number(18) null,
	START_DATE date not null,
	LAST_SEND number(18) null,
	NEW_TOPIC_ONLY CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SITE_ID CHAR(2 CHAR) DEFAULT 'ru' NOT NULL,
	SOCNET_GROUP_ID int NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_FORUM_SUBSCRIBE_USER FOREIGN KEY (USER_ID) REFERENCES B_USER(ID),
	CONSTRAINT FK_FORUM_SUBSCRIBE_FORUM FOREIGN KEY (FORUM_ID) REFERENCES B_FORUM(ID),
	CONSTRAINT FK_FORUM_SUB_FORUM_TOPIC FOREIGN KEY (TOPIC_ID) REFERENCES B_FORUM_TOPIC(ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_SUBSCRIBE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_SUBSCRIBE_insert
BEFORE INSERT
ON B_FORUM_SUBSCRIBE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT sq_B_FORUM_SUBSCRIBE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE UNIQUE INDEX UX_FORUM_SUBSCRIBE_USER ON B_FORUM_SUBSCRIBE(USER_ID, FORUM_ID, TOPIC_ID, SOCNET_GROUP_ID)
/

CREATE TABLE B_FORUM_RANK
(
	ID NUMBER(18) NOT NULL,
	CODE VARCHAR2(100 CHAR) NULL,
	MIN_NUM_POSTS NUMBER(18) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_RANK INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_RANK_INSERT
BEFORE INSERT
ON B_FORUM_RANK
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_RANK.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_RANK_LANG
(
	ID NUMBER(18) NOT NULL,
	RANK_ID NUMBER(18) NOT NULL,
	LID CHAR(2 CHAR) NOT NULL,
	NAME VARCHAR2(100 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/

CREATE UNIQUE INDEX UX_FORUM_RANK ON B_FORUM_RANK_LANG(RANK_ID, LID)
/

CREATE SEQUENCE SQ_B_FORUM_RANK_LANG INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_RANK_LANG_INSERT
BEFORE INSERT
ON B_FORUM_RANK_LANG
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_RANK_LANG.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_GROUP
(
	ID NUMBER(18) NOT NULL,
	SORT NUMBER(18) DEFAULT 150 NOT NULL,
	PARENT_ID NUMBER(18) NULL,
	LEFT_MARGIN NUMBER(18) NULL,
	RIGHT_MARGIN NUMBER(18) NULL,
	DEPTH_LEVEL NUMBER(18) NULL,
	XML_ID VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY (ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_GROUP INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_GROUP_INSERT
BEFORE INSERT
ON B_FORUM_GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_GROUP_LANG
(
	ID NUMBER(18) NOT NULL,
	FORUM_GROUP_ID NUMBER(18) NOT NULL,
	LID CHAR(2 CHAR) NOT NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	DESCRIPTION VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY (ID)
)
/

CREATE UNIQUE INDEX UX_FORUM_GROUP ON B_FORUM_GROUP_LANG(FORUM_GROUP_ID, LID)
/

CREATE SEQUENCE SQ_B_FORUM_GROUP_LANG INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_GROUP_LANG_INSERT
BEFORE INSERT
ON B_FORUM_GROUP_LANG
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_GROUP_LANG.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_POINTS
(
	ID NUMBER(18) NOT NULL,
	MIN_POINTS NUMBER(18) NOT NULL,
	CODE VARCHAR2(100 CHAR) NULL,
	VOTES NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/

CREATE SEQUENCE SQ_B_FORUM_POINTS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE UNIQUE INDEX UX_FORUM_P_MP ON B_FORUM_POINTS(MIN_POINTS)
/

CREATE OR REPLACE TRIGGER B_FORUM_POINTS_INSERT
BEFORE INSERT
ON B_FORUM_POINTS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_POINTS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_POINTS_LANG
(
	POINTS_ID NUMBER(18) NOT NULL,
	LID CHAR(2 CHAR) NOT NULL,
	NAME VARCHAR2(250 CHAR) NULL,
	PRIMARY KEY (POINTS_ID, LID)
)
/

CREATE TABLE B_FORUM_POINTS2POST
(
	ID NUMBER(18) NOT NULL,
	MIN_NUM_POSTS NUMBER(18) NOT NULL,
	POINTS_PER_POST NUMBER(18, 4) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID)
)
/

CREATE UNIQUE INDEX UX_FORUM_P2P_MNP ON B_FORUM_POINTS2POST(MIN_NUM_POSTS)
/

CREATE SEQUENCE SQ_B_FORUM_POINTS2POST INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_FORUM_POINTS2POST_INSERT
BEFORE INSERT
ON B_FORUM_POINTS2POST
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_POINTS2POST.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_FORUM_USER_POINTS
(
	FROM_USER_ID NUMBER(18) NOT NULL,
	TO_USER_ID NUMBER(18) NOT NULL,
	POINTS NUMBER(18) DEFAULT 0 NOT NULL,
	DATE_UPDATE DATE NULL,
	PRIMARY KEY (FROM_USER_ID, TO_USER_ID)
)
/
CREATE INDEX IX_B_FORUM_USER_POINTS_TO_USER ON B_FORUM_USER_POINTS (TO_USER_ID)
/
CREATE TABLE B_FORUM2SITE
(
	FORUM_ID NUMBER(18) NOT NULL,
	SITE_ID CHAR(2 CHAR) NOT NULL,
	PATH2FORUM_MESSAGE VARCHAR2(250 CHAR) NULL,
	PRIMARY KEY (FORUM_ID, SITE_ID)
)
/
CREATE TABLE B_FORUM_PM_FOLDER 
(	
	ID NUMBER(11), 
	TITLE VARCHAR2(255 CHAR), 
	USER_ID NUMBER(11), 
	SORT NUMBER(11), 
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_FORUM_PM_FOLDER INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_PM_FOLDER_INSERT
BEFORE INSERT
ON B_FORUM_PM_FOLDER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_PM_FOLDER.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/
CREATE UNIQUE INDEX UX_B_FORUM_PM_FOLDER ON B_FORUM_PM_FOLDER (TITLE, USER_ID)
/
CREATE INDEX IX_B_FORUM_PM_FOLDER_USER_IST ON B_FORUM_PM_FOLDER (USER_ID, ID, SORT, TITLE)
/
CREATE TABLE B_FORUM_PRIVATE_MESSAGE 
(	
	ID NUMBER(11), 
	AUTHOR_ID NUMBER(11), 
	POST_DATE DATE, 
	POST_SUBJ VARCHAR2(255 CHAR),
	POST_MESSAGE CLOB NOT NULL,
	USER_ID NUMBER(11) NOT NULL,
	RECIPIENT_ID NUMBER(11), 
	FOLDER_ID NUMBER(11) NOT NULL,
	IS_READ VARCHAR2(1 CHAR),
	REQUEST_IS_READ VARCHAR2(1 CHAR),
	USE_SMILES VARCHAR2(1 CHAR),
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_FORUM_PRIVATE_MESSAGE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_PRIVATE_MESSAGE_INSERT
BEFORE INSERT
ON B_FORUM_PRIVATE_MESSAGE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_PRIVATE_MESSAGE.NEXTVAL INTO :NEW.ID FROM DUAL;
	END IF;
END;
/
CREATE INDEX IX_B_FORUM_PM_USER ON B_FORUM_PRIVATE_MESSAGE (USER_ID)
/
CREATE INDEX IX_B_FORUM_PM_AFR ON B_FORUM_PRIVATE_MESSAGE (AUTHOR_ID, FOLDER_ID, IS_READ)
/
CREATE INDEX IX_B_FORUM_PM_UFP ON B_FORUM_PRIVATE_MESSAGE (USER_ID, FOLDER_ID, POST_DATE)
/
CREATE INDEX IX_B_FORUM_PM_POST_DATE ON B_FORUM_PRIVATE_MESSAGE (POST_DATE DESC) 
/
CREATE TABLE B_FORUM_FILTER (
	ID NUMBER(11),
	DICTIONARY_ID NUMBER(11),
	WORDS VARCHAR2(255 CHAR),
	PATTERN CLOB,
	REPLACEMENT VARCHAR2(255 CHAR),
	DESCRIPTION CLOB,
	USE_IT CHAR(1 CHAR),
	PATTERN_CREATE VARCHAR2(5 CHAR),
	PRIMARY KEY (ID))
/
CREATE SEQUENCE SQ_B_FORUM_FILTER INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_FILTER_INSERT
BEFORE INSERT
ON B_FORUM_FILTER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_FILTER.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_B_FORUM_FILTER_2 ON B_FORUM_FILTER(USE_IT)
/
CREATE INDEX IX_B_FORUM_FILTER_3 ON B_FORUM_FILTER(PATTERN_CREATE)
/
CREATE TABLE B_FORUM_DICTIONARY (
	ID NUMBER(11),
	TITLE VARCHAR2(50 CHAR),
	TYPE CHAR(1 CHAR),
	PRIMARY KEY(ID)
)
/
CREATE SEQUENCE SQ_B_FORUM_DICTIONARY START WITH 5 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_DICTIONARY_INSERT
BEFORE INSERT
ON B_FORUM_DICTIONARY
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_DICTIONARY.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_FORUM_LETTER (
	ID NUMBER(11),
	DICTIONARY_ID  NUMBER(11),
	LETTER VARCHAR2(50 CHAR),
	REPLACEMENT VARCHAR2(255 CHAR),
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_FORUM_LETTER INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_LETTER_INSERT
BEFORE INSERT
ON B_FORUM_LETTER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_LETTER.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_USER_TOPIC (
	ID NUMBER(20),
	TOPIC_ID NUMBER(11),
	USER_ID  NUMBER(11),
	FORUM_ID NUMBER(11),
	LAST_VISIT DATE,
	PRIMARY KEY (TOPIC_ID, USER_ID)
)
/
CREATE INDEX IX_B_FORUM_USER_FORUM_ID2 ON B_FORUM_USER_TOPIC(USER_ID, FORUM_ID, TOPIC_ID)
/
CREATE SEQUENCE SQ_B_FORUM_USER_TOPIC INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_USER_TOPIC_INSERT
BEFORE INSERT
ON B_FORUM_USER_TOPIC
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_USER_TOPIC.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_FORUM_USER_FORUM (
	ID NUMBER(11),
	USER_ID  NUMBER(11),
	FORUM_ID NUMBER(11),
	LAST_VISIT DATE,
	MAIN_LAST_VISIT DATE
)
/
CREATE INDEX IX_B_FORUM_USER_FORUM_ID1 ON B_FORUM_USER_FORUM(USER_ID, FORUM_ID)
/
CREATE SEQUENCE SQ_B_FORUM_USER_FORUM INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_USER_FORUM_INSERT
BEFORE INSERT
ON B_FORUM_USER_FORUM
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_USER_FORUM.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_FORUM_STAT (
	ID NUMBER(20),
	USER_ID NUMBER(10),
	IP_ADDRESS varchar(128 CHAR),
	PHPSESSID varchar(255 CHAR),
	LAST_VISIT date default sysdate not null,
	SITE_ID char(2 CHAR),
	FORUM_ID NUMBER(5),
	TOPIC_ID NUMBER(10),
	SHOW_NAME varchar(101 CHAR)
)
/
CREATE INDEX IX_B_FORUM_STAT_SITE_ID ON B_FORUM_STAT(SITE_ID, LAST_VISIT)
/
CREATE INDEX IX_B_FORUM_STAT_TOPIC_ID ON B_FORUM_STAT(TOPIC_ID, LAST_VISIT)
/
CREATE INDEX IX_B_FORUM_STAT_FORUM_ID ON B_FORUM_STAT(FORUM_ID, LAST_VISIT)
/
CREATE INDEX IX_B_FORUM_STAT_PHPSESSID ON B_FORUM_STAT(PHPSESSID)
/
CREATE SEQUENCE SQ_B_FORUM_STAT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_STAT_INSERT
BEFORE INSERT
ON B_FORUM_STAT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_STAT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_FORUM_EMAIL
(
	ID number(18) not null,
	EMAIL_FORUM_ACTIVE char(1 char) DEFAULT 'Y' NOT NULL,
	FORUM_ID number(18) NOT NULL,
	SOCNET_GROUP_ID number(18) NULL,
	MAIL_FILTER_ID number(18) NOT NULL,
	EMAIL varchar2(255 char) NOT NULL,
	USE_EMAIL char(1 char) NULL,
	EMAIL_GROUP varchar2(255 char) NULL,
	SUBJECT_SUF varchar2(50 char) NULL,
	USE_SUBJECT char(1 char) NULL,
	URL_TEMPLATES_MESSAGE varchar2(255 char) NULL,
	NOT_MEMBER_POST char(1 char) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_FORUM_EMAIL_FORUM_SOC ON B_FORUM_EMAIL(FORUM_ID, SOCNET_GROUP_ID)
/
CREATE INDEX IX_B_FORUM_EMAIL_FILTER_ID ON B_FORUM_EMAIL(MAIL_FILTER_ID)
/
CREATE SEQUENCE SQ_B_FORUM_EMAIL INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/
CREATE OR REPLACE TRIGGER B_FORUM_EMAIL_INSERT
BEFORE INSERT
ON B_FORUM_EMAIL
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_FORUM_EMAIL.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
