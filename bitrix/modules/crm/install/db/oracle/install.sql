CREATE TABLE B_CRM_LEAD
(
	ID NUMBER(18) NOT NULL,
	DATE_CREATE DATE DEFAULT SYSDATE NULL,
	DATE_MODIFY DATE DEFAULT SYSDATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	ASSIGNED_BY_ID NUMBER(18) NULL,
	OPENED CHAR(1 CHAR) default 'N' NULL,
	CONTACT_ID NUMBER(18) NULL,
	PRODUCT_ID VARCHAR2(50 CHAR) NULL,
	STATUS_ID VARCHAR2(50 CHAR) NULL,
	STATUS_DESCRIPTION VARCHAR2(2000 CHAR) NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	OPPORTUNITY NUMBER(18, 2) NULL,
	CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	OPPORTUNITY_ACCOUNT NUMBER(18, 2) NULL,
	ACCOUNT_CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	COMPANY_ID NUMBER(18) NULL,
	SOURCE_ID VARCHAR2(50 CHAR) NULL,
	SOURCE_DESCRIPTION VARCHAR2(2000 CHAR) NULL,
	TITLE VARCHAR2(255 CHAR) NULL,
	COMPANY_TITLE VARCHAR2(255 CHAR) NULL,
	FULL_NAME VARCHAR2(100 CHAR) NULL,
	NAME VARCHAR2(50 CHAR) NULL,
	LAST_NAME VARCHAR2(50 CHAR) NULL,
	SECOND_NAME VARCHAR2(50 CHAR) NULL,
	POST VARCHAR2(255 CHAR) NULL,
	ADDRESS VARCHAR2(2000 CHAR) NULL,
	COMMENTS VARCHAR2(2000 CHAR) NULL,
	EXCH_RATE NUMBER(20, 4) DEFAULT '1' NULL,
	WEBFORM_ID NUMBER(18) NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	DATE_CLOSED DATE NULL,
	BIRTHDATE DATE NULL,
	BIRTHDAY_SORT NUMBER(18) DEFAULT 1024 NOT NULL,
	HONORIFIC VARCHAR(128 CHAR) NULL,
	HAS_PHONE CHAR(1 CHAR) NULL,
	HAS_EMAIL CHAR(1 CHAR) NULL,
	FACE_ID NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_LEAD_FNAME ON B_CRM_LEAD (FULL_NAME)
/
CREATE INDEX IX_LEAD_1 ON B_CRM_LEAD (STATUS_ID, ASSIGNED_BY_ID)
/
CREATE INDEX IX_LEAD_2 ON B_CRM_LEAD (DATE_MODIFY)
/
CREATE INDEX IX_LEAD_3 ON B_CRM_LEAD (CONTACT_ID)
/
CREATE INDEX IX_LEAD_4 ON B_CRM_LEAD (COMPANY_ID)
/
CREATE INDEX IX_LEAD_5 ON B_CRM_LEAD (BIRTHDAY_SORT, ASSIGNED_BY_ID, ID)
/
CREATE INDEX IX_LEAD_6 ON B_CRM_LEAD (BIRTHDATE, ID)
/
CREATE INDEX IX_LEAD_7 ON B_CRM_LEAD (HAS_PHONE, ID)
/
CREATE INDEX IX_LEAD_8 ON B_CRM_LEAD (HAS_EMAIL, ID)
/
CREATE INDEX IX_LEAD_9 ON B_CRM_LEAD (HAS_PHONE, HAS_EMAIL, ID)
/
CREATE INDEX IX_LEAD_10 ON B_CRM_LEAD (STATUS_SEMANTIC_ID, ID)
/
CREATE INDEX IX_LEAD_11 ON B_CRM_LEAD (ASSIGNED_BY_ID, STATUS_SEMANTIC_ID, ID)
/
CREATE INDEX IX_LEAD_12 ON B_CRM_LEAD (WEBFORM_ID)
/
CREATE INDEX IX_LEAD_13 ON B_CRM_LEAD (FACE_ID)
/
CREATE SEQUENCE SQ_B_CRM_LEAD
/
CREATE OR REPLACE TRIGGER B_CRM_LEAD_insert
BEFORE INSERT
ON B_CRM_LEAD
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_LEAD.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_DEAL
(
	ID NUMBER(18) NOT NULL,
	DATE_CREATE DATE DEFAULT SYSDATE NULL,
	DATE_MODIFY DATE DEFAULT SYSDATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	ASSIGNED_BY_ID NUMBER(18) NULL,
	OPENED CHAR(1 CHAR) default 'N' NULL,
	LEAD_ID NUMBER(18) NULL,
	COMPANY_ID NUMBER(18) NULL,
	CONTACT_ID NUMBER(18) NULL,
	QUOTE_ID NUMBER(18) NULL,
	TITLE VARCHAR2(255 CHAR) NULL,
	PRODUCT_ID VARCHAR2(50 CHAR) NULL,
	CATEGORY_ID NUMBER(18) NULL,
	STAGE_ID VARCHAR2(50 CHAR) NULL,
	STAGE_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	IS_NEW CHAR(1 CHAR) NULL,
	CLOSED CHAR(1 CHAR) default 'N' NULL,
	TYPE_ID VARCHAR2(50 CHAR) NULL,
	OPPORTUNITY NUMBER(18, 2) NULL,
	TAX_VALUE NUMBER(18, 2) NULL,
	CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	OPPORTUNITY_ACCOUNT NUMBER(18, 2) NULL,
	TAX_VALUE_ACCOUNT NUMBER(18, 2) NULL,
	ACCOUNT_CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	PROBABILITY NUMBER(3) NULL,
	COMMENTS VARCHAR2(2000 CHAR) NULL,
	BEGINDATE DATE NULL,
	CLOSEDATE DATE NULL,
	EVENT_DATE DATE DEFAULT SYSDATE NULL,
	EVENT_ID VARCHAR2(50 CHAR) NULL,
	EVENT_DESCRIPTION VARCHAR2(2000 CHAR) NULL,	
	ADDITIONAL_INFO VARCHAR2(2000 CHAR) NULL,
	EXCH_RATE NUMBER(20, 4) DEFAULT '1' NULL,
	LOCATION_ID VARCHAR2(100 CHAR) NULL,
	WEBFORM_ID NUMBER(18) NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_DEAL_1 ON B_CRM_DEAL (STAGE_ID, ASSIGNED_BY_ID)
/
CREATE INDEX IX_DEAL_2 ON B_CRM_DEAL (COMPANY_ID)
/
CREATE INDEX IX_DEAL_3 ON B_CRM_DEAL (CONTACT_ID)
/
CREATE INDEX IX_DEAL_4 ON B_CRM_DEAL (CATEGORY_ID, ID)
/
CREATE INDEX IX_DEAL_5 ON B_CRM_DEAL (STAGE_SEMANTIC_ID, ID)
/
CREATE INDEX IX_DEAL_6 ON B_CRM_DEAL (IS_NEW, ID)
/
CREATE INDEX IX_DEAL_7 ON B_CRM_DEAL (ASSIGNED_BY_ID, STAGE_SEMANTIC_ID, CATEGORY_ID, ID)
/
CREATE INDEX IX_DEAL_8 ON B_CRM_DEAL (WEBFORM_ID)
/
CREATE SEQUENCE SQ_B_CRM_DEAL
/
CREATE OR REPLACE TRIGGER B_CRM_DEAL_insert
BEFORE INSERT
ON B_CRM_DEAL
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_DEAL.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_CONTACT
(
	ID NUMBER(18) NOT NULL,
	LEAD_ID NUMBER(18) NULL,
	DATE_CREATE DATE DEFAULT SYSDATE NULL,
	DATE_MODIFY DATE DEFAULT SYSDATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	ASSIGNED_BY_ID NUMBER(18) NULL,
	OPENED CHAR(1 CHAR) default 'N' NULL,
	COMPANY_ID NUMBER(18) NULL,
	SOURCE_ID VARCHAR2(50 CHAR) NULL,
	SOURCE_DESCRIPTION VARCHAR2(2000 CHAR) NULL,
	FULL_NAME VARCHAR2(100 CHAR) NULL,
	NAME VARCHAR2(50 CHAR) NULL,
	LAST_NAME VARCHAR2(50 CHAR) NULL,
	SECOND_NAME VARCHAR2(50 CHAR) NULL,
	PHOTO VARCHAR2(10 CHAR) NULL,
	POST VARCHAR2(255 CHAR) NULL,
	ADDRESS VARCHAR2(2000 CHAR) NULL,
	COMMENTS VARCHAR2(2000 CHAR) NULL,
	EXPORT CHAR(1 CHAR) default 'N' NULL,
	TYPE_ID VARCHAR2(50 CHAR) NULL,
	WEBFORM_ID NUMBER(18) NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_VERSION VARCHAR2(255 CHAR) NULL,
	BIRTHDATE DATE NULL,
	BIRTHDAY_SORT NUMBER(18) DEFAULT 1024 NOT NULL,
	HONORIFIC VARCHAR(128 CHAR) NULL,
	HAS_PHONE CHAR(1 CHAR) NULL,
	HAS_EMAIL CHAR(1 CHAR) NULL,
	FACE_ID NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_CONTACT
/
CREATE OR REPLACE TRIGGER B_CRM_CONTACT_insert
BEFORE INSERT
ON B_CRM_CONTACT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_CONTACT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_B_CRM_CONTACT_NAME ON B_CRM_CONTACT (NAME)
/
CREATE INDEX IX_B_CRM_CONTACT_LNAME ON B_CRM_CONTACT (LAST_NAME)
/
CREATE INDEX IX_B_CRM_CONTACT_FNAME ON B_CRM_CONTACT (FULL_NAME)
/
CREATE INDEX IX_B_CRM_CONTACT_BDAY ON B_CRM_CONTACT (BIRTHDAY_SORT, ASSIGNED_BY_ID, ID)
/
CREATE INDEX IX_B_CRM_CONTACT_BDATE ON B_CRM_CONTACT (BIRTHDATE, ID)
/
CREATE INDEX IX_B_CRM_CT_COMPANY ON B_CRM_CONTACT (COMPANY_ID, ID)
/
CREATE INDEX IX_B_CRM_CT_PHONE ON B_CRM_CONTACT (HAS_PHONE, ID)
/
CREATE INDEX IX_B_CRM_CT_EMAIL ON B_CRM_CONTACT (HAS_EMAIL, ID)
/
CREATE INDEX IX_B_CRM_CT_COMM ON B_CRM_CONTACT (HAS_PHONE, HAS_EMAIL, ID)
/
CREATE INDEX IX_B_CRM_CT_WFORM ON B_CRM_CONTACT (WEBFORM_ID)
/
CREATE INDEX IX_B_CRM_CT_FACE ON B_CRM_CONTACT (FACE_ID)
/

CREATE TABLE B_CRM_COMPANY
(
	ID NUMBER(18) NOT NULL,
	LEAD_ID NUMBER(18) NULL,
	DATE_CREATE DATE DEFAULT SYSDATE NULL,
	DATE_MODIFY DATE DEFAULT SYSDATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	ASSIGNED_BY_ID NUMBER(18) NULL,
	OPENED CHAR(1 CHAR) default 'N' NULL,
	TITLE VARCHAR2(255 CHAR) NULL,
	LOGO VARCHAR2(10 CHAR) NULL,
	ADDRESS VARCHAR2(2000 CHAR) NULL,
	ADDRESS_LEGAL VARCHAR2(2000 CHAR) NULL,
	BANKING_DETAILS VARCHAR2(2000 CHAR) NULL,
	COMMENTS VARCHAR2(2000 CHAR) NULL,
	COMPANY_TYPE VARCHAR2(50 CHAR) NULL,
	INDUSTRY VARCHAR2(50 CHAR) NULL,
	REVENUE VARCHAR2(255 CHAR) NULL,
	EMPLOYEES VARCHAR2(50 CHAR) NULL,
	CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	WEBFORM_ID NUMBER(18) NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_VERSION VARCHAR2(255 CHAR) NULL,
	HAS_PHONE CHAR(1 CHAR) NULL,
	HAS_EMAIL CHAR(1 CHAR) NULL,
	IS_MY_COMPANY CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_COMPANY
/
CREATE OR REPLACE TRIGGER B_CRM_COMPANY_insert
BEFORE INSERT
ON B_CRM_COMPANY
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_COMPANY.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_B_CRM_CY_TITLE ON B_CRM_COMPANY (TITLE)
/
CREATE INDEX IX_B_CRM_CY_PHONE ON B_CRM_COMPANY (HAS_PHONE, ID)
/
CREATE INDEX IX_B_CRM_CY_EMAIL ON B_CRM_COMPANY (HAS_EMAIL, ID)
/
CREATE INDEX IX_B_CRM_CY_COMM ON B_CRM_COMPANY (HAS_PHONE, HAS_EMAIL, ID)
/
CREATE INDEX IX_B_CRM_CY_ISMY ON B_CRM_COMPANY (IS_MY_COMPANY)
/
CREATE INDEX IX_B_CRM_CY_WFORM ON B_CRM_COMPANY (WEBFORM_ID)
/
CREATE TABLE B_CRM_STATUS
(
	ID NUMBER(18) NOT NULL,
	ENTITY_ID VARCHAR2(50 CHAR) NOT NULL,
	STATUS_ID VARCHAR2(50 CHAR) NOT NULL,
	NAME VARCHAR2(100 CHAR) NOT NULL,
	NAME_INIT VARCHAR2(100 CHAR) NULL,
	SORT NUMBER(18) NOT NULL,
	SYSTEM CHAR(1 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_STATUS
/
CREATE OR REPLACE TRIGGER B_CRM_STATUS_insert
BEFORE INSERT
ON B_CRM_STATUS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_STATUS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_B_CRM_STATUS ON B_CRM_STATUS (STATUS_ID, ENTITY_ID)
/

CREATE TABLE B_CRM_FIELD_MULTI
(
	ID NUMBER(18) NOT NULL,
	ENTITY_ID VARCHAR2(16 CHAR) NOT NULL,
	ELEMENT_ID NUMBER(18) NOT NULL,
	TYPE_ID VARCHAR2(16 CHAR) NOT NULL,
	VALUE_TYPE VARCHAR2(50 CHAR) NOT NULL,
	COMPLEX_ID VARCHAR2(100 CHAR) NOT NULL,
	VALUE VARCHAR2(250 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_FIELD_MULTI
/
CREATE OR REPLACE TRIGGER B_CRM_FIELD_MULTI_insert
BEFORE INSERT
ON B_CRM_FIELD_MULTI
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_FIELD_MULTI.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_B_CRM_FM_EE ON B_CRM_FIELD_MULTI (ENTITY_ID, ELEMENT_ID)
/
CREATE INDEX IX_B_CRM_FM_2 ON B_CRM_FIELD_MULTI (ENTITY_ID, TYPE_ID, ELEMENT_ID, ID)
/
CREATE INDEX IX_B_CRM_FM_3 ON B_CRM_FIELD_MULTI (TYPE_ID, VALUE, ENTITY_ID, ELEMENT_ID)
/

CREATE TABLE B_CRM_EVENT
(
	ID NUMBER(18) NOT NULL,
	DATE_CREATE DATE DEFAULT SYSDATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	EVENT_ID VARCHAR2(50 CHAR) NULL,
	EVENT_NAME VARCHAR2(255 CHAR) NOT NULL,
	EVENT_TEXT_1 VARCHAR2(2000 CHAR) NULL,
	EVENT_TEXT_2 VARCHAR2(2000 CHAR) NULL,
	EVENT_TYPE NUMBER(18) NULL,
	FILES CLOB,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_EVENT
/
CREATE OR REPLACE TRIGGER B_CRM_EVENT_insert
BEFORE INSERT
ON B_CRM_EVENT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_EVENT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_B_CRM_EVENT_1 ON B_CRM_EVENT (DATE_CREATE)
/
CREATE INDEX IX_B_CRM_EVENT_2 ON B_CRM_EVENT (EVENT_TYPE, EVENT_ID, ID)
/
CREATE INDEX IX_B_CRM_EVENT_3 ON B_CRM_EVENT (CREATED_BY_ID, ID)
/
CREATE INDEX IX_B_CRM_EVENT_4 ON B_CRM_EVENT (EVENT_TYPE, DATE_CREATE)
/

CREATE TABLE B_CRM_EVENT_RELATIONS
(
	ID NUMBER(18) NOT NULL,
	ASSIGNED_BY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE VARCHAR2(50 CHAR) NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_FIELD VARCHAR2(255 CHAR) NULL,
	EVENT_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_EVENT_RELATIONS
/
CREATE OR REPLACE TRIGGER B_CRM_EVENT_RELATIONS_insert
BEFORE INSERT
ON B_CRM_EVENT_RELATIONS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_EVENT_RELATIONS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_EVENT_REL_ENTITY ON B_CRM_EVENT_RELATIONS (ENTITY_TYPE, ENTITY_ID, ENTITY_FIELD)
/
CREATE INDEX IX_EVENT_REL_1 ON B_CRM_EVENT_RELATIONS (EVENT_ID)
/
CREATE INDEX IX_EVENT_REL_2 ON B_CRM_EVENT_RELATIONS (ENTITY_TYPE, ENTITY_ID, EVENT_ID)
/

CREATE TABLE B_CRM_ENTITY_LOCK
(
	ENTITY_ID NUMBER(11) NOT NULL,
	ENTITY_TYPE VARCHAR2 (10 CHAR) NOT NULL,
	DATE_LOCK DATE DEFAULT SYSDATE NULL,
	LOCKED_BY VARCHAR2(32 CHAR) DEFAULT NULL,
	PRIMARY KEY (ENTITY_ID)
)
/
CREATE TABLE B_CRM_ENTITY_PERMS
(
	ID NUMBER(18) NOT NULL,
	ENTITY VARCHAR2(20 CHAR) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	ATTR VARCHAR2(30 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_ENTITY_PERMS
/
CREATE OR REPLACE TRIGGER B_CRM_ENTITY_PERMS_insert
BEFORE INSERT
ON B_CRM_ENTITY_PERMS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ENTITY_PERMS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_ENTITY_ATTR ON B_CRM_ENTITY_PERMS (ENTITY, ENTITY_ID, ATTR)
/
CREATE INDEX IX_ENTITY_ATTR_1 ON B_CRM_ENTITY_PERMS (ENTITY, ATTR, ENTITY_ID)
/
CREATE TABLE B_CRM_ROLE(
	ID NUMBER(18) NOT NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_ROLE
/
CREATE OR REPLACE TRIGGER B_CRM_ROLE_insert
BEFORE INSERT
ON B_CRM_ROLE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ROLE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_ROLE_PERMS(
	ID NUMBER(18) NOT NULL,
	ROLE_ID NUMBER(18) NOT NULL,
	ENTITY VARCHAR2(20 CHAR) NOT NULL,
	FIELD VARCHAR2(30 CHAR) DEFAULT '-',
	FIELD_VALUE VARCHAR2(255 CHAR) DEFAULT NULL,
	PERM_TYPE VARCHAR2(20 CHAR) NOT NULL,
	ATTR CHAR(1 CHAR) DEFAULT '',
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_ROLE_PERMS
/
CREATE OR REPLACE TRIGGER B_CRM_ROLE_PERMS_insert
BEFORE INSERT
ON B_CRM_ROLE_PERMS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ROLE_PERMS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_ROLE_ID ON B_CRM_ROLE_PERMS (ROLE_ID)
/
CREATE TABLE B_CRM_ROLE_RELATION(
	ID NUMBER(18) NOT NULL,
	ROLE_ID NUMBER(18) NOT NULL,
	RELATION VARCHAR2(100 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_ROLE_RELATION
/
CREATE OR REPLACE TRIGGER B_CRM_ROLE_RELATION_insert
BEFORE INSERT
ON B_CRM_ROLE_RELATION
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ROLE_RELATION.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_ROLE_RELATION ON B_CRM_ROLE_RELATION (ROLE_ID, RELATION)
/

CREATE TABLE B_CRM_EXTERNAL_SALE
(
	ID int NOT NULL,
	ACTIVE char(1 CHAR) default 'Y' NOT NULL,
	DATE_CREATE date NOT NULL,
	DATE_UPDATE date NOT NULL,
	NAME varchar2(128 CHAR) NULL,
	SCHEME varchar2(5 CHAR) DEFAULT 'http' NOT NULL,
	SERVER varchar2(192 CHAR) NOT NULL,
	PORT int DEFAULT 80 NOT NULL,
	LOGIN varchar2(64 CHAR) NOT NULL,
	PASSWORD varchar2(128 CHAR) NOT NULL,
	MODIFICATION_LABEL int NULL,
	IMPORT_SIZE int NULL,
	IMPORT_PERIOD int NULL,
	IMPORT_PROBABILITY int NULL,
	IMPORT_RESPONSIBLE int NULL,
	IMPORT_PUBLIC CHAR(1 CHAR) NULL,
	IMPORT_PREFIX varchar2(128 CHAR) NULL,
	IMPORT_ERRORS int NULL,
	IMPORT_GROUP_ID int NULL,
	COOKIE clob NULL,
	LAST_STATUS clob NULL,
	LAST_STATUS_DATE date NULL,
	SYNC_DATA clob NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_EXTERNAL_SALE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CRM_EXTERNAL_SALE_INSERT
BEFORE INSERT
ON B_CRM_EXTERNAL_SALE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_EXTERNAL_SALE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CRM_CATALOG
(
	ID NUMBER(18) NOT NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY(ID)
)
/

CREATE TABLE B_CRM_PRODUCT
(
	ID NUMBER(18) NOT NULL,
	CATALOG_ID NUMBER(18) NOT NULL,
	CURRENCY_ID VARCHAR2(50 CHAR) NOT NULL,
	PRICE NUMBER(18,2) DEFAULT '0' NOT NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	PRIMARY KEY(ID)
)
/

CREATE TABLE B_CRM_PRODUCT_ROW
(
	ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	OWNER_TYPE CHAR(3 CHAR) NOT NULL,
	PRODUCT_ID NUMBER(18) NOT NULL,
	PRODUCT_NAME VARCHAR2(256 CHAR) NULL,
	PRICE NUMBER(18,2) NOT NULL,
	PRICE_ACCOUNT NUMBER(18,2) DEFAULT '0' NOT NULL,
	PRICE_EXCLUSIVE NUMBER(18,2) NULL,
	PRICE_NETTO DECIMAL(18,2) NULL,
	PRICE_BRUTTO DECIMAL(18,2) NULL,
	QUANTITY NUMBER(18,4) DEFAULT '0' NOT NULL,
	DISCOUNT_TYPE_ID NUMBER(3) NULL,
	DISCOUNT_RATE NUMBER(18,2) NULL,
	DISCOUNT_SUM NUMBER(18,2) NULL,
	TAX_RATE NUMBER(18,2) NULL,
	TAX_INCLUDED CHAR(1 CHAR) NULL,
	CUSTOMIZED CHAR(1 CHAR) NULL,
	MEASURE_CODE NUMBER(18) NULL,
	MEASURE_NAME VARCHAR2(50 CHAR) NULL,
	SORT NUMBER(18) NULL,
	PRIMARY KEY(ID)
)
/

CREATE INDEX IX_B_CRM_PROD_ROW_1 ON B_CRM_PRODUCT_ROW (OWNER_ID, OWNER_TYPE, SORT, ID)
/

CREATE SEQUENCE SQ_B_CRM_PRODUCT_ROW START WITH 1 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_CRM_PRODUCT_ROW_INSERT
BEFORE INSERT
ON B_CRM_PRODUCT_ROW
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_PRODUCT_ROW.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CRM_PRODUCT_ROW_CFG
(
	OWNER_ID NUMBER(18) NOT NULL,
	OWNER_TYPE CHAR(3 CHAR) NOT NULL,
	SETTINGS CLOB,
	CONSTRAINT PK_B_CRM_PRODUCT_ROW_CFG PRIMARY KEY(OWNER_ID, OWNER_TYPE)
)
/

CREATE TABLE B_CRM_ACT
(
	ID NUMBER(18) NOT NULL,
	TYPE_ID NUMBER(3) NOT NULL,
	PROVIDER_ID VARCHAR2(100 CHAR) NULL,
	PROVIDER_TYPE_ID VARCHAR2(100 CHAR) NULL,
	PROVIDER_GROUP_ID VARCHAR2(100 CHAR) NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	OWNER_TYPE_ID NUMBER(3) NOT NULL,
	ASSOCIATED_ENTITY_ID NUMBER(18),
	CALENDAR_EVENT_ID NUMBER(18) DEFAULT 0 NOT NULL,
	SUBJECT VARCHAR2(512 CHAR) NOT NULL,
	COMPLETED CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	STATUS NUMBER(18) DEFAULT 0 NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	PRIORITY NUMBER(18) NOT NULL,
	NOTIFY_TYPE NUMBER(18) NOT NULL,
	NOTIFY_VALUE NUMBER(18),
	DESCRIPTION CLOB NULL,
	DESCRIPTION_TYPE NUMBER(3) NULL,
	DIRECTION NUMBER(3) NOT NULL,
	LOCATION VARCHAR2(256 CHAR),
	CREATED DATE NOT NULL,
	LAST_UPDATED DATE NOT NULL,
	START_TIME DATE,
	END_TIME DATE,
	DEADLINE DATE,
	STORAGE_TYPE_ID NUMBER(3) NULL,
	STORAGE_ELEMENT_IDS CLOB NULL,
	PARENT_ID NUMBER(18) DEFAULT 0 NOT NULL,
	THREAD_ID NUMBER(18) DEFAULT 0 NOT NULL,
	URN VARCHAR2(64 CHAR) NULL,
	SETTINGS CLOB NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ORIGIN_ID VARCHAR2(255 CHAR) NULL,
	AUTHOR_ID NUMBER(18) NULL,
	EDITOR_ID NUMBER(18) NULL,
	PROVIDER_PARAMS CLOB NULL,
	PROVIDER_DATA CLOB NULL,
	RESULT_STATUS NUMBER(18) DEFAULT 0 NOT NULL,
	RESULT_STREAM NUMBER(18) DEFAULT 0 NOT NULL,
	RESULT_SOURCE_ID VARCHAR2(255 CHAR) NULL,
	RESULT_MARK NUMBER(18) DEFAULT 0 NOT NULL,
	RESULT_VALUE NUMBER(18, 4) NULL,
	RESULT_SUM NUMBER(18, 4) NULL,
	RESULT_CURRENCY_ID CHAR(3 CHAR) NULL,
	CONSTRAINT PK_B_CRM_ACT PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_ACT ON B_CRM_ACT (ID, PARENT_ID, OWNER_ID, OWNER_TYPE_ID)
/
CREATE INDEX IX_B_CRM_ACT_1 ON B_CRM_ACT (RESPONSIBLE_ID, COMPLETED, DEADLINE)
/
CREATE INDEX IX_B_CRM_ACT_2 ON B_CRM_ACT (ASSOCIATED_ENTITY_ID, TYPE_ID)
/
CREATE INDEX IX_B_CRM_ACT_4 ON B_CRM_ACT (DEADLINE)
/
CREATE INDEX IX_B_CRM_ACT_5 ON B_CRM_ACT (ORIGIN_ID)
/
CREATE INDEX IX_B_CRM_ACT_6 ON B_CRM_ACT (TYPE_ID, COMPLETED, DEADLINE, ID)
/
CREATE INDEX IX_B_CRM_ACT_7 ON B_CRM_ACT (OWNER_ID, OWNER_TYPE_ID, TYPE_ID, COMPLETED, DEADLINE, ID)
/
CREATE INDEX IX_B_CRM_ACT_8 ON B_CRM_ACT (PROVIDER_ID)
/
CREATE INDEX IX_B_CRM_ACT_9 ON B_CRM_ACT (CALENDAR_EVENT_ID)
/
CREATE INDEX IX_B_CRM_ACT_10 ON B_CRM_ACT (URN)
/
CREATE INDEX IX_B_CRM_ACT_11 ON B_CRM_ACT (PARENT_ID)
/
CREATE INDEX IX_B_CRM_ACT_12 ON B_CRM_ACT (THREAD_ID)
/

CREATE SEQUENCE SQ_B_CRM_ACT
/
CREATE OR REPLACE TRIGGER B_CRM_ACT_INSERT BEFORE INSERT ON B_CRM_ACT FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ACT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_ACT_BIND
(
	ID NUMBER(18),
	ACTIVITY_ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	OWNER_TYPE_ID NUMBER(3) NOT NULL,
	CONSTRAINT PK_B_CRM_ACT_BIND PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_ACT_BIND_1 ON B_CRM_ACT_BIND (ACTIVITY_ID)
/
CREATE INDEX IX_B_CRM_ACT_BIND_2 ON B_CRM_ACT_BIND (OWNER_ID, OWNER_TYPE_ID, ACTIVITY_ID)
/
CREATE SEQUENCE SQ_B_CRM_ACT_BIND
/
CREATE OR REPLACE TRIGGER B_CRM_ACT_BIND_INSERT BEFORE INSERT ON B_CRM_ACT_BIND FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ACT_BIND.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_ACT_COMM
(
	ID NUMBER(18),
	ACTIVITY_ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	OWNER_TYPE_ID NUMBER(3) NOT NULL,
	TYPE VARCHAR2(64 CHAR),
	VALUE VARCHAR2(256 CHAR),
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_SETTINGS CLOB,
	CONSTRAINT PK_B_CRM_ACT_COMM PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_ACT_COMM ON B_CRM_ACT_COMM (ACTIVITY_ID, OWNER_ID, OWNER_TYPE_ID, ENTITY_ID, ENTITY_TYPE_ID)
/
CREATE INDEX IX_B_CRM_ACT_COMM_2 ON B_CRM_ACT_COMM (ENTITY_ID, ENTITY_TYPE_ID, ID)
/
CREATE INDEX IX_B_CRM_ACT_COMM_3 ON B_CRM_ACT_COMM (OWNER_ID, OWNER_TYPE_ID, TYPE)
/
CREATE SEQUENCE SQ_B_CRM_ACT_COMM
/
CREATE OR REPLACE TRIGGER B_CRM_ACT_COMM_INSERT BEFORE INSERT ON B_CRM_ACT_COMM FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_ACT_COMM.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_ACT_ELEM
(
	ACTIVITY_ID NUMBER(18) NOT NULL,
	STORAGE_TYPE_ID NUMBER(3) NOT NULL,
	ELEMENT_ID NUMBER(18) NOT NULL,
	CONSTRAINT PK_B_CRM_ACT_ELEM PRIMARY KEY (ACTIVITY_ID, STORAGE_TYPE_ID, ELEMENT_ID)
)
/
CREATE TABLE B_CRM_USR_ACT
(
	USER_ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	OWNER_TYPE_ID NUMBER(3) NOT NULL,
	ACTIVITY_TIME DATE NOT NULL,
	ACTIVITY_ID NUMBER(18) NOT NULL,
	DEPARTMENT_ID NUMBER(18) NOT NULL,
	SORT VARCHAR2(16 CHAR) NULL,
	CONSTRAINT PK_B_CRM_USR_ACT PRIMARY KEY (USER_ID, OWNER_ID, OWNER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_USR_ACT ON B_CRM_USR_ACT (USER_ID, OWNER_ID, OWNER_TYPE_ID, ACTIVITY_TIME, ACTIVITY_ID, DEPARTMENT_ID)
/
CREATE INDEX IX_B_CRM_USR_ACT_2 ON B_CRM_USR_ACT (OWNER_ID ASC, OWNER_TYPE_ID ASC, USER_ID DESC, SORT DESC)
/
CREATE TABLE B_CRM_USR_MT
(
	ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	"SCOPE" NUMBER(3) NOT NULL,
	IS_ACTIVE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	TITLE VARCHAR2(128 CHAR),
	EMAIL_FROM VARCHAR2(255 CHAR),
	SUBJECT VARCHAR2(255 CHAR),
	BODY CLOB,
	SING_REQUIRED CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SORT NUMBER(18) DEFAULT 100 NOT NULL,
	CREATED DATE NOT NULL,
	LAST_UPDATED DATE NOT NULL,
	AUTHOR_ID NUMBER(18) NOT NULL,
	EDITOR_ID NUMBER(18) NOT NULL,
	CONSTRAINT PK_B_CRM_USR_MT PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_USR_MT ON B_CRM_USR_MT (OWNER_ID, ENTITY_TYPE_ID, SCOPE, IS_ACTIVE)
/
CREATE SEQUENCE SQ_B_CRM_USR_MT
/
CREATE OR REPLACE TRIGGER B_CRM_USR_MT_INSERT BEFORE INSERT ON B_CRM_USR_MT FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_USR_MT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CRM_SL_REL
(
	SL_ID NUMBER(38) NOT NULL,
	SL_EVENT_ID VARCHAR2(50 CHAR) NOT NULL,
	SL_ENTITY_TYPE VARCHAR2(50 CHAR) NOT NULL,
	SL_LAST_UPDATED DATE,
	ENTITY_ID NUMBER(18) NOT NULL,
	SL_PARENT_ENTITY_TYPE VARCHAR2(50 CHAR) NOT NULL,
	PARENT_ENTITY_ID NUMBER(18) NOT NULL,
	LVL NUMBER(3) DEFAULT 1 NOT NULL,
	TYPE_ID NUMBER(3) DEFAULT 1 NOT NULL
)
/
CREATE INDEX IX_B_CRM_SL_REL_1 ON B_CRM_SL_REL (SL_PARENT_ENTITY_TYPE, PARENT_ENTITY_ID, LVL, SL_ENTITY_TYPE, SL_EVENT_ID, SL_ID)
/
CREATE INDEX IX_B_CRM_SL_REL_2 ON B_CRM_SL_REL (SL_ENTITY_TYPE, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_SL_REL_3 ON B_CRM_SL_REL (SL_ID, TYPE_ID)
/
CREATE INDEX IX_B_CRM_SL_REL_4 ON B_CRM_SL_REL (SL_LAST_UPDATED, SL_PARENT_ENTITY_TYPE, PARENT_ENTITY_ID, LVL, SL_ENTITY_TYPE, SL_EVENT_ID, SL_ID)
/
CREATE TABLE B_CRM_SL_SUBSCR
(
	USER_ID NUMBER(18) NOT NULL,
	SL_ENTITY_TYPE VARCHAR2(50 CHAR) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	TYPE_ID NUMBER(3) NOT NULL,
	CONSTRAINT PK_B_CRM_SL_SUBSCR PRIMARY KEY (USER_ID, SL_ENTITY_TYPE, ENTITY_ID, TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_SL_SUBSCR_1 ON B_CRM_SL_SUBSCR (SL_ENTITY_TYPE, ENTITY_ID, TYPE_ID)
/
CREATE TABLE B_CRM_DP_ORG_MCD
(
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	TITLE VARCHAR(256 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_DP_ORG_MCD PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_DP_ORG_MCD_1 ON B_CRM_DP_ORG_MCD (TITLE, ENTITY_TYPE_ID, ENTITY_ID, ID)
/
CREATE INDEX IX_B_CRM_DP_ORG_MCD_2 ON B_CRM_DP_ORG_MCD (ENTITY_TYPE_ID, ENTITY_ID, ID)
/
CREATE SEQUENCE SQ_B_CRM_DP_ORG_MCD
/
CREATE OR REPLACE TRIGGER B_CRM_DP_ORG_MCD_INSERT BEFORE INSERT ON B_CRM_DP_ORG_MCD FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_DP_ORG_MCD.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CRM_DP_COMM_MCD
(
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	TYPE VARCHAR(32 CHAR) NOT NULL,
	VALUE VARCHAR(256 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_DP_COMM_MCD PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_DP_COMM_MCD_1 ON B_CRM_DP_COMM_MCD (TYPE, VALUE, ENTITY_TYPE_ID, ENTITY_ID, ID)
/
CREATE INDEX IX_B_CRM_DP_COMM_MCD_2 ON B_CRM_DP_COMM_MCD (ENTITY_TYPE_ID, ENTITY_ID, TYPE, ID)
/
CREATE SEQUENCE SQ_B_CRM_DP_COMM_MCD
/
CREATE OR REPLACE TRIGGER B_CRM_DP_COMM_MCD_INSERT BEFORE INSERT ON B_CRM_DP_COMM_MCD FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_DP_COMM_MCD.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_CRM_DP_PRSN_MCD
(
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	LAST_NAME VARCHAR (64 CHAR) NOT NULL,
	NAME VARCHAR (64 CHAR),
	SECOND_NAME VARCHAR (64 CHAR),
	CONSTRAINT PK_B_CRM_DP_PRSN_MCD PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_DP_PRSN_MCD_1 ON B_CRM_DP_PRSN_MCD (LAST_NAME, NAME, SECOND_NAME, ENTITY_TYPE_ID, ENTITY_ID, ID)
/
CREATE INDEX IX_B_CRM_DP_PRSN_MCD_2 ON B_CRM_DP_PRSN_MCD (ENTITY_TYPE_ID, ENTITY_ID, ID)
/
CREATE INDEX IX_B_CRM_DP_PRSN_MCD_3 ON B_CRM_DP_PRSN_MCD (LAST_NAME, ENTITY_TYPE_ID, ENTITY_ID, NAME, SECOND_NAME, ID)
/
CREATE INDEX IX_B_CRM_DP_PRSN_MCD_4 ON B_CRM_DP_PRSN_MCD (ENTITY_TYPE_ID, ENTITY_ID, LAST_NAME, NAME, SECOND_NAME, ID)
/
CREATE INDEX IX_B_CRM_DP_PRSN_MCD_5 ON B_CRM_DP_PRSN_MCD (ENTITY_TYPE_ID, LAST_NAME, NAME, SECOND_NAME)
/
CREATE SEQUENCE SQ_B_CRM_DP_PRSN_MCD
/
CREATE OR REPLACE TRIGGER B_CRM_DP_PRSN_MCD_INSERT BEFORE INSERT ON B_CRM_DP_PRSN_MCD FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
		SELECT SQ_B_CRM_DP_PRSN_MCD.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE TABLE B_CRM_QUOTE
(
	ID  NUMBER(18) NOT NULL,
	DATE_CREATE DATE NOT NULL,
	DATE_MODIFY DATE NOT NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	ASSIGNED_BY_ID NUMBER(18) NULL,
	OPENED CHAR(1 CHAR) default 'N' NULL,
	LEAD_ID NUMBER(18) NULL,
	DEAL_ID NUMBER(18) NULL,
	COMPANY_ID NUMBER(18) NULL,
	CONTACT_ID NUMBER(18) NULL,
	PERSON_TYPE_ID NUMBER(18) NOT NULL,
	MYCOMPANY_ID NUMBER(18) NULL,
	TITLE VARCHAR2(255 CHAR) NULL,
	STATUS_ID VARCHAR2(50 CHAR) NULL,
	CLOSED CHAR(1 CHAR) default 'N' NULL,
	OPPORTUNITY NUMBER(18, 2) NULL,
	TAX_VALUE NUMBER(18, 2) NULL,
	CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	OPPORTUNITY_ACCOUNT NUMBER(18, 2) NULL,
	TAX_VALUE_ACCOUNT NUMBER(18, 2) NULL,
	ACCOUNT_CURRENCY_ID VARCHAR2(50 CHAR) NULL,
	COMMENTS CLOB NULL,
	COMMENTS_TYPE NUMBER(3) NULL,
	BEGINDATE DATE NULL,
	CLOSEDATE DATE NULL,
	EXCH_RATE NUMBER(20, 4) DEFAULT '1' NULL,
	QUOTE_NUMBER VARCHAR2(100 CHAR) NULL,
	CONTENT CLOB NULL,
	CONTENT_TYPE NUMBER(3) NULL,
	TERMS VARCHAR2(2000 CHAR) NULL,
	TERMS_TYPE NUMBER(3) NULL,
	STORAGE_TYPE_ID NUMBER(3) NULL,
	STORAGE_ELEMENT_IDS CLOB NULL,
	LOCATION_ID VARCHAR2(100 CHAR) NULL,
	WEBFORM_ID NUMBER(18) NULL,
	CLIENT_TITLE VARCHAR2(255 CHAR) NULL,
	CLIENT_ADDR VARCHAR2(255 CHAR) NULL,
	CLIENT_CONTACT VARCHAR2(255 CHAR) NULL,
	CLIENT_EMAIL VARCHAR2(255 CHAR) NULL,
	CLIENT_PHONE VARCHAR2(255 CHAR) NULL,
	CLIENT_TP_ID VARCHAR2(255 CHAR) NULL,
	CLIENT_TPA_ID VARCHAR2(255 CHAR) NULL,
	CONSTRAINT PK_B_CRM_QUOTE PRIMARY KEY (ID)
)
/
CREATE INDEX IX_QUOTE_1 ON B_CRM_QUOTE (STATUS_ID, ASSIGNED_BY_ID)
/
CREATE INDEX IX_QUOTE_2 ON B_CRM_QUOTE (COMPANY_ID)
/
CREATE INDEX IX_QUOTE_3 ON B_CRM_QUOTE (CONTACT_ID)
/
CREATE INDEX IX_QUOTE_4 ON B_CRM_QUOTE (DEAL_ID)
/
CREATE INDEX IX_QUOTE_5 ON B_CRM_QUOTE (LEAD_ID)
/
CREATE INDEX IX_QUOTE_6 ON B_CRM_QUOTE (WEBFORM_ID)
/
CREATE UNIQUE INDEX IXS_QUOTE_NUMBER ON B_CRM_QUOTE(QUOTE_NUMBER)
/
CREATE SEQUENCE SQ_B_CRM_QUOTE
/
CREATE OR REPLACE TRIGGER B_CRM_QUOTE_INSERT
BEFORE INSERT
ON B_CRM_QUOTE
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_QUOTE.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/
CREATE TABLE B_CRM_BIZ_TYPE(
	CODE VARCHAR(32 CHAR) NOT NULL,
	NAME VARCHAR(256 CHAR) NOT NULL,
	LANG VARCHAR(2 CHAR),
	CONSTRAINT PK_B_CRM_BIZ_TYPE PRIMARY KEY (CODE)
)
/
CREATE TABLE B_CRM_QUOTE_ELEM
(
	QUOTE_ID NUMBER(18) NOT NULL,
	STORAGE_TYPE_ID NUMBER(3) NOT NULL,
	ELEMENT_ID NUMBER(18) NOT NULL,
	CONSTRAINT PK_B_CRM_QUOTE_ELEM PRIMARY KEY (QUOTE_ID, STORAGE_TYPE_ID, ELEMENT_ID)
)
/

CREATE TABLE B_CRM_DP_INDEX(
	USER_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	TYPE_ID NUMBER(3) NOT NULL,
	MATCH_HASH VARCHAR2(32 CHAR) NOT NULL,
	MATCHES CLOB NULL,
	QUANTITY NUMBER(18) NOT NULL,
	ROOT_ENTITY_ID NUMBER(18) NOT NULL,
	ROOT_ENTITY_NAME_FLAG CHAR(1 CHAR) NOT NULL,
	ROOT_ENTITY_NAME VARCHAR(256 CHAR) NOT NULL,
	ROOT_ENTITY_TITLE_FLAG CHAR(1 CHAR) NOT NULL,
	ROOT_ENTITY_TITLE VARCHAR(256 CHAR) NOT NULL,
	ROOT_ENTITY_PHONE_FLAG CHAR(1 CHAR) NOT NULL,
	ROOT_ENTITY_PHONE VARCHAR(256 CHAR) NOT NULL,
	ROOT_ENTITY_EMAIL_FLAG CHAR(1 CHAR) NOT NULL,
	ROOT_ENTITY_EMAIL VARCHAR(256 CHAR) NOT NULL,
	IS_JUNK CHAR(1 CHAR) NULL,
	CONSTRAINT PK_B_CRM_DP_IND PRIMARY KEY (USER_ID, ENTITY_TYPE_ID, TYPE_ID, MATCH_HASH)
)
/
CREATE INDEX IX_B_CRM_DP_INDEX_1 ON B_CRM_DP_INDEX (USER_ID, ENTITY_TYPE_ID, ROOT_ENTITY_NAME_FLAG, ROOT_ENTITY_NAME, TYPE_ID)
/
CREATE INDEX IX_B_CRM_DP_INDEX_2 ON B_CRM_DP_INDEX (USER_ID, ENTITY_TYPE_ID, ROOT_ENTITY_TITLE_FLAG, ROOT_ENTITY_TITLE, TYPE_ID)
/
CREATE INDEX IX_B_CRM_DP_INDEX_3 ON B_CRM_DP_INDEX (USER_ID, ENTITY_TYPE_ID, ROOT_ENTITY_PHONE_FLAG, ROOT_ENTITY_PHONE, TYPE_ID)
/
CREATE INDEX IX_B_CRM_DP_INDEX_4 ON B_CRM_DP_INDEX (USER_ID, ENTITY_TYPE_ID, ROOT_ENTITY_EMAIL_FLAG, ROOT_ENTITY_EMAIL, TYPE_ID)
/
CREATE INDEX IX_B_CRM_DP_INDEX_5 ON B_CRM_DP_INDEX (MATCH_HASH, TYPE_ID, ENTITY_TYPE_ID)
/
CREATE INDEX IX_B_CRM_DP_IND_6 ON B_CRM_DP_INDEX (ROOT_ENTITY_ID, ENTITY_TYPE_ID)
/

CREATE TABLE B_CRM_DP_INDEX_MISMATCH(
	USER_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	TYPE_ID NUMBER(3) NOT NULL,
	MATCH_HASH VARCHAR2(32 CHAR) NOT NULL,
	L_ENTITY_ID NUMBER(18) NOT NULL,
	R_ENTITY_ID NUMBER(18) NOT NULL,
	CONSTRAINT PK_B_CRM_DP_IND_MISM PRIMARY KEY (USER_ID, ENTITY_TYPE_ID, TYPE_ID, MATCH_HASH, L_ENTITY_ID, R_ENTITY_ID)
)
/
CREATE INDEX IX_B_CRM_DP_IND_MISM_1 ON B_CRM_DP_INDEX_MISMATCH (L_ENTITY_ID, ENTITY_TYPE_ID)
/
CREATE INDEX IX_B_CRM_DP_IND_MISM_2 ON B_CRM_DP_INDEX_MISMATCH (R_ENTITY_ID, ENTITY_TYPE_ID)
/

CREATE TABLE B_CRM_DP_ENTITY_STAT(
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	RANKING_DATA VARCHAR2(512 CHAR) NULL,
	CONSTRAINT PK_B_CRM_DP_ENTITY_STAT PRIMARY KEY (ENTITY_ID, ENTITY_TYPE_ID)
)
/

CREATE TABLE B_CRM_DP_ENTITY_HASH(
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	TYPE_ID NUMBER(3) NOT NULL,
	MATCH_HASH VARCHAR(32 CHAR) NOT NULL,
	IS_PRIMARY CHAR(1 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_DP_ENTITY_HASH PRIMARY KEY (ENTITY_ID, ENTITY_TYPE_ID, TYPE_ID, MATCH_HASH)
)
/
CREATE INDEX IX_B_CRM_DP_ENT_HASH_1 ON B_CRM_DP_ENTITY_HASH (ENTITY_TYPE_ID, TYPE_ID, MATCH_HASH, ENTITY_ID, IS_PRIMARY)
/

CREATE TABLE B_CRM_ADDR(
	TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	ANCHOR_TYPE_ID NUMBER(3),
	ANCHOR_ID NUMBER(18),
	ADDRESS_1 VARCHAR(256 CHAR),
	ADDRESS_2 VARCHAR(128 CHAR),
	CITY VARCHAR(128 CHAR),
	POSTAL_CODE VARCHAR(16 CHAR),
	REGION VARCHAR(128 CHAR),
	PROVINCE VARCHAR(128 CHAR),
	COUNTRY VARCHAR(128 CHAR),
	COUNTRY_CODE VARCHAR(100 CHAR),
	CONSTRAINT PK_B_CRM_ADDR PRIMARY KEY (TYPE_ID, ENTITY_TYPE_ID, ENTITY_ID)
)
/
CREATE INDEX IX_B_CRM_ADDR_1 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, ADDRESS_1, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_2 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, ADDRESS_2, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_3 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, CITY, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_4 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, POSTAL_CODE, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_5 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, REGION, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_6 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, PROVINCE, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_7 ON B_CRM_ADDR (ENTITY_TYPE_ID, TYPE_ID, COUNTRY, ENTITY_ID)
/
CREATE INDEX IX_B_CRM_ADDR_8 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, ADDRESS_1, ANCHOR_ID)
/
CREATE INDEX IX_B_CRM_ADDR_9 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, ADDRESS_2, ANCHOR_ID)
/
CREATE INDEX IX_B_CRM_ADDR_10 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, CITY, ANCHOR_ID)
/
CREATE INDEX IX_B_CRM_ADDR_11 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, POSTAL_CODE, ANCHOR_ID)
/
CREATE INDEX IX_B_CRM_ADDR_12 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, REGION, ANCHOR_ID)
/
CREATE INDEX IX_B_CRM_ADDR_13 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, PROVINCE, ANCHOR_ID)
/
CREATE INDEX IX_B_CRM_ADDR_14 ON B_CRM_ADDR (ANCHOR_TYPE_ID, TYPE_ID, COUNTRY, ANCHOR_ID)
/

CREATE TABLE B_CRM_DEAL_STAGE_HISTORY(
	ID  NUMBER(18) NOT NULL,
	TYPE_ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_TIME DATE NOT NULL,
	CREATED_DATE DATE NULL,
	EFFECTIVE_DATE DATE NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	PERIOD_YEAR NUMBER(18) NOT NULL,
	PERIOD_QUARTER NUMBER(18) NOT NULL,
	PERIOD_MONTH NUMBER(18) NOT NULL,
	START_PERIOD_YEAR NUMBER(18) NOT NULL,
	START_PERIOD_QUARTER NUMBER(18) NOT NULL,
	START_PERIOD_MONTH NUMBER(18) NOT NULL,
	END_PERIOD_YEAR NUMBER(18) NOT NULL,
	END_PERIOD_QUARTER NUMBER(18) NOT NULL,
	END_PERIOD_MONTH NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CATEGORY_ID NUMBER(18) NULL,
	STAGE_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STAGE_ID VARCHAR(50 CHAR) NULL,
	IS_LOST CHAR(1 CHAR) NULL,
	CONSTRAINT PK_B_CRM_DEAL_SHX PRIMARY KEY (ID)
)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_1 ON B_CRM_DEAL_STAGE_HISTORY (OWNER_ID, TYPE_ID, ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_2 ON B_CRM_DEAL_STAGE_HISTORY (TYPE_ID, STAGE_ID, START_DATE, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_3 ON B_CRM_DEAL_STAGE_HISTORY (TYPE_ID, STAGE_ID, END_DATE, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_4 ON B_CRM_DEAL_STAGE_HISTORY (TYPE_ID, STAGE_ID, CREATED_TIME, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_5 ON B_CRM_DEAL_STAGE_HISTORY (PERIOD_YEAR, PERIOD_MONTH, RESPONSIBLE_ID, OWNER_ID, START_DATE, END_DATE)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_6 ON B_CRM_DEAL_STAGE_HISTORY (PERIOD_YEAR, PERIOD_MONTH, STAGE_SEMANTIC_ID, RESPONSIBLE_ID, OWNER_ID, START_DATE, END_DATE)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_7 ON B_CRM_DEAL_STAGE_HISTORY (PERIOD_YEAR, PERIOD_MONTH, OWNER_ID, START_DATE, END_DATE)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_8 ON B_CRM_DEAL_STAGE_HISTORY (TYPE_ID, OWNER_ID, END_DATE, START_DATE)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_9 ON B_CRM_DEAL_STAGE_HISTORY (TYPE_ID, STAGE_ID, CREATED_DATE, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_10 ON B_CRM_DEAL_STAGE_HISTORY (CATEGORY_ID, TYPE_ID, STAGE_ID, START_DATE, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_11 ON B_CRM_DEAL_STAGE_HISTORY (CATEGORY_ID, TYPE_ID, STAGE_ID, END_DATE, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_12 ON B_CRM_DEAL_STAGE_HISTORY (CATEGORY_ID, TYPE_ID, STAGE_ID, CREATED_DATE, RESPONSIBLE_ID, OWNER_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_13 ON B_CRM_DEAL_STAGE_HISTORY (IS_LOST, CREATED_DATE, OWNER_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_14 ON B_CRM_DEAL_STAGE_HISTORY (CATEGORY_ID, IS_LOST, CREATED_DATE, OWNER_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SHX_15 ON B_CRM_DEAL_STAGE_HISTORY (CATEGORY_ID, IS_LOST, STAGE_ID, EFFECTIVE_DATE, OWNER_ID, RESPONSIBLE_ID)
/

CREATE SEQUENCE SQ_B_CRM_DEAL_STAGE_HISTORY
/
CREATE OR REPLACE TRIGGER B_CRM_DEAL_SHX_INSERT
BEFORE INSERT
ON B_CRM_DEAL_STAGE_HISTORY
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_DEAL_STAGE_HISTORY.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/

CREATE TABLE B_CRM_DEAL_SUM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	PERIOD_YEAR NUMBER(18) NOT NULL,
	PERIOD_QUARTER NUMBER(18) NOT NULL,
	PERIOD_MONTH NUMBER(18) NOT NULL,
	PERIOD_DAY NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CATEGORY_ID NUMBER(18) NULL,
	STAGE_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STAGE_ID VARCHAR(50 CHAR) NULL,
	IS_LOST CHAR(1 CHAR) NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,2) NULL,
	UF_SUM_1 NUMBER(18,2) NULL,
	UF_SUM_2 NUMBER(18,2) NULL,
	UF_SUM_3 NUMBER(18,2) NULL,
	UF_SUM_4 NUMBER(18,2) NULL,
	UF_SUM_5 NUMBER(18,2) NULL,
	UF_ATTR_1 NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_DEAL_SSTAT PRIMARY KEY (OWNER_ID, CREATED_DATE)
)
/
CREATE INDEX IX_B_CRM_DEAL_SSTAT_1 ON B_CRM_DEAL_SUM_STAT (STAGE_SEMANTIC_ID, OWNER_ID, END_DATE, START_DATE, CREATED_DATE, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SSTAT_2 ON B_CRM_DEAL_SUM_STAT (IS_LOST, OWNER_ID, END_DATE, START_DATE, CREATED_DATE, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SSTAT_3 ON B_CRM_DEAL_SUM_STAT (END_DATE, START_DATE, OWNER_ID, CREATED_DATE, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_SSTAT_4 ON B_CRM_DEAL_SUM_STAT (CATEGORY_ID, END_DATE, START_DATE, OWNER_ID, CREATED_DATE, RESPONSIBLE_ID)
/

CREATE TABLE B_CRM_DEAL_INV_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	PERIOD_YEAR NUMBER(18) NOT NULL,
	PERIOD_QUARTER NUMBER(18) NOT NULL,
	PERIOD_MONTH NUMBER(18) NOT NULL,
	PERIOD_DAY NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CATEGORY_ID NUMBER(18) NULL,
	STAGE_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STAGE_ID VARCHAR(50 CHAR) NULL,
	IS_LOST CHAR(1 CHAR) NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	INVOICE_SUM NUMBER(18,2) NULL,
	INVOICE_QTY NUMBER(18) NULL,
	TOTAL_INVOICE_SUM NUMBER(18,2) NULL,
	TOTAL_INVOICE_QTY NUMBER(18) NULL,
	TOTAL_SUM NUMBER(18,2) NULL,
	TOTAL_OWED NUMBER(18,2) NULL,
	UF_ATTR_1 NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_DEAL_ISTAT PRIMARY KEY (OWNER_ID, CREATED_DATE)
)
/
CREATE INDEX IX_B_CRM_DEAL_ISTAT_1 ON B_CRM_DEAL_INV_STAT (STAGE_SEMANTIC_ID, OWNER_ID, END_DATE, START_DATE, CREATED_DATE, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_ISTAT_2 ON B_CRM_DEAL_INV_STAT (IS_LOST, OWNER_ID, END_DATE, START_DATE, CREATED_DATE, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_ISTAT_3 ON B_CRM_DEAL_INV_STAT (CATEGORY_ID, IS_LOST, OWNER_ID, END_DATE, START_DATE, CREATED_DATE, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_ISTAT_4 ON B_CRM_DEAL_INV_STAT (CATEGORY_ID, STAGE_SEMANTIC_ID, OWNER_ID, END_DATE, START_DATE, CREATED_DATE, RESPONSIBLE_ID)
/

CREATE TABLE B_CRM_DEAL_ACT_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	DEADLINE_YEAR NUMBER(18) NOT NULL,
	DEADLINE_QUARTER NUMBER(18) NOT NULL,
	DEADLINE_MONTH NUMBER(18) NOT NULL,
	DEADLINE_DAY NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CATEGORY_ID NUMBER(18) NULL,
	STAGE_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STAGE_ID VARCHAR(50 CHAR) NULL,
	IS_LOST CHAR(1 CHAR) NULL,
	CALL_QTY NUMBER(18) NULL,
	MEETING_QTY NUMBER(18) NULL,
	EMAIL_QTY NUMBER(18) NULL,
	UF_ATTR_1 NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_DEAL_ASTAT PRIMARY KEY (OWNER_ID, DEADLINE_DATE)
)
/
CREATE INDEX IX_B_CRM_DEAL_ASTAT_1 ON B_CRM_DEAL_ACT_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, CALL_QTY, MEETING_QTY, EMAIL_QTY)
/
CREATE INDEX IX_B_CRM_DEAL_ASTAT_2 ON B_CRM_DEAL_ACT_STAT (DEADLINE_DATE, OWNER_ID, CALL_QTY, MEETING_QTY, EMAIL_QTY)
/
CREATE INDEX IX_B_CRM_DEAL_ASTAT_3 ON B_CRM_DEAL_ACT_STAT(IS_LOST, DEADLINE_DATE, OWNER_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_ASTAT_4 ON B_CRM_DEAL_ACT_STAT(CATEGORY_ID, IS_LOST, DEADLINE_DATE, OWNER_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_DEAL_ASTAT_5 ON B_CRM_DEAL_ACT_STAT(CATEGORY_ID, RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, CALL_QTY, MEETING_QTY, EMAIL_QTY)
/

CREATE TABLE B_CRM_CONV_MAP(
	SRC_TYPE_ID NUMBER(18) NOT NULL,
	DST_TYPE_ID NUMBER(18) NOT NULL,
	LAST_UPDATED DATE NOT NULL,
	DATA CLOB NULL,
	CONSTRAINT PK_B_CRM_CONV_MAP PRIMARY KEY (DST_TYPE_ID, SRC_TYPE_ID)
)
/

CREATE TABLE B_CRM_LEAD_STATUS_HISTORY(
	ID  NUMBER(18) NOT NULL,
	TYPE_ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_TIME DATE NOT NULL,
	CREATED_DATE DATE NULL,
	PERIOD_YEAR NUMBER(18) NOT NULL,
	PERIOD_QUARTER NUMBER(18) NOT NULL,
	PERIOD_MONTH NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STATUS_ID VARCHAR(50 CHAR) NULL,
	IS_IN_WORK CHAR(1 CHAR) NULL,
	IS_JUNK CHAR(1 CHAR) NULL,
	CONSTRAINT PK_B_CRM_LEAD_SHX PRIMARY KEY (ID)
)
/

CREATE INDEX IX_B_CRM_LEAD_SHX_1 ON B_CRM_LEAD_STATUS_HISTORY (OWNER_ID, TYPE_ID, ID)
/
CREATE INDEX IX_B_CRM_LEAD_SHX_2 ON B_CRM_LEAD_STATUS_HISTORY (TYPE_ID, CREATED_DATE, STATUS_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_LEAD_SHX_3 ON B_CRM_LEAD_STATUS_HISTORY (TYPE_ID, IS_JUNK, CREATED_DATE)
/
CREATE INDEX IX_B_CRM_LEAD_SHX_4 ON B_CRM_LEAD_STATUS_HISTORY (TYPE_ID, IS_JUNK, RESPONSIBLE_ID, CREATED_DATE)
/
CREATE INDEX IX_B_CRM_LEAD_SHX_5 ON B_CRM_LEAD_STATUS_HISTORY (IS_IN_WORK, OWNER_ID, CREATED_DATE)
/
CREATE INDEX IX_B_CRM_LEAD_SHX_6 ON B_CRM_LEAD_STATUS_HISTORY (IS_IN_WORK, OWNER_ID, RESPONSIBLE_ID, CREATED_DATE)
/
CREATE INDEX IX_B_CRM_LEAD_SHX_7 ON B_CRM_LEAD_STATUS_HISTORY (IS_JUNK, STATUS_ID, CREATED_DATE, OWNER_ID, RESPONSIBLE_ID)
/

CREATE SEQUENCE SQ_B_CRM_LEAD_STATUS_HISTORY
/
CREATE OR REPLACE TRIGGER B_CRM_LEAD_SHX_INSERT
BEFORE INSERT
ON B_CRM_LEAD_STATUS_HISTORY
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_LEAD_STATUS_HISTORY.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/

CREATE TABLE B_CRM_LEAD_SUM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	PERIOD_YEAR NUMBER(18) NOT NULL,
	PERIOD_QUARTER NUMBER(18) NOT NULL,
	PERIOD_MONTH NUMBER(18) NOT NULL,
	PERIOD_DAY NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STATUS_ID VARCHAR(50 CHAR) NULL,
	SOURCE_ID VARCHAR(50 CHAR) NULL,
	IS_JUNK CHAR(1 CHAR) NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,2) NULL,
	UF_SUM_1 NUMBER(18,2) NULL,
	UF_SUM_2 NUMBER(18,2) NULL,
	UF_SUM_3 NUMBER(18,2) NULL,
	UF_SUM_4 NUMBER(18,2) NULL,
	UF_SUM_5 NUMBER(18,2) NULL,
	UF_ATTR_1 NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_LEAD_SSTAT PRIMARY KEY (OWNER_ID, CREATED_DATE)
)
/

CREATE INDEX IX_B_CRM_LEAD_SSTAT_1 ON B_CRM_LEAD_SUM_STAT(CREATED_DATE, OWNER_ID, SOURCE_ID)
/
CREATE INDEX IX_B_CRM_LEAD_SSTAT_2 ON B_CRM_LEAD_SUM_STAT(SOURCE_ID, OWNER_ID, CREATED_DATE)
/

CREATE TABLE B_CRM_LEAD_ACT_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	DEADLINE_YEAR NUMBER(18) NOT NULL,
	DEADLINE_QUARTER NUMBER(18) NOT NULL,
	DEADLINE_MONTH NUMBER(18) NOT NULL,
	DEADLINE_DAY NUMBER(18) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STATUS_ID VARCHAR(50 CHAR) NULL,
	IS_JUNK CHAR(1 CHAR) NULL,
	CALL_QTY NUMBER(18) NULL,
	MEETING_QTY NUMBER(18) NULL,
	EMAIL_QTY NUMBER(18) NULL,
	UF_ATTR_1 NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_LEAD_ASTAT PRIMARY KEY (OWNER_ID, DEADLINE_DATE)
)
/

CREATE INDEX IX_B_CRM_LEAD_ASTAT_1 ON B_CRM_LEAD_ACT_STAT(RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, CALL_QTY, MEETING_QTY, EMAIL_QTY)
/
CREATE INDEX IX_B_CRM_LEAD_ASTAT_2 ON B_CRM_LEAD_ACT_STAT(DEADLINE_DATE, OWNER_ID, CALL_QTY, MEETING_QTY, EMAIL_QTY)
/
CREATE INDEX IX_B_CRM_LEAD_ASTAT_3 ON B_CRM_LEAD_ACT_STAT(IS_JUNK, OWNER_ID, DEADLINE_DATE)
/
CREATE INDEX IX_B_CRM_LEAD_ASTAT_4 ON B_CRM_LEAD_ACT_STAT(IS_JUNK, OWNER_ID, RESPONSIBLE_ID, DEADLINE_DATE)
/
CREATE INDEX IX_B_CRM_LEAD_ASTAT_5 ON B_CRM_LEAD_ACT_STAT(RESPONSIBLE_ID, DEADLINE_DATE, CALL_QTY, MEETING_QTY, EMAIL_QTY)
/

CREATE TABLE B_CRM_LEAD_CONV_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	ENTRY_DATE DATE NOT NULL,
	CREATED_DATE DATE NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	DEAL_QTY NUMBER(18) NULL,
	CONTACT_QTY NUMBER(18) NULL,
	COMPANY_QTY NUMBER(18) NULL,
	TOTALS_DATE DATE NOT NULL,
	CONSTRAINT PK_B_CRM_LEAD_CSTAT PRIMARY KEY (OWNER_ID, ENTRY_DATE)
)
/

CREATE INDEX IX_B_CRM_LEAD_CSTAT_1 ON B_CRM_LEAD_CONV_STAT(RESPONSIBLE_ID, ENTRY_DATE, OWNER_ID, DEAL_QTY, CONTACT_QTY, COMPANY_QTY)
/
CREATE INDEX IX_B_CRM_LEAD_CSTAT_2 ON B_CRM_LEAD_CONV_STAT(CREATED_DATE, OWNER_ID, DEAL_QTY, CONTACT_QTY, COMPANY_QTY)
/

CREATE TABLE B_CRM_INV_STATUS_HISTORY(
	ID  NUMBER(18) NOT NULL,
	TYPE_ID NUMBER(18) NOT NULL,
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_TIME DATE NOT NULL,
	CREATED_DATE DATE NULL,
	BILL_DATE DATE NOT NULL,
	PAY_BEFORE_DATE DATE NOT NULL,
	ACTIVITY_DATE DATE NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STATUS_ID VARCHAR(50 CHAR) NULL,
	IS_NEW CHAR(1 CHAR) NULL,
	IS_JUNK CHAR(1 CHAR) NULL,
	CONSTRAINT PK_CRM_INV_SHX PRIMARY KEY (ID)
)
/

CREATE INDEX IX_B_CRM_INV_SHX_1 ON B_CRM_INV_STATUS_HISTORY(ACTIVITY_DATE, OWNER_ID, ID)
/
CREATE INDEX IX_B_CRM_INV_SHX_2 ON B_CRM_INV_STATUS_HISTORY(TYPE_ID, CREATED_DATE, STATUS_ID, OWNER_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_INV_SHX_3 ON B_CRM_INV_STATUS_HISTORY(STATUS_SEMANTIC_ID, ACTIVITY_DATE, OWNER_ID, ID)
/
CREATE INDEX IX_B_CRM_INV_SHX_4 ON B_CRM_INV_STATUS_HISTORY(IS_JUNK, STATUS_ID, CREATED_DATE, OWNER_ID, RESPONSIBLE_ID)
/

CREATE SEQUENCE SQ_B_CRM_INV_STATUS_HISTORY
/
CREATE OR REPLACE TRIGGER B_CRM_INV_SHX_INSERT
BEFORE INSERT
ON B_CRM_INV_STATUS_HISTORY
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_INV_STATUS_HISTORY.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/

CREATE TABLE B_CRM_INVOICE_SUM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	BILL_DATE DATE NOT NULL,
	PAY_BEFORE_DATE DATE NOT NULL,
	PAID_DATE DATE NULL,
	IS_PAID_INTIME CHAR(1 CHAR) NULL,
	CLOSED_DATE DATE NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	COMPANY_ID NUMBER(18) NULL,
	CONTACT_ID NUMBER(18) NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	STATUS_ID VARCHAR(50 CHAR) NULL,
	IS_JUNK CHAR(1 CHAR) NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,2) NULL,
	UF_SUM_1 NUMBER(18,2) NULL,
	UF_SUM_2 NUMBER(18,2) NULL,
	UF_SUM_3 NUMBER(18,2) NULL,
	UF_SUM_4 NUMBER(18,2) NULL,
	UF_SUM_5 NUMBER(18,2) NULL,
	UF_ATTR_1 NUMBER(18) NULL,
	CONSTRAINT PK_CRM_INV_SUM_STAT PRIMARY KEY (OWNER_ID, CREATED_DATE)
)
/

CREATE INDEX IX_B_CRM_INV_SSTAT_1 ON B_CRM_INVOICE_SUM_STAT(CREATED_DATE, OWNER_ID, RESPONSIBLE_ID)
/
CREATE INDEX IX_B_CRM_INV_SSTAT_2 ON B_CRM_INVOICE_SUM_STAT(STATUS_SEMANTIC_ID, CREATED_DATE, OWNER_ID)
/
CREATE INDEX IX_B_CRM_INV_SSTAT_3 ON B_CRM_INVOICE_SUM_STAT(STATUS_SEMANTIC_ID, PAY_BEFORE_DATE, OWNER_ID, CREATED_DATE)
/
CREATE INDEX IX_B_CRM_INV_SSTAT_4 ON B_CRM_INVOICE_SUM_STAT(COMPANY_ID, STATUS_SEMANTIC_ID, IS_PAID_INTIME, OWNER_ID, CREATED_DATE)
/
CREATE INDEX IX_B_CRM_INV_SSTAT_5 ON B_CRM_INVOICE_SUM_STAT(CONTACT_ID, STATUS_SEMANTIC_ID, IS_PAID_INTIME, OWNER_ID, CREATED_DATE)
/

CREATE TABLE B_CRM_REQUISITE(
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	PRESET_ID NUMBER(18) DEFAULT 0 NOT NULL,
	DATE_CREATE DATE NOT NULL,
	DATE_MODIFY DATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	CODE VARCHAR2(45 CHAR) NULL,
	XML_ID VARCHAR2(45 CHAR) NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	RQ_NAME VARCHAR2(150 CHAR) NULL,
	RQ_FIRST_NAME VARCHAR2(50 CHAR) NULL,
	RQ_LAST_NAME VARCHAR2(50 CHAR) NULL,
	RQ_SECOND_NAME VARCHAR2(50 CHAR) NULL,
	RQ_COMPANY_NAME VARCHAR2(255 CHAR) NULL,
	RQ_COMPANY_FULL_NAME VARCHAR2(300 CHAR) NULL,
	RQ_COMPANY_REG_DATE VARCHAR2(30 CHAR) NULL,
	RQ_DIRECTOR VARCHAR2(150 CHAR) NULL,
	RQ_ACCOUNTANT VARCHAR2(150 CHAR) NULL,
	RQ_CEO_NAME VARCHAR2(150 CHAR) NULL,
	RQ_CEO_WORK_POS VARCHAR2(150 CHAR) NULL,
	RQ_CONTACT VARCHAR2(150 CHAR) NULL,
	RQ_EMAIL VARCHAR2(255 CHAR) NULL,
	RQ_PHONE VARCHAR2(30 CHAR) NULL,
	RQ_FAX VARCHAR2(30 CHAR) NULL,
	RQ_IDENT_DOC VARCHAR2(255 CHAR) NULL,
	RQ_IDENT_DOC_SER VARCHAR2(25 CHAR) NULL,
	RQ_IDENT_DOC_NUM VARCHAR2(25 CHAR) NULL,
	RQ_IDENT_DOC_PERS_NUM VARCHAR2(25 CHAR) NULL,
	RQ_IDENT_DOC_DATE VARCHAR2(30 CHAR) NULL,
	RQ_IDENT_DOC_ISSUED_BY VARCHAR2(255 CHAR) NULL,
	RQ_IDENT_DOC_DEP_CODE VARCHAR2(25 CHAR) NULL,
	RQ_INN VARCHAR2(15 CHAR) NULL,
	RQ_KPP VARCHAR2(9 CHAR) NULL,
	RQ_USRLE VARCHAR2(20 CHAR) NULL,
	RQ_IFNS VARCHAR2(255 CHAR) NULL,
	RQ_OGRN VARCHAR2(13 CHAR) NULL,
	RQ_OGRNIP VARCHAR2(15 CHAR) NULL,
	RQ_OKPO VARCHAR2(12 CHAR) NULL,
	RQ_OKTMO VARCHAR2(11 CHAR) NULL,
	RQ_OKVED VARCHAR2(255 CHAR) NULL,
	RQ_EDRPOU VARCHAR2(10 CHAR) NULL,
	RQ_DRFO VARCHAR2(10 CHAR) NULL,
	RQ_KBE VARCHAR2(2 CHAR) NULL,
	RQ_IIN VARCHAR2(12 CHAR) NULL,
	RQ_BIN VARCHAR2(12 CHAR) NULL,
	RQ_ST_CERT_SER VARCHAR2(10 CHAR) NULL,
	RQ_ST_CERT_NUM VARCHAR2(15 CHAR) NULL,
	RQ_ST_CERT_DATE VARCHAR2(30 CHAR) NULL,
	RQ_VAT_PAYER CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	RQ_VAT_ID VARCHAR2(20 CHAR) NULL,
	RQ_VAT_CERT_SER VARCHAR2(10 CHAR) NULL,
	RQ_VAT_CERT_NUM VARCHAR2(15 CHAR) NULL,
	RQ_VAT_CERT_DATE VARCHAR2(30 CHAR) NULL,
	RQ_RESIDENCE_COUNTRY VARCHAR2(128 CHAR) NULL,
	RQ_BASE_DOC VARCHAR2(255 CHAR) NULL,
	CONSTRAINT PK_B_CRM_REQUISITE PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_REQUISITE
/
CREATE OR REPLACE TRIGGER B_CRM_REQUISITE_INSERT BEFORE INSERT ON B_CRM_REQUISITE FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_REQUISITE.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/
CREATE INDEX IX_B_CRM_REQUISITE_1 ON B_CRM_REQUISITE (ENTITY_ID, ENTITY_TYPE_ID, SORT, ID)
/
CREATE INDEX IX_B_CRM_REQUISITE_2 ON B_CRM_REQUISITE (RQ_NAME)
/
CREATE INDEX IX_B_CRM_REQUISITE_3 ON B_CRM_REQUISITE (RQ_LAST_NAME,RQ_FIRST_NAME,RQ_SECOND_NAME)
/
CREATE INDEX IX_B_CRM_REQUISITE_4 ON B_CRM_REQUISITE (RQ_COMPANY_NAME)
/
CREATE INDEX IX_B_CRM_REQUISITE_5 ON B_CRM_REQUISITE (RQ_DIRECTOR)
/
CREATE INDEX IX_B_CRM_REQUISITE_6 ON B_CRM_REQUISITE (RQ_ACCOUNTANT)
/
CREATE INDEX IX_B_CRM_REQUISITE_7 ON B_CRM_REQUISITE (RQ_CEO_NAME)
/
CREATE INDEX IX_B_CRM_REQUISITE_8 ON B_CRM_REQUISITE (RQ_CONTACT)
/
CREATE INDEX IX_B_CRM_REQUISITE_9 ON B_CRM_REQUISITE (RQ_EMAIL)
/
CREATE INDEX IX_B_CRM_REQUISITE_10 ON B_CRM_REQUISITE (RQ_PHONE)
/
CREATE INDEX IX_B_CRM_REQUISITE_11 ON B_CRM_REQUISITE (RQ_FAX)
/
CREATE INDEX IX_B_CRM_REQUISITE_12 ON B_CRM_REQUISITE (RQ_IDENT_DOC_NUM,RQ_IDENT_DOC_SER)
/
CREATE INDEX IX_B_CRM_REQUISITE_13 ON B_CRM_REQUISITE (RQ_IDENT_DOC_DEP_CODE)
/
CREATE INDEX IX_B_CRM_REQUISITE_14 ON B_CRM_REQUISITE (RQ_INN)
/
CREATE INDEX IX_B_CRM_REQUISITE_15 ON B_CRM_REQUISITE (RQ_KPP)
/
CREATE INDEX IX_B_CRM_REQUISITE_16 ON B_CRM_REQUISITE (RQ_USRLE)
/
CREATE INDEX IX_B_CRM_REQUISITE_17 ON B_CRM_REQUISITE (RQ_IFNS)
/
CREATE INDEX IX_B_CRM_REQUISITE_18 ON B_CRM_REQUISITE (RQ_OGRN)
/
CREATE INDEX IX_B_CRM_REQUISITE_19 ON B_CRM_REQUISITE (RQ_OGRNIP)
/
CREATE INDEX IX_B_CRM_REQUISITE_20 ON B_CRM_REQUISITE (RQ_OKPO)
/
CREATE INDEX IX_B_CRM_REQUISITE_21 ON B_CRM_REQUISITE (RQ_OKTMO)
/
CREATE INDEX IX_B_CRM_REQUISITE_22 ON B_CRM_REQUISITE (RQ_OKVED)
/
CREATE INDEX IX_B_CRM_REQUISITE_23 ON B_CRM_REQUISITE (RQ_EDRPOU)
/
CREATE INDEX IX_B_CRM_REQUISITE_24 ON B_CRM_REQUISITE (RQ_DRFO)
/
CREATE INDEX IX_B_CRM_REQUISITE_25 ON B_CRM_REQUISITE (RQ_KBE)
/
CREATE INDEX IX_B_CRM_REQUISITE_26 ON B_CRM_REQUISITE (RQ_IIN)
/
CREATE INDEX IX_B_CRM_REQUISITE_27 ON B_CRM_REQUISITE (RQ_BIN)
/
CREATE INDEX IX_B_CRM_REQUISITE_28 ON B_CRM_REQUISITE (RQ_VAT_PAYER)
/
CREATE INDEX IX_B_CRM_REQUISITE_29 ON B_CRM_REQUISITE (RQ_VAT_ID)
/
CREATE INDEX IX_B_CRM_REQUISITE_30 ON B_CRM_REQUISITE (RQ_VAT_CERT_NUM,RQ_VAT_CERT_SER)
/
CREATE INDEX IX_B_CRM_REQUISITE_31 ON B_CRM_REQUISITE (RQ_RESIDENCE_COUNTRY)
/
CREATE INDEX IX_B_CRM_REQUISITE_32 ON B_CRM_REQUISITE (RQ_IDENT_DOC_PERS_NUM)
/
CREATE INDEX IX_B_CRM_REQUISITE_33 ON B_CRM_REQUISITE (RQ_ST_CERT_NUM,RQ_ST_CERT_SER)
/
CREATE INDEX IX_B_CRM_REQUISITE_34 ON B_CRM_REQUISITE (ENTITY_TYPE_ID, PRESET_ID)
/
CREATE INDEX IX_B_CRM_REQUISITE_35 ON B_CRM_REQUISITE (ENTITY_TYPE_ID, ENTITY_ID, PRESET_ID)
/

CREATE TABLE B_CRM_PRESET(
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	COUNTRY_ID NUMBER(18) DEFAULT 0 NOT NULL,
	DATE_CREATE DATE NOT NULL,
	DATE_MODIFY DATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	XML_ID VARCHAR2(45 CHAR) NULL,
	ACTIVE char(1 CHAR) default 'Y' NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	SETTINGS CLOB NULL,
	CONSTRAINT PK_B_CRM_PRESET PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_PRESET
/
CREATE OR REPLACE TRIGGER B_CRM_PRESET_INSERT BEFORE INSERT ON B_CRM_PRESET FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_PRESET.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/
CREATE INDEX IX_B_CRM_PRESET_1 ON B_CRM_PRESET (ID, ENTITY_TYPE_ID)
/
CREATE INDEX IX_B_CRM_PRESET_2 ON B_CRM_PRESET (COUNTRY_ID)
/
CREATE TABLE B_CRM_REQUISITE_CFG
(
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(18) NOT NULL,
	SETTINGS CLOB,
	CONSTRAINT PK_B_CRM_REQUISITE_CFG PRIMARY KEY(ENTITY_ID, ENTITY_TYPE_ID)
)
/
CREATE TABLE B_CRM_REQUISITE_LINK
(
	ENTITY_TYPE_ID NUMBER(3)  NOT NULL,
	ENTITY_ID      NUMBER(18) NOT NULL,
	REQUISITE_ID      NUMBER(18) DEFAULT 0 NOT NULL,
	BANK_DETAIL_ID NUMBER(18) DEFAULT 0 NOT NULL,
	MC_REQUISITE_ID   NUMBER(18) DEFAULT 0 NOT NULL,
	MC_BANK_DETAIL_ID NUMBER(18) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_B_CRM_REQUISITE_LINK PRIMARY KEY (ENTITY_TYPE_ID, ENTITY_ID)
)
/
CREATE INDEX IX_CRM_REQUISITE_LINK_1 ON B_CRM_REQUISITE_LINK (REQUISITE_ID)
/
CREATE INDEX IX_CRM_REQUISITE_LINK_2 ON B_CRM_REQUISITE_LINK (MC_REQUISITE_ID)
/

CREATE TABLE B_CRM_BANK_DETAIL(
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_ID NUMBER(18) NOT NULL,
	COUNTRY_ID NUMBER(18) DEFAULT 0 NOT NULL,
	DATE_CREATE DATE NOT NULL,
	DATE_MODIFY DATE NULL,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	MODIFY_BY_ID NUMBER(18) NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	CODE VARCHAR2(45 CHAR) NULL,
	XML_ID VARCHAR2(45 CHAR) NULL,
	ORIGINATOR_ID VARCHAR2(255 CHAR) NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	RQ_BANK_NAME VARCHAR2(255 CHAR) NULL,
	RQ_BANK_ADDR VARCHAR2(255 CHAR) NULL,
	RQ_BANK_ROUTE_NUM VARCHAR2(9 CHAR) NULL,
	RQ_BIK VARCHAR2(11 CHAR) NULL,
	RQ_MFO VARCHAR2(6 CHAR) NULL,
	RQ_ACC_NAME VARCHAR2(150 CHAR) NULL,
	RQ_ACC_NUM VARCHAR2(34 CHAR) NULL,
	RQ_IIK VARCHAR2(20 CHAR) NULL,
	RQ_ACC_CURRENCY VARCHAR2(100 CHAR) NULL,
	RQ_COR_ACC_NUM VARCHAR2(34 CHAR) NULL,
	RQ_IBAN VARCHAR2(34 CHAR) NULL,
	RQ_SWIFT VARCHAR2(11 CHAR) NULL,
	RQ_BIC VARCHAR2(11 CHAR) NULL,
	COMMENTS VARCHAR2(500 CHAR) NULL,
	CONSTRAINT PK_B_CRM_BANK_DETAIL PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_BANK_DETAIL
/
CREATE OR REPLACE TRIGGER B_CRM_BANK_DETAIL_INSERT BEFORE INSERT ON B_CRM_BANK_DETAIL FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_BANK_DETAIL.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_1 ON B_CRM_BANK_DETAIL (ENTITY_ID, ENTITY_TYPE_ID, SORT, ID)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_2 ON B_CRM_BANK_DETAIL (RQ_BANK_NAME)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_3 ON B_CRM_BANK_DETAIL (RQ_BANK_ADDR)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_4 ON B_CRM_BANK_DETAIL (RQ_BANK_ROUTE_NUM)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_5 ON B_CRM_BANK_DETAIL (RQ_BIK)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_6 ON B_CRM_BANK_DETAIL (RQ_MFO)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_7 ON B_CRM_BANK_DETAIL (RQ_ACC_NAME)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_8 ON B_CRM_BANK_DETAIL (RQ_ACC_NUM)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_9 ON B_CRM_BANK_DETAIL (RQ_IIK)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_10 ON B_CRM_BANK_DETAIL (RQ_ACC_CURRENCY)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_11 ON B_CRM_BANK_DETAIL (RQ_COR_ACC_NUM)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_12 ON B_CRM_BANK_DETAIL (RQ_IBAN)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_13 ON B_CRM_BANK_DETAIL (RQ_SWIFT)
/
CREATE INDEX IX_B_CRM_BANK_DETAIL_14 ON B_CRM_BANK_DETAIL (RQ_BIC)
/

CREATE TABLE B_CRM_CONTACT_COMPANY(
	CONTACT_ID NUMBER(18) NOT NULL,
	COMPANY_ID NUMBER(18) NOT NULL,
	SORT NUMBER(18) NOT NULL,
	ROLE_ID NUMBER(3) NOT NULL,
	IS_PRIMARY CHAR(1 CHAR) NOT NULL,
	CONSTRAINT P_B_CRM_CONTACT_COMPANY PRIMARY KEY(CONTACT_ID, COMPANY_ID)
)
/
CREATE INDEX IX_B_CRM_CONTACT_COMPANY_1 ON B_CRM_CONTACT_COMPANY (COMPANY_ID, CONTACT_ID)
/
CREATE INDEX IX_B_CRM_CONTACT_COMPANY_2 ON B_CRM_CONTACT_COMPANY (CONTACT_ID, IS_PRIMARY, COMPANY_ID)
/
CREATE INDEX IX_B_CRM_CONTACT_COMPANY_3 ON B_CRM_CONTACT_COMPANY (CONTACT_ID, SORT, COMPANY_ID)
/

CREATE TABLE B_CRM_DEAL_CONTACT(
	DEAL_ID NUMBER(18) NOT NULL,
	CONTACT_ID NUMBER(18) NOT NULL,
	SORT NUMBER(18) NOT NULL,
	ROLE_ID NUMBER(3) NOT NULL,
	IS_PRIMARY CHAR(1 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_DEAL_CONTACT PRIMARY KEY(DEAL_ID, CONTACT_ID)
)
/
CREATE INDEX IX_B_CRM_DEAL_CONTACT_1 ON B_CRM_DEAL_CONTACT (CONTACT_ID, DEAL_ID)
/
CREATE INDEX IX_B_CRM_DEAL_CONTACT_2 ON B_CRM_DEAL_CONTACT (DEAL_ID, IS_PRIMARY, CONTACT_ID)
/
CREATE INDEX IX_B_CRM_DEAL_CONTACT_3 ON B_CRM_DEAL_CONTACT (DEAL_ID, SORT, CONTACT_ID)
/

CREATE TABLE B_CRM_QUOTE_CONTACT(
	QUOTE_ID NUMBER(18) NOT NULL,
	CONTACT_ID NUMBER(18) NOT NULL,
	SORT NUMBER(18) NOT NULL,
	ROLE_ID NUMBER(3) NOT NULL,
	IS_PRIMARY CHAR(1 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_QUOTE_CONTACT PRIMARY KEY(QUOTE_ID, CONTACT_ID)
)
/
CREATE INDEX IX_B_CRM_QUOTE_CONTACT_1 ON B_CRM_QUOTE_CONTACT (CONTACT_ID, QUOTE_ID)
/
CREATE INDEX IX_B_CRM_QUOTE_CONTACT_2 ON B_CRM_QUOTE_CONTACT (QUOTE_ID, IS_PRIMARY, CONTACT_ID)
/
CREATE INDEX IX_B_CRM_QUOTE_CONTACT_3 ON B_CRM_QUOTE_CONTACT (QUOTE_ID, SORT, CONTACT_ID)
/

CREATE TABLE B_CRM_ENTITY_CFG(
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	USER_ID NUMBER(18) NOT NULL,
	SETTINGS CLOB NULL,
	CONSTRAINT PK_B_CRM_ENTITY_CFG PRIMARY KEY(ENTITY_ID, ENTITY_TYPE_ID, USER_ID)
)
/

CREATE TABLE B_CRM_WEBFORM (
  ID NUMBER(18) NOT NULL,
  NAME VARCHAR2(255 CHAR) NOT NULL,
  DESCRIPTION CLOB DEFAULT NULL,
  BUTTON_CAPTION VARCHAR2(255 CHAR) DEFAULT NULL,
  TEMPLATE_ID VARCHAR2(255 CHAR) DEFAULT NULL,
  IS_PAY CHAR(1 CHAR) NOT NULL,
  GOOGLE_ANALYTICS_ID VARCHAR2(50 CHAR) DEFAULT NULL,
  YANDEX_METRIC_ID VARCHAR2(50 CHAR) DEFAULT NULL,
  SECURITY_CODE VARCHAR2(32 CHAR) DEFAULT NULL,
  BUTTON_COLOR_FONT VARCHAR2(10 CHAR) DEFAULT NULL,
  BUTTON_COLOR_BG VARCHAR2(10 CHAR) DEFAULT NULL,
  CSS_PATH VARCHAR2(255 CHAR) DEFAULT NULL,
  DATE_CREATE DATE NOT NULL,
  ENTITY_SCHEME NUMBER(18) NOT NULL,
  GOOGLE_ANALYTICS_PAGE_VIEW CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  CAPTION VARCHAR2(255 CHAR) DEFAULT NULL,
  RESULT_SUCCESS_TEXT VARCHAR2(255 CHAR) DEFAULT NULL,
  RESULT_SUCCESS_URL VARCHAR2(500 CHAR) DEFAULT NULL,
  RESULT_FAILURE_TEXT VARCHAR2(255 CHAR) DEFAULT NULL,
  RESULT_FAILURE_URL VARCHAR2(500 CHAR) DEFAULT NULL,
  ACTIVE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  CSS_TEXT CLOB,
  ACTIVE_CHANGE_BY NUMBER(18) DEFAULT NULL,
  ACTIVE_CHANGE_DATE DATE NULL,
  IS_SYSTEM CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  COPYRIGHT_REMOVED CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	USE_CAPTCHA CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  BACKGROUND_IMAGE NUMBER(18) DEFAULT NULL,
  CODE VARCHAR2(255 CHAR) DEFAULT NULL,
  OPENLINE_ID NUMBER(18) DEFAULT NULL,
  DUPLICATE_MODE VARCHAR2(20 CHAR) DEFAULT NULL,
	XML_ID VARCHAR2(50 CHAR) DEFAULT NULL,
  LICENCE_TEXT CLOB NULL,
  LICENCE_BUTTON_CAPTION VARCHAR2(255 CHAR) DEFAULT NULL,
  SCRIPT_INCLUDE_SETTINGS CLOB NULL,
  INVOICE_SETTINGS CLOB NULL,
  FORM_SETTINGS CLOB NULL,
  IS_CALLBACK_FORM CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  CALL_FROM VARCHAR2(50 CHAR) DEFAULT NULL,
  CALL_TEXT CLOB NULL,
  ASSIGNED_BY_ID NUMBER(18) DEFAULT NULL,
  PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_WEBFORM
/
CREATE OR REPLACE TRIGGER B_CRM_WEBFORM_INSERT
BEFORE INSERT
ON B_CRM_WEBFORM
FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT SQ_B_CRM_WEBFORM.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
/
CREATE INDEX IX_B_CRM_WEBFORM ON B_CRM_WEBFORM (CODE)
/

CREATE TABLE B_CRM_WEBFORM_COUNTER (
  ID NUMBER(18) NOT NULL,
  FORM_ID NUMBER(18) NOT NULL,
  DATE_CREATE DATE NULL,
  VIEWS NUMBER(18) DEFAULT 0,
  START_FILL NUMBER(18) DEFAULT 0,
  END_FILL NUMBER(18) DEFAULT 0,
  MONEY NUMBER(18) DEFAULT 0,
  ENTITY_CONTACT NUMBER(18) DEFAULT 0,
  ENTITY_COMPANY NUMBER(18) DEFAULT 0,
  ENTITY_DEAL NUMBER(18) DEFAULT 0,
  ENTITY_LEAD NUMBER(18) DEFAULT 0,
  ENTITY_QUOTE NUMBER(18) DEFAULT 0,
  ENTITY_INVOICE NUMBER(18) DEFAULT 0,
  PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_WEBFORM_COUNTER
/
CREATE OR REPLACE TRIGGER B_CRM_WEBFORM_COUNTER_INSERT
BEFORE INSERT
ON B_CRM_WEBFORM_COUNTER
FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT SQ_B_CRM_WEBFORM_COUNTER.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
/
CREATE INDEX IX_B_CRM_WEBFORM_COUNTER ON B_CRM_WEBFORM_COUNTER(FORM_ID)
/

CREATE TABLE B_CRM_WEBFORM_VIEW (
  FORM_ID NUMBER(18) NOT NULL,
  DATE_CREATE DATE NULL
)
/

CREATE TABLE B_CRM_WEBFORM_START_EDIT (
  FORM_ID NUMBER(18) NOT NULL,
  DATE_CREATE DATE NULL
)
/

CREATE TABLE B_CRM_WEBFORM_FIELD (
  ID NUMBER(18) NOT NULL,
  TYPE VARCHAR2(50 CHAR) DEFAULT NULL,
  CODE VARCHAR2(50 CHAR) DEFAULT NULL,
  CAPTION VARCHAR2(255 CHAR) DEFAULT NULL,
  FORM_ID NUMBER(18) NOT NULL,
  GROUP_ID NUMBER(18) NULL,
  SORT NUMBER(18)  DEFAULT 100 NOT NULL,
  REQUIRED CHAR(1 CHAR) DEFAULT 'N',
  PLACEHOLDER VARCHAR2(255 CHAR) DEFAULT NULL,
  MULTIPLE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  ITEMS CLOB NOT NULL,
  VALUE_TYPE VARCHAR2(50 CHAR) DEFAULT NULL,
  VALUE VARCHAR2(255 CHAR) DEFAULT NULL,
  PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_WEBFORM_FIELD
/
CREATE OR REPLACE TRIGGER B_CRM_WEBFORM_FIELD_INSERT
BEFORE INSERT
ON B_CRM_WEBFORM_FIELD
FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT SQ_B_CRM_WEBFORM_FIELD.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
/
CREATE INDEX IX_B_CRM_WEBFORM_FIELD ON B_CRM_WEBFORM_FIELD(FORM_ID)
/

CREATE TABLE B_CRM_WEBFORM_FIELD_DEP (
  ID NUMBER(18) NOT NULL,
  FORM_ID NUMBER(18) NOT NULL,
  IF_FIELD_CODE VARCHAR2(25 CHAR) DEFAULT NULL,
  IF_ACTION VARCHAR2(20 CHAR) NOT NULL,
  IF_VALUE VARCHAR2(255 CHAR) DEFAULT NULL,
  IF_VALUE_OPERATION VARCHAR2(10 CHAR) DEFAULT NULL,
  DO_FIELD_CODE VARCHAR2(25 CHAR) DEFAULT NULL,
  DO_ACTION VARCHAR2(20 CHAR) NOT NULL,
  DO_VALUE VARCHAR2(255 CHAR) DEFAULT NULL,
  PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_WEBFORM_FIELD_DEP
/
CREATE OR REPLACE TRIGGER B_CRM_WEBFORM_FIELD_DEP_INS
BEFORE INSERT
ON B_CRM_WEBFORM_FIELD_DEP
FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT SQ_B_CRM_WEBFORM_FIELD_DEP.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
/
CREATE INDEX IX_B_CRM_WEBFORM_FIELD_DEP ON B_CRM_WEBFORM_FIELD_DEP(FORM_ID)
/

CREATE TABLE B_CRM_WEBFORM_FIELD_PRESET (
  FORM_ID NUMBER(18) NOT NULL,
  ENTITY_NAME VARCHAR2(25 CHAR) NOT NULL,
  FIELD_NAME VARCHAR2(50 CHAR) NOT NULL,
  VALUE VARCHAR2(255 CHAR) DEFAULT NULL
)
/
CREATE INDEX IX_B_CRM_WEBFORM_FIELD_PRST ON B_CRM_WEBFORM_FIELD_PRESET(FORM_ID)
/

CREATE TABLE B_CRM_WEBFORM_RESULT (
  ID NUMBER(18) NOT NULL,
  DATE_INSERT DATE NOT NULL,
  FORM_ID NUMBER(18) NOT NULL,
  PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_WEBFORM_RESULT
/
CREATE OR REPLACE TRIGGER B_CRM_WEBFORM_RESULT_INSERT
BEFORE INSERT
ON B_CRM_WEBFORM_RESULT
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
      SELECT SQ_B_CRM_WEBFORM_RESULT.NEXTVAL INTO :NEW.ID FROM DUAL;
		END IF;
	END;
/
CREATE INDEX IX_B_CRM_WEBFORM_RESULT ON B_CRM_WEBFORM_RESULT(FORM_ID)
/

CREATE TABLE B_CRM_WEBFORM_RESULT_ENTITY (
  FORM_ID NUMBER(18) NOT NULL,
  RESULT_ID NUMBER(18) NOT NULL,
  ENTITY_NAME VARCHAR2(20 CHAR) NOT NULL,
  ITEM_ID NUMBER(18) NOT NULL
)
/
CREATE INDEX IX_B_CRM_WEBFORM_RESULT_ENT ON b_crm_webform_result_entity(RESULT_ID)
/

CREATE TABLE B_CRM_PS_RQ_CONV_RELATION
(
	ENTITY_ID       NUMBER(18)  NOT NULL,
	COMPANY_ID      NUMBER(18)  DEFAULT 0 NOT NULL,
	REQUISITE_ID    NUMBER(18)  DEFAULT 0 NOT NULL,
	BANK_DETAIL_ID  NUMBER(18)  DEFAULT 0 NOT NULL,
	CONSTRAINT PK_B_CRM_PS_RQ_CONV_RELATION PRIMARY KEY (ENTITY_ID)
)
/
CREATE INDEX IX_CRM_PS_RQ_CONV_RELATION_1 ON B_CRM_PS_RQ_CONV_RELATION (REQUISITE_ID)
/


CREATE TABLE B_CRM_ACT_MAIL_META
(
	ACTIVITY_ID NUMBER(18) NOT NULL,
	MSG_ID_HASH VARCHAR2(40 CHAR) NULL,
	MSG_INREPLY_HASH VARCHAR2(40 CHAR) NULL,
	MSG_HEADER_HASH VARCHAR2(40 CHAR) NULL,
	CONSTRAINT PK_B_CRM_ACT_MAIL_META PRIMARY KEY (ACTIVITY_ID)
)
/
CREATE INDEX IX_B_CRM_ACT_MAIL_META_1 ON B_CRM_ACT_MAIL_META (MSG_ID_HASH)
/
CREATE INDEX IX_B_CRM_ACT_MAIL_META_2 ON B_CRM_ACT_MAIL_META (MSG_HEADER_HASH)
/
CREATE INDEX IX_B_CRM_ACT_MAIL_META_3 ON B_CRM_ACT_MAIL_META (MSG_INREPLY_HASH)
/

CREATE TABLE B_CRM_DEAL_CATEGORY(
	ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	SORT NUMBER(18) NOT NULL,
	IS_LOCKED CHAR(1 CHAR) DEFAULT 'N',
	CONSTRAINT PK_B_CRM_DEAL_CATEGORY PRIMARY KEY(ID)
)
/
CREATE SEQUENCE SQ_B_CRM_DEAL_CATEGORY
/
CREATE OR REPLACE TRIGGER B_CRM_DEAL_CATEGORY_INSERT BEFORE INSERT ON B_CRM_DEAL_CATEGORY FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_DEAL_CATEGORY.NEXTVAL INTO :NEW.ID FROM dual;
		END IF;
	END;
/
CREATE INDEX IX_B_CRM_DEAL_CAT_1 ON B_CRM_DEAL_CATEGORY (SORT, ID)
/
CREATE INDEX IX_B_CRM_DEAL_CAT_2 ON B_CRM_DEAL_CATEGORY (IS_LOCKED, SORT, ID)
/
CREATE TABLE B_CRM_COMPANY_ACT_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	TOTAL_QTY NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_COMPANY_ACT_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_COMPANY_ASTAT_1 ON B_CRM_COMPANY_ACT_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, TOTAL_QTY)
/
CREATE INDEX IX_B_CRM_COMPANY_ASTAT_2 ON B_CRM_COMPANY_ACT_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, TOTAL_QTY)
/
CREATE TABLE B_CRM_COMPANY_ACT_STS_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	ANSWERED_QTY NUMBER(18) NULL,
	UNANSWERED_QTY NUMBER(18) NULL,
	CONSTRAINT B_CRM_COMPANY_ACT_STS_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_COMPANY_ASTS_1 ON B_CRM_COMPANY_ACT_STS_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, ANSWERED_QTY, UNANSWERED_QTY)
/
CREATE INDEX IX_B_CRM_COMPANY_ASTS_2 ON B_CRM_COMPANY_ACT_STS_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, ANSWERED_QTY, UNANSWERED_QTY)
/
CREATE TABLE B_CRM_COMPANY_ACT_MARK_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(50 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	SOURCE_ID VARCHAR(100 CHAR) NOT NULL,
	NONE_QTY NUMBER(18) NULL,
	POSITIVE_QTY NUMBER(18) NULL,
	NEGATIVE_QTY NUMBER(18) NULL,
	CONSTRAINT B_CRM_COMPANY_ACT_MARK_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID, SOURCE_ID)
)
/
CREATE INDEX IX_B_CRM_COMPANY_AMRS_1 ON B_CRM_COMPANY_ACT_MARK_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, SOURCE_ID, NONE_QTY, POSITIVE_QTY, NEGATIVE_QTY)
/
CREATE INDEX IX_B_CRM_COMPANY_AMRS_2 ON B_CRM_COMPANY_ACT_MARK_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, SOURCE_ID, NONE_QTY, POSITIVE_QTY, NEGATIVE_QTY)
/
CREATE TABLE B_CRM_COMPANY_ACT_STM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	INCOMING_QTY NUMBER(18) NULL,
	OUTGOING_QTY NUMBER(18) NULL,
	REVERSING_QTY NUMBER(18) NULL,
	MISSING_QTY NUMBER(18) NULL,
	CONSTRAINT B_CRM_COMPANY_ACT_STM_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_COMPANY_ASTM_1 ON B_CRM_COMPANY_ACT_STM_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, INCOMING_QTY, OUTGOING_QTY, REVERSING_QTY, MISSING_QTY)
/
CREATE INDEX IX_B_CRM_COMPANY_ASTM_2 ON B_CRM_COMPANY_ACT_STM_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, INCOMING_QTY, OUTGOING_QTY, REVERSING_QTY, MISSING_QTY)
/
CREATE TABLE B_CRM_COMPANY_ACT_SUM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,4) NULL,
	CONSTRAINT B_CRM_COMPANY_ACT_SUM_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_COMPANY_ASUM_1 ON B_CRM_COMPANY_ACT_SUM_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID)
/
CREATE INDEX IX_B_CRM_COMPANY_ASUM_2 ON B_CRM_COMPANY_ACT_SUM_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID)
/
CREATE TABLE B_CRM_COMPANY_GROWTH_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CONSTRAINT B_CRM_COMPANY_GROWTH_STAT PRIMARY KEY(OWNER_ID, CREATED_DATE)
)
/
CREATE INDEX IX_B_CRM_COMPANY_GRTH_1 ON B_CRM_COMPANY_GROWTH_STAT (CREATED_DATE, OWNER_ID)
/
CREATE INDEX IX_B_CRM_COMPANY_GRTH_2 ON B_CRM_COMPANY_GROWTH_STAT (RESPONSIBLE_ID, CREATED_DATE, OWNER_ID)
/
CREATE TABLE B_CRM_CONTACT_ACT_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	TOTAL_QTY NUMBER(18) NULL,
	CONSTRAINT PK_B_CRM_CONTACT_ACT_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_CONTACT_ASTAT_1 ON B_CRM_CONTACT_ACT_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, TOTAL_QTY)
/
CREATE INDEX IX_B_CRM_CONTACT_ASTAT_2 ON B_CRM_CONTACT_ACT_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, TOTAL_QTY)
/
CREATE TABLE B_CRM_CONTACT_ACT_STS_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	ANSWERED_QTY NUMBER(18) NULL,
	UNANSWERED_QTY NUMBER(18) NULL,
	CONSTRAINT B_CRM_CONTACT_ACT_STS_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_CONTACT_ASTS_1 ON B_CRM_CONTACT_ACT_STS_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, ANSWERED_QTY, UNANSWERED_QTY)
/
CREATE INDEX IX_B_CRM_CONTACT_ASTS_2 ON B_CRM_CONTACT_ACT_STS_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, ANSWERED_QTY, UNANSWERED_QTY)
/
CREATE TABLE B_CRM_CONTACT_ACT_MARK_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(50 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	SOURCE_ID VARCHAR(100 CHAR) NOT NULL,
	NONE_QTY NUMBER(18) NULL,
	POSITIVE_QTY NUMBER(18) NULL,
	NEGATIVE_QTY NUMBER(18) NULL,
	CONSTRAINT B_CRM_CONTACT_ACT_MARK_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID, SOURCE_ID)
)
/
CREATE INDEX IX_B_CRM_CONTACT_AMRS_1 ON B_CRM_CONTACT_ACT_MARK_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, SOURCE_ID, NONE_QTY, POSITIVE_QTY, NEGATIVE_QTY)
/
CREATE INDEX IX_B_CRM_CONTACT_AMRS_2 ON B_CRM_CONTACT_ACT_MARK_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, SOURCE_ID, NONE_QTY, POSITIVE_QTY, NEGATIVE_QTY)
/
CREATE TABLE B_CRM_CONTACT_ACT_STM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	INCOMING_QTY NUMBER(18) NULL,
	OUTGOING_QTY NUMBER(18) NULL,
	REVERSING_QTY NUMBER(18) NULL,
	MISSING_QTY NUMBER(18) NULL,
	CONSTRAINT B_CRM_CONTACT_ACT_STM_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_CONTACT_ASTM_1 ON B_CRM_CONTACT_ACT_STM_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, INCOMING_QTY, OUTGOING_QTY, REVERSING_QTY, MISSING_QTY)
/
CREATE INDEX IX_B_CRM_CONTACT_ASTM_2 ON B_CRM_CONTACT_ACT_STM_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, INCOMING_QTY, OUTGOING_QTY, REVERSING_QTY, MISSING_QTY)
/
CREATE TABLE B_CRM_CONTACT_ACT_SUM_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(100 CHAR) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,4) NULL,
	CONSTRAINT B_CRM_CONTACT_ACT_SUM_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_CONTACT_ASUM_1 ON B_CRM_CONTACT_ACT_SUM_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID)
/
CREATE INDEX IX_B_CRM_CONTACT_ASUM_2 ON B_CRM_CONTACT_ACT_SUM_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID)
/
CREATE TABLE B_CRM_CONTACT_GROWTH_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CONSTRAINT B_CRM_CONTACT_GROWTH_STAT PRIMARY KEY(OWNER_ID, CREATED_DATE)
)
/
CREATE INDEX IX_B_CRM_CONTACT_GRTH_1 ON B_CRM_CONTACT_GROWTH_STAT (CREATED_DATE, OWNER_ID)
/
CREATE INDEX IX_B_CRM_CONTACT_GRTH_2 ON B_CRM_CONTACT_GROWTH_STAT (RESPONSIBLE_ID, CREATED_DATE, OWNER_ID)
/
CREATE TABLE B_CRM_ACT_STAT(
	OWNER_ID NUMBER(18) NOT NULL,
	DEADLINE_DATE DATE NOT NULL,
	PROVIDER_ID VARCHAR(100 CHAR) NOT NULL,
	PROVIDER_TYPE_ID VARCHAR(50 CHAR) NOT NULL,
	OWNER_TYPE_ID NUMBER(3) NOT NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	COMPLETED CHAR(1 CHAR) NULL,
	STATUS_ID NUMBER(18) NULL,
	MARK_ID NUMBER(18) NULL,
	SOURCE_ID VARCHAR(100 CHAR) NOT NULL,
	STREAM_ID NUMBER(18) NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,4) NULL,
	CONSTRAINT PK_B_CRM_ACT_STAT PRIMARY KEY(OWNER_ID, DEADLINE_DATE, PROVIDER_ID, PROVIDER_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_ACT_STAT_1 ON B_CRM_ACT_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, COMPLETED)
/
CREATE INDEX IX_B_CRM_ACT_STAT_2 ON B_CRM_ACT_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, COMPLETED)
/
CREATE INDEX IX_B_CRM_ACT_STAT_5 ON B_CRM_ACT_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, STATUS_ID)
/
CREATE INDEX IX_B_CRM_ACT_STAT_6 ON B_CRM_ACT_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, STATUS_ID)
/
CREATE INDEX IX_B_CRM_ACT_STAT_7 ON B_CRM_ACT_STAT (RESPONSIBLE_ID, DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, STREAM_ID)
/
CREATE INDEX IX_B_CRM_ACT_STAT_8 ON B_CRM_ACT_STAT (DEADLINE_DATE, OWNER_ID, PROVIDER_ID, PROVIDER_TYPE_ID, STREAM_ID)
/
CREATE TABLE B_CRM_BUTTON (
	ID NUMBER(18) NOT NULL,
	DATE_CREATE DATE NULL,
	CREATED_BY NUMBER(18) DEFAULT NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	ACTIVE_CHANGE_BY NUMBER(18) DEFAULT NULL,
	ACTIVE_CHANGE_DATE DATE NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	BACKGROUND_COLOR VARCHAR2(10 CHAR) DEFAULT NULL,
	ICON_COLOR VARCHAR2(10 CHAR) DEFAULT NULL,
	LOCATION NUMBER(3) DEFAULT 1,
	DELAY NUMBER(3) DEFAULT 0,
	ITEMS CLOB,
	SETTINGS CLOB,
	SECURITY_CODE varchar2(32 char) DEFAULT NULL,
	IS_SYSTEM CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	XML_ID VARCHAR2(50 CHAR) DEFAULT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_BUTTON
/
CREATE OR REPLACE TRIGGER B_CRM_BUTTON_INSERT
BEFORE INSERT
	ON B_CRM_BUTTON
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_BUTTON.NEXTVAL INTO :NEW.ID FROM DUAL;
		END IF;
	END;
/
CREATE TABLE B_CRM_UTM (
	ENTITY_TYPE_ID number(18) NOT NULL,
	ENTITY_ID number(18) NOT NULL,
	CODE varchar2(45 char) NOT NULL,
	VALUE varchar2(45 char) NOT NULL,
	PRIMARY KEY (ENTITY_TYPE_ID, ENTITY_ID, CODE)
)
/
CREATE INDEX IX_B_CRM_UTM ON B_CRM_UTM (ENTITY_TYPE_ID, ENTITY_ID, CODE, VALUE)
/

CREATE TABLE B_CRM_ENTITY_CHANNEL (
	ENTITY_ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	TYPE_ID NUMBER(3) NOT NULL,
	ORIGIN_ID VARCHAR(32 CHAR) NULL,
	COMPONENT_ID VARCHAR(32 CHAR) NULL,
	CONSTRAINT PK_B_CRM_ENTITY_CHANNEL PRIMARY KEY(ENTITY_ID, ENTITY_TYPE_ID, TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_ENT_CHANNEL_1 ON B_CRM_ENTITY_CHANNEL(ENTITY_ID, ENTITY_TYPE_ID, TYPE_ID, ORIGIN_ID, COMPONENT_ID)
/
CREATE TABLE B_CRM_LEAD_CHANNEL_STAT (
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	CHANNEL_TYPE_ID NUMBER(3) NOT NULL,
	CHANNEL_ORIGIN_ID VARCHAR(32 CHAR) NULL,
	CHANNEL_COMPONENT_ID VARCHAR(32 CHAR) NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	STATUS_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	CONSTRAINT PK_B_CRM_LEAD_CHANNEL_STAT PRIMARY KEY(OWNER_ID, CHANNEL_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_LEAD_CHANNEL_STAT_1 ON B_CRM_LEAD_CHANNEL_STAT(CHANNEL_TYPE_ID, CHANNEL_ORIGIN_ID, CHANNEL_COMPONENT_ID, STATUS_SEMANTIC_ID, CREATED_DATE)
/
CREATE TABLE B_CRM_DEAL_CHANNEL_STAT (
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE NOT NULL,
	CHANNEL_TYPE_ID NUMBER(3) NOT NULL,
	CHANNEL_ORIGIN_ID VARCHAR(32 CHAR) NULL,
	CHANNEL_COMPONENT_ID VARCHAR(32 CHAR) NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	CURRENCY_ID CHAR(3 CHAR) NULL,
	SUM_TOTAL NUMBER(18,2) NULL,
	STAGE_SEMANTIC_ID VARCHAR(3 CHAR) NULL,
	CONSTRAINT PK_B_CRM_DEAL_CHANNEL_STAT PRIMARY KEY(OWNER_ID, CHANNEL_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_DEAL_CHANNEL_STAT_1 ON B_CRM_DEAL_CHANNEL_STAT(CHANNEL_TYPE_ID, CHANNEL_ORIGIN_ID, CHANNEL_COMPONENT_ID, STAGE_SEMANTIC_ID, START_DATE, END_DATE, SUM_TOTAL)
/
CREATE TABLE B_CRM_ACT_CHANNEL_STAT (
	OWNER_ID NUMBER(18) NOT NULL,
	CREATED_DATE DATE NOT NULL,
	CHANNEL_TYPE_ID NUMBER(3) NOT NULL,
	CHANNEL_ORIGIN_ID VARCHAR(32 CHAR) NULL,
	CHANNEL_COMPONENT_ID VARCHAR(32 CHAR) NULL,
	RESPONSIBLE_ID NUMBER(18) NOT NULL,
	COMPLETED CHAR(1 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_ACT_CHANNEL_STAT PRIMARY KEY(OWNER_ID, CHANNEL_TYPE_ID)
)
/
CREATE INDEX IX_B_CRM_ACT_CHANNEL_STAT_1 ON B_CRM_ACT_CHANNEL_STAT(CHANNEL_TYPE_ID, CHANNEL_ORIGIN_ID, CHANNEL_COMPONENT_ID, CREATED_DATE)
/
CREATE TABLE B_CRM_EXT_CHANNEL_CONNECTOR (
	TYPE_ID VARCHAR2(32 CHAR) NOT NULL,
	NAME VARCHAR2(32 CHAR) NOT NULL,
	APP_ID VARCHAR(128 CHAR) NOT NULL,
	CHANNEL_ID VARCHAR(64 CHAR) NOT NULL,
	ORIGINATOR_ID VARCHAR(32 CHAR) NOT NULL,
	EXTERNAL_SERVER_HOST VARCHAR(128 CHAR) NOT NULL,
	CONSTRAINT PK_B_CRM_EXT_CHANNEL_CONNECTOR PRIMARY KEY (TYPE_ID, ORIGINATOR_ID)
)
/
CREATE TABLE B_CRM_AUTOMATION_TEMPLATE (
	ID NUMBER(18) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_STATUS VARCHAR2(50 CHAR) NOT NULL,
	TEMPLATE_ID NUMBER(3) DEFAULT 0,
	START_RULES CLOB,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_AUTOMATION_TEMPLATE
/
CREATE OR REPLACE TRIGGER B_CRM_AUTOMATION_TEMPLATE_INSERT
BEFORE INSERT
	ON B_CRM_AUTOMATION_TEMPLATE
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_AUTOMATION_TEMPLATE.NEXTVAL INTO :NEW.ID FROM DUAL;
		END IF;
	END;
/
CREATE TABLE B_CRM_AUTOMATION_TRIGGER (
	ID NUMBER(18) NOT NULL,
	NAME VARCHAR2(255 CHAR) NOT NULL,
	CODE VARCHAR2(30 CHAR) NOT NULL,
	ENTITY_TYPE_ID NUMBER(3) NOT NULL,
	ENTITY_STATUS VARCHAR2(50 CHAR) NOT NULL,
	APPLY_RULES CLOB,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_AUTOMATION_TRIGGER
/
CREATE OR REPLACE TRIGGER B_CRM_AUTOMATION_TRIGGER_INSERT
BEFORE INSERT
	ON B_CRM_AUTOMATION_TRIGGER
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_AUTOMATION_TRIGGER.NEXTVAL INTO :NEW.ID FROM DUAL;
		END IF;
	END;
/
CREATE TABLE B_CRM_KANBAN_SORT (
    ID NUMBER(18) NOT NULL,
    ENTITY_TYPE_ID NUMBER(18) NOT NULL,
    ENTITY_ID NUMBER(18) NOT NULL,
    PREV_ENTITY_ID NUMBER(18) NOT NULL,
    USER_ID NUMBER(18) NOT NULL,
    PRIMARY KEY (`ID`)
)
/
CREATE INDEX KEY IX_KANBAN_1 ON B_CRM_KANBAN_SORT (ENTITY_TYPE_ID, USER_ID)
/
CREATE SEQUENCE SQ_B_CRM_KANBAN_SORT
/
CREATE TABLE B_CRM_KANBAN_SUPERVISOR (
    ID NUMBER(18) NOT NULL,
    ENTITY_TYPE_ID NUMBER(18) NOT NULL,
    USER_ID NUMBER(18) NOT NULL,
    PRIMARY KEY (`ID`)
)
/
CREATE SEQUENCE SQ_B_CRM_KANBAN_SUPERVISOR
/

CREATE TABLE B_CRM_CALL_LIST(
	ID NUMBER(18) NOT NULL,
	DATE_CREATE DATETIME,
	CREATED_BY_ID NUMBER(18) NOT NULL,
	FILTER_PARAMS CLOB,
	ENTITY_TYPE_ID NUMBER(18) NULL,
	WEBFORM_ID NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_CRM_CALL_LIST
/
CREATE INDEX IX_B_CRM_CALL_LIST_1 ON B_CRM_CALL_LIST (DATE_CREATE)
/
CREATE OR REPLACE TRIGGER B_CRM_CALL_LIST_INSERT
BEFORE INSERT
	ON B_CRM_CALL_LIST
FOR EACH ROW
	BEGIN
		IF :NEW.ID IS NULL THEN
			SELECT SQ_B_CRM_CALL_LIST.NEXTVAL INTO :NEW.ID FROM DUAL;
		END IF;
	END;
/

CREATE TABLE B_CRM_CALL_LIST_ITEM(
	LIST_ID NUMBER(18) NOT NULL,
	ELEMENT_ID NUMBER(18) NOT NULL,
	STATUS_ID VARCHAR2(50 CHAR) NOT NULL,
	CALL_ID NUMBER(18) NULL,
	RANK NUMBER(18) NULL,
	PRIMARY KEY (LIST_ID, ELEMENT_ID)
)
/
CREATE INDEX IX_B_CALL_LIST_ITEM_1 ON B_CRM_CALL_LIST_ITEM(LIST_ID, STATUS_ID, RANK)
/