CREATE TABLE b_sec_filter_mask
(
	ID NUMBER(18) NOT NULL,
	SORT NUMBER(18) DEFAULT 10 NOT NULL,
	SITE_ID CHAR(2 CHAR),
	FILTER_MASK VARCHAR2(250 CHAR),
	LIKE_MASK VARCHAR2(250 CHAR),
	PREG_MASK VARCHAR2(250 CHAR),
	CONSTRAINT pk_b_sec_filter_mask PRIMARY KEY(ID)
)
/
CREATE SEQUENCE sq_b_sec_filter_mask
/

CREATE OR REPLACE TRIGGER b_sec_filter_mask_insert
BEFORE INSERT
ON b_sec_filter_mask
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT sq_b_sec_filter_mask.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_sec_frame_mask
(
	ID NUMBER(18) NOT NULL,
	SORT NUMBER(18) DEFAULT 10 NOT NULL,
	SITE_ID CHAR(2 CHAR),
	FRAME_MASK VARCHAR2(250 CHAR),
	LIKE_MASK VARCHAR2(250 CHAR),
	PREG_MASK VARCHAR2(250 CHAR),
	CONSTRAINT pk_b_sec_frame_mask PRIMARY KEY(ID)
)
/
CREATE SEQUENCE sq_b_sec_frame_mask
/

CREATE OR REPLACE TRIGGER b_sec_frame_mask_insert
BEFORE INSERT
ON b_sec_frame_mask
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT sq_b_sec_frame_mask.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_sec_iprule
(
	ID NUMBER(18) NOT NULL,
	RULE_TYPE CHAR(1 CHAR) DEFAULT 'M' NOT NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	ADMIN_SECTION CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SITE_ID CHAR(2 CHAR),
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	ACTIVE_FROM date,
	ACTIVE_FROM_TIMESTAMP NUMBER(18),
	ACTIVE_TO date,
	ACTIVE_TO_TIMESTAMP NUMBER(18),
	NAME VARCHAR2(250 CHAR),
	CONSTRAINT pk_b_sec_iprule PRIMARY KEY(ID)
)
/
CREATE INDEX ix_b_sec_iprule_active_to on b_sec_iprule(ACTIVE_TO)
/
CREATE SEQUENCE sq_b_sec_iprule
/

CREATE OR REPLACE TRIGGER b_sec_iprule_insert
BEFORE INSERT
ON b_sec_iprule
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT sq_b_sec_iprule.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_sec_iprule_incl_mask
(
	IPRULE_ID NUMBER(18) NOT NULL,
	RULE_MASK VARCHAR2(250 CHAR) NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	LIKE_MASK VARCHAR2(250 CHAR),
	PREG_MASK VARCHAR2(250 CHAR),
	CONSTRAINT pk_b_sec_iprule_incl_mask PRIMARY KEY(IPRULE_ID, RULE_MASK),
	CONSTRAINT fk_b_sec_iprule_incl_mask1 FOREIGN KEY (IPRULE_ID) REFERENCES b_sec_iprule(ID)
)
/

CREATE TABLE b_sec_iprule_excl_mask
(
	IPRULE_ID NUMBER(18) NOT NULL,
	RULE_MASK VARCHAR2(250 CHAR) NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	LIKE_MASK VARCHAR2(250 CHAR),
	PREG_MASK VARCHAR2(250 CHAR),
	CONSTRAINT pk_b_sec_iprule_excl_mask PRIMARY KEY(IPRULE_ID, RULE_MASK),
	CONSTRAINT fk_b_sec_iprule_excl_mask1 FOREIGN KEY (IPRULE_ID) REFERENCES b_sec_iprule(ID)
)
/

CREATE TABLE b_sec_iprule_incl_ip
(
	IPRULE_ID NUMBER(18) NOT NULL REFERENCES b_sec_iprule(ID),
	RULE_IP VARCHAR2(50 CHAR) NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	IP_START NUMBER(18),
	IP_END NUMBER(18),
	CONSTRAINT pk_b_sec_iprule_incl_ip PRIMARY KEY(IPRULE_ID, RULE_IP),
	CONSTRAINT fk_b_sec_iprule_incl_ip1 FOREIGN KEY (IPRULE_ID) REFERENCES b_sec_iprule(ID)
)
/

CREATE TABLE b_sec_iprule_excl_ip
(
	IPRULE_ID NUMBER(18) NOT NULL REFERENCES b_sec_iprule(ID),
	RULE_IP VARCHAR2(50 CHAR) NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	IP_START NUMBER(18),
	IP_END NUMBER(18),
	CONSTRAINT pk_b_sec_iprule_excl_ip PRIMARY KEY(IPRULE_ID, RULE_IP),
	CONSTRAINT fk_b_sec_iprule_excl_ip1 FOREIGN KEY (IPRULE_ID) REFERENCES b_sec_iprule(ID)
)
/

CREATE TABLE b_sec_session
(
	SESSION_ID VARCHAR2(250 CHAR) NOT NULL,
	TIMESTAMP_X DATE NOT NULL,
	SESSION_DATA CLOB,
	CONSTRAINT pk_b_sec_session PRIMARY KEY(SESSION_ID)
)
/

CREATE INDEX ix_b_sec_session_time on b_sec_session(TIMESTAMP_X)
/

CREATE TABLE b_sec_user
(
	USER_ID NUMBER(18) NOT NULL,
	ACTIVE CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	SECRET VARCHAR2(64 CHAR) NULL,
	TYPE VARCHAR2(16 CHAR) NOT NULL,
	PARAMS clob NULL,
	ATTEMPTS NUMBER(18) NULL,
	INITIAL_DATE DATE NULL,
	SKIP_MANDATORY CHAR(1 CHAR) DEFAULT 'N' NULL,
	DEACTIVATE_UNTIL DATE NULL,
	CONSTRAINT pk_b_sec_user PRIMARY KEY(USER_ID),
	CONSTRAINT fk_b_sec_user1 FOREIGN KEY (USER_ID) REFERENCES b_user(ID)
)
/

CREATE TABLE b_sec_redirect_url
(
	IS_SYSTEM CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	SORT NUMBER(18) DEFAULT 500 NOT NULL,
	URL VARCHAR2(250 CHAR) NOT NULL,
	PARAMETER_NAME VARCHAR2(250 CHAR) NOT NULL
)
/
insert into b_sec_redirect_url values ('Y', 10, '/bitrix/redirect.php', 'goto')
/
insert into b_sec_redirect_url values ('Y', 20, '/bitrix/rk.php', 'goto')
/
insert into b_sec_redirect_url values ('Y', 30, '/bitrix/click.php', 'goto')
/

CREATE TABLE b_sec_white_list
(
	ID NUMBER(18) NOT NULL,
	WHITE_SUBSTR VARCHAR2(250 CHAR) NOT NULL,
	CONSTRAINT pk_b_sec_white_list PRIMARY KEY(ID)
)
/

CREATE TABLE b_sec_virus
(
	ID VARCHAR2(32 CHAR) NOT NULL,
	TIMESTAMP_X DATE NOT NULL,
	SITE_ID CHAR(2 CHAR),
	SENT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	INFO CLOB NOT NULL,
	CONSTRAINT pk_b_sec_virus PRIMARY KEY(ID)
)
/

CREATE TABLE b_security_sitecheck (
	ID NUMBER(18) NOT NULL,
	TEST_DATE DATE DEFAULT SYSDATE NOT NULL,
	RESULTS clob,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE sq_b_security_sitecheck START WITH 1 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER sq_b_security_sitecheck_insert
BEFORE INSERT
ON b_security_sitecheck
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	SELECT sq_b_security_sitecheck.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_sec_recovery_codes
(
	ID NUMBER(18) NOT NULL,
	USER_ID int NOT NULL,
	CODE VARCHAR2(250 CHAR) NOT NULL,
	USED CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
	USING_DATE DATE NULL,
	USING_IP VARCHAR2(255 char) NULL,
	CONSTRAINT pk_b_sec_recovery_codes PRIMARY KEY(ID)
)
/
CREATE INDEX ix_b_sec_recovery_codes ON b_sec_recovery_codes(USER_ID)
/
CREATE SEQUENCE sq_b_sec_recovery_codes INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER sq_b_sec_recovery_codes_insert
BEFORE INSERT
ON b_sec_recovery_codes
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	SELECT sq_b_user_field_confirm.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/