CREATE TABLE B_MAIL_MAILBOX
(
	ID int NOT NULL IDENTITY (1, 1),
	TIMESTAMP_X datetime NOT NULL,
	LID char(2) NOT NULL,
	ACTIVE char(1) NOT NULL,
	SERVICE_ID int NOT NULL DEFAULT 0,
	NAME varchar(255) NOT NULL,
	SERVER varchar(255) NULL,
	PORT int NOT NULL,
	LINK varchar(255) NULL,
	LOGIN varchar(255)  NULL,
	CHARSET varchar(255) NULL,
	PASSWORD varchar(255)  NULL,
	DESCRIPTION varchar(5000) NULL,
	USE_MD5 char(1) NOT NULL,
	DELETE_MESSAGES char(1) NOT NULL,
	PERIOD_CHECK int NULL,
	MAX_MSG_COUNT int NULL,
	MAX_MSG_SIZE int NULL,
	MAX_KEEP_DAYS int NULL,
	USE_TLS char(1) NOT NULL,
	SERVER_TYPE varchar(10) NOT NULL DEFAULT 'pop3',
	DOMAINS varchar(255) null,
	RELAY char(1) NOT NULL DEFAULT 'Y',
	AUTH_RELAY char(1) NOT NULL DEFAULT 'Y',
	USER_ID int NOT NULL DEFAULT 0,
	SYNC_LOCK INT NULL,
	OPTIONS TEXT NULL
)
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT PK_B_MAIL_MAILBOX PRIMARY KEY (ID)
GO
CREATE INDEX IX_B_MAIL_MAILBOX_USER_ID ON B_MAIL_MAILBOX (USER_ID)
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_TIMESTAMP_X DEFAULT getdate() FOR TIMESTAMP_X
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_PORT DEFAULT '110' FOR PORT
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_USE_MD5 DEFAULT 'N' FOR USE_MD5
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_DELETE_MESSAGES DEFAULT 'N' FOR DELETE_MESSAGES
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_MAX_MSG_COUNT DEFAULT '0' FOR MAX_MSG_COUNT
GO
ALTER TABLE B_MAIL_MAILBOX ADD CONSTRAINT DF_B_MAIL_MAILBOX_USE_TLS DEFAULT 'N' FOR USE_TLS
GO

create trigger B_MAIL_MAILBOX_UPDATE on B_MAIL_MAILBOX for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_MAIL_MAILBOX SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_MAIL_MAILBOX U,
		INSERTED I
	WHERE 
		U.ID = I.ID 
end
GO


CREATE TABLE B_MAIL_FILTER
(
	ID int NOT NULL IDENTITY (1, 1),
	TIMESTAMP_X datetime NOT NULL,
	MAILBOX_ID int NOT NULL,
	PARENT_FILTER_ID int NULL,
	NAME varchar(255) NULL,
	DESCRIPTION varchar(2000) NULL,
	SORT int NOT NULL,
	ACTIVE char(1) NOT NULL,
	PHP_CONDITION text NULL,
	WHEN_MAIL_RECEIVED char(1) NOT NULL,
	WHEN_MANUALLY_RUN char(1) NOT NULL,
	SPAM_RATING decimal(9,4) NULL,
	SPAM_RATING_TYPE char(1) NULL,
	MESSAGE_SIZE int NULL,
	MESSAGE_SIZE_TYPE char(1) NULL,
	MESSAGE_SIZE_UNIT char(1) NULL,
	ACTION_STOP_EXEC char(1) NOT NULL,
	ACTION_DELETE_MESSAGE char(1) NOT NULL,
	ACTION_READ char(1) NOT NULL,
	ACTION_PHP text NULL,
	ACTION_TYPE varchar(50) NULL,
	ACTION_VARS varchar(5000) NULL,
	ACTION_SPAM char(1) NOT NULL
)
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT PK_B_MAIL_FILTER PRIMARY KEY (ID)
GO
CREATE INDEX IX_B_MAIL_FILTER_1 ON B_MAIL_FILTER (MAILBOX_ID)
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_TIMESTAMP_X DEFAULT getdate() FOR TIMESTAMP_X
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_SORT DEFAULT '500' FOR SORT
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_ACTIVE DEFAULT 'Y' FOR ACTIVE
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_WHEN_MAIL_RECEIVED DEFAULT 'N' FOR WHEN_MAIL_RECEIVED
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_WHEN_MANUALLY_RUN DEFAULT 'N' FOR WHEN_MANUALLY_RUN
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_SPAM_RATING_TYPE DEFAULT '<' FOR SPAM_RATING_TYPE
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_MESSAGE_SIZE_TYPE DEFAULT '<' FOR MESSAGE_SIZE_TYPE
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_ACTION_STOP_EXEC DEFAULT 'N' FOR ACTION_STOP_EXEC
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_ACTION_DELETE_MESSAGE DEFAULT 'N' FOR ACTION_DELETE_MESSAGE
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_ACTION_READ DEFAULT '-' FOR ACTION_READ
GO
ALTER TABLE B_MAIL_FILTER ADD CONSTRAINT DF_B_MAIL_FILTER_ACTION_SPAM DEFAULT '-' FOR ACTION_SPAM
GO

create trigger B_MAIL_FILTER_UPDATE on B_MAIL_FILTER for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_MAIL_FILTER SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_MAIL_FILTER U,
		INSERTED I
	WHERE 
		U.ID = I.ID 
end
GO


CREATE TABLE B_MAIL_FILTER_COND
(
	ID int NOT NULL IDENTITY (1, 1),
	FILTER_ID int NOT NULL,
	TYPE varchar(50) NOT NULL,
	STRINGS varchar(5000) NOT NULL,
	COMPARE_TYPE varchar(30) NOT NULL
)
GO
ALTER TABLE B_MAIL_FILTER_COND ADD CONSTRAINT PK_B_MAIL_FILTER_COND PRIMARY KEY (ID)
GO
ALTER TABLE B_MAIL_FILTER_COND ADD CONSTRAINT DF_B_MAIL_FILTER_COND_COMPARE_TYPE DEFAULT 'CONTAIN' FOR COMPARE_TYPE
GO


CREATE TABLE B_MAIL_MESSAGE 
(
	ID int NOT NULL IDENTITY (1, 1),
	MAILBOX_ID int NOT NULL,
	DATE_INSERT datetime NOT NULL,
	FULL_TEXT text NULL,
	MESSAGE_SIZE int NOT NULL,
	HEADER text NULL,
	FIELD_DATE datetime NULL,
	FIELD_FROM varchar(255) NULL,
	FIELD_REPLY_TO varchar(255) NULL,
	FIELD_TO varchar(255) NULL,
	FIELD_CC varchar(255) NULL,
	FIELD_BCC varchar(255) NULL,
	FIELD_PRIORITY int NOT NULL,
	SUBJECT varchar(255) NULL,
	BODY text NULL,
	ATTACHMENTS int NULL,
	NEW_MESSAGE char(1) NULL,
	SPAM char(1) NOT NULL,
	SPAM_RATING decimal(18,4) NULL,
	SPAM_WORDS varchar(255) NULL,
	SPAM_LAST_RESULT char(1) NOT NULL,
	FOR_SPAM_TEST text NULL,
	EXTERNAL_ID varchar(255) NULL,
	MSG_ID varchar(255) NULL,
	IN_REPLY_TO varchar(255) NULL
)
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT PK_B_MAIL_MESSAGE PRIMARY KEY (ID)
GO
CREATE INDEX IX_B_MAIL_MESSAGE_1 ON B_MAIL_MESSAGE (MAILBOX_ID)
GO
CREATE INDEX IX_MAIL_MESSAGE_DATE ON B_MAIL_MESSAGE (DATE_INSERT, MAILBOX_ID)
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT DF_B_MAIL_MESSAGE_FIELD_DATE_INSERT DEFAULT getdate() FOR DATE_INSERT
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT DF_B_MAIL_MESSAGE_FIELD_PRIORITY DEFAULT '3' FOR FIELD_PRIORITY
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT DF_B_MAIL_MESSAGE_ATTACHMENTS DEFAULT '0' FOR ATTACHMENTS
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT DF_B_MAIL_MESSAGE_NEW_MESSAGE DEFAULT 'Y' FOR NEW_MESSAGE
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT DF_B_MAIL_MESSAGE_SPAM DEFAULT '?' FOR SPAM
GO
ALTER TABLE B_MAIL_MESSAGE ADD CONSTRAINT DF_B_MAIL_MESSAGE_SPAM_LAST_RESULT DEFAULT 'N' FOR SPAM_LAST_RESULT
GO


CREATE TABLE B_MAIL_MESSAGE_UID
(
	ID varchar(32) NOT NULL,
	MAILBOX_ID int NOT NULL,
	HEADER_MD5 VARCHAR(32) NULL,
	IS_SEEN CHAR(1) NOT NULL DEFAULT 'N',
	SESSION_ID varchar(32) NOT NULL,
	TIMESTAMP_X datetime NOT NULL,
	DATE_INSERT datetime NOT NULL,
	MESSAGE_ID int NOT NULL
)
GO
ALTER TABLE B_MAIL_MESSAGE_UID ADD CONSTRAINT PK_B_MAIL_MESSAGE_UID PRIMARY KEY (ID, MAILBOX_ID)
GO
CREATE INDEX IX_B_MAIL_MESSAGE_UID_1 ON B_MAIL_MESSAGE_UID (MAILBOX_ID)
GO
CREATE INDEX IX_MAIL_MSG_UID_2 ON B_MAIL_MESSAGE_UID (HEADER_MD5)
GO
ALTER TABLE B_MAIL_MESSAGE_UID ADD CONSTRAINT DF_B_MAIL_MESSAGE_UID_TIMESTAMP_X DEFAULT getdate() FOR TIMESTAMP_X
GO
ALTER TABLE B_MAIL_MESSAGE_UID ADD CONSTRAINT DF_B_MAIL_MESSAGE_UID_DATE_INSERT DEFAULT getdate() FOR DATE_INSERT
GO
create trigger B_MAIL_MESSAGE_UID_UPDATE on B_MAIL_MESSAGE_UID for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_MAIL_MESSAGE_UID SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_MAIL_MESSAGE_UID U,
		INSERTED I
	WHERE 
		U.ID = I.ID 
end
GO


CREATE TABLE B_MAIL_MSG_ATTACHMENT 
(
	ID int NOT NULL IDENTITY (1, 1),
	MESSAGE_ID int NOT NULL,
	FILE_ID int NOT NULL,
	FILE_NAME varchar(255) NULL,
	FILE_SIZE int NOT NULL,
	FILE_DATA image NULL,
	CONTENT_TYPE varchar(255) NULL,
	IMAGE_WIDTH int NULL,
	IMAGE_HEIGHT int NULL
)
GO
ALTER TABLE B_MAIL_MSG_ATTACHMENT ADD CONSTRAINT PK_B_MAIL_MSG_ATTACHMENT PRIMARY KEY (ID)
GO
CREATE INDEX IX_B_MAIL_MSG_ATTACHMENT_1 ON B_MAIL_MSG_ATTACHMENT (MESSAGE_ID)
GO
ALTER TABLE B_MAIL_MSG_ATTACHMENT ADD CONSTRAINT DF_B_MAIL_MSG_ATTACHMENT_FILE_ID DEFAULT '0' FOR FILE_ID
GO
ALTER TABLE B_MAIL_MSG_ATTACHMENT ADD CONSTRAINT DF_B_MAIL_MSG_ATTACHMENT_FILE_SIZE DEFAULT '0' FOR FILE_SIZE
GO


CREATE TABLE B_MAIL_SPAM_WEIGHT
(
	WORD_ID varchar(32) NOT NULL,
	WORD_REAL varchar(50) NOT NULL,
	GOOD_CNT int NOT NULL,
	BAD_CNT int NOT NULL,
	TOTAL_CNT int NOT NULL,
	TIMESTAMP_X datetime NULL
)
GO
ALTER TABLE B_MAIL_SPAM_WEIGHT ADD CONSTRAINT PK_B_MAIL_SPAM_WEIGHT PRIMARY KEY (WORD_ID)
GO
ALTER TABLE B_MAIL_SPAM_WEIGHT ADD CONSTRAINT DF_B_MAIL_SPAM_WEIGHT_TIMESTAMP_X DEFAULT getdate() FOR TIMESTAMP_X
GO
ALTER TABLE B_MAIL_SPAM_WEIGHT ADD CONSTRAINT DF_B_MAIL_SPAM_WEIGHT_GOOD_CNT DEFAULT '0' FOR GOOD_CNT
GO
ALTER TABLE B_MAIL_SPAM_WEIGHT ADD CONSTRAINT DF_B_MAIL_SPAM_WEIGHT_BAD_CNT DEFAULT '0' FOR BAD_CNT
GO
ALTER TABLE B_MAIL_SPAM_WEIGHT ADD CONSTRAINT DF_B_MAIL_SPAM_WEIGHT_TOTAL_CNT DEFAULT '0' FOR TOTAL_CNT
GO
create trigger B_MAIL_SPAM_WEIGHT_UPDATE on B_MAIL_SPAM_WEIGHT for update as
if (not update(TIMESTAMP_X))
begin
	UPDATE B_MAIL_SPAM_WEIGHT SET 
		TIMESTAMP_X = GETDATE()
	FROM 
		B_MAIL_SPAM_WEIGHT U,
		INSERTED I
	WHERE 
		U.WORD_ID = I.WORD_ID
end
GO


CREATE TABLE B_MAIL_LOG 
(
	ID int NOT NULL IDENTITY (1, 1),
	MAILBOX_ID int NOT NULL,
	FILTER_ID int NULL,
	MESSAGE_ID int NULL,
	LOG_TYPE varchar(50) NULL,
	DATE_INSERT datetime NOT NULL,
	STATUS_GOOD char(1) NOT NULL,
	MESSAGE varchar(255) NULL
)
GO
ALTER TABLE B_MAIL_LOG ADD CONSTRAINT PK_B_MAIL_LOG PRIMARY KEY (ID)
GO
CREATE INDEX IX_B_MAIL_LOG_1 ON B_MAIL_LOG (MAILBOX_ID)
GO
CREATE INDEX IX_B_MAIL_LOG_2 ON B_MAIL_LOG (MESSAGE_ID)
GO
ALTER TABLE B_MAIL_LOG ADD CONSTRAINT DF_B_MAIL_LOG_MAILBOX_ID DEFAULT '0' FOR MAILBOX_ID
GO
ALTER TABLE B_MAIL_LOG ADD CONSTRAINT DF_B_MAIL_LOG_STATUS_GOOD DEFAULT 'Y' FOR STATUS_GOOD
GO


CREATE TABLE B_MAIL_MAILSERVICES
(
  ID INT NOT NULL IDENTITY (1, 1),
  SITE_ID VARCHAR(255) NOT NULL,
  ACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
  SERVICE_TYPE VARCHAR(10) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  SERVER VARCHAR(255) NULL,
  PORT INT NULL,
  ENCRYPTION CHAR(1) NULL,
  LINK VARCHAR(255) NULL,
  ICON INT NULL,
  TOKEN VARCHAR(255) NULL,
  FLAGS INT NOT NULL DEFAULT 0,
  SORT INT NOT NULL DEFAULT 100
)
GO
ALTER TABLE B_MAIL_MAILSERVICES ADD CONSTRAINT PK_B_MAIL_MAILSERVICES PRIMARY KEY (ID)
GO
ALTER TABLE B_MAIL_MAILSERVICES ADD CONSTRAINT DF_B_MAIL_MAILSERVICES_SERVICE_TYPE DEFAULT 'imap' FOR SERVICE_TYPE
GO
CREATE INDEX IX_B_MAIL_MAILSERVICE_ACTIVE ON B_MAIL_MAILSERVICES (ACTIVE)
GO


CREATE TABLE B_MAIL_USER_RELATIONS
(
  TOKEN VARCHAR(32) NOT NULL,
  SITE_ID CHAR(2) NULL,
  USER_ID INT NOT NULL,
  ENTITY_TYPE VARCHAR(255) NOT NULL,
  ENTITY_ID VARCHAR(255) NULL,
  ENTITY_LINK VARCHAR(255) NULL,
  BACKURL VARCHAR(255) NULL
)
GO
ALTER TABLE B_MAIL_USER_RELATIONS ADD CONSTRAINT PK_B_MAIL_USER_RELATIONS PRIMARY KEY (TOKEN)
GO
CREATE UNIQUE INDEX UX_B_MAIL_USER_RELATION ON B_MAIL_USER_RELATIONS (USER_ID, ENTITY_TYPE, ENTITY_ID, SITE_ID)
GO


CREATE TABLE B_MAIL_BLACKLIST
(
  ID INT NOT NULL IDENTITY (1, 1),
  SITE_ID CHAR(2) NOT NULL,
  MAILBOX_ID INT NOT NULL DEFAULT 0,
  ITEM_TYPE INT NOT NULL,
  ITEM_VALUE VARCHAR(255) NOT NULL
)
GO
ALTER TABLE B_MAIL_BLACKLIST ADD CONSTRAINT PK_B_MAIL_BLACKLIST PRIMARY KEY (ID)
GO
CREATE INDEX IX_B_MAIL_BLACKLIST ON B_MAIL_BLACKLIST (MAILBOX_ID, SITE_ID)
GO


CREATE TABLE B_MAIL_DOMAIN_EMAIL
(
  DOMAIN VARCHAR(255) NOT NULL,
  LOGIN VARCHAR(255) NOT NULL,
)
GO
ALTER TABLE B_MAIL_DOMAIN_EMAIL ADD CONSTRAINT PK_B_MAIL_DOMAIN_EMAIL PRIMARY KEY (LOGIN, DOMAIN)
GO
CREATE INDEX IX_B_MAIL_DOMAIN_EMAIL ON B_MAIL_DOMAIN_EMAIL (DOMAIN)
GO
