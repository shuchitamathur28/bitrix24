create table B_BLOG_SITE_PATH
(
  ID int not null
,  SITE_ID char(2 CHAR) not null
,  PATH varchar(255 CHAR) not null
,  TYPE char(1 CHAR) null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_SITE_PATH INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_BLOG_SITE_PATH_INSERT
BEFORE INSERT
ON B_BLOG_SITE_PATH
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_SITE_PATH.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE UNIQUE INDEX IX_BLOG_SITE_PATH_2 ON B_BLOG_SITE_PATH(SITE_ID, TYPE)
/

create table B_BLOG
(
  ID number(18) not null
,  NAME varchar2(255 CHAR) not null
,  DESCRIPTION clob null
,  DATE_CREATE date not null
,  DATE_UPDATE date not null
,  ACTIVE char(1 CHAR) default 'Y' not null
,  OWNER_ID number(18) null
,  SOCNET_GROUP_ID number(18) null
,  URL varchar2(255 CHAR) not null
,  REAL_URL varchar2(255 CHAR) null
,  GROUP_ID number(18) not null
,  ENABLE_COMMENTS char(1 CHAR) default 'Y' not null
,  ENABLE_IMG_VERIF char(1 CHAR) default 'N' not null
,  ENABLE_RSS char(1 CHAR) default 'Y' not null
,  LAST_POST_ID number(18) null
,  LAST_POST_DATE date null
,  AUTO_GROUPS varchar2(255 CHAR) null
,  EMAIL_NOTIFY char(1 CHAR) DEFAULT 'Y' NOT NULL
,  ALLOW_HTML CHAR(1 CHAR) DEFAULT 'N' NOT NULL
,  SEARCH_INDEX CHAR(1 CHAR) DEFAULT 'Y' NOT NULL
,  USE_SOCNET CHAR(1 CHAR) DEFAULT 'N' NOT NULL
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_INSERT
BEFORE INSERT
ON B_BLOG
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_BLOG_BLOG_1 ON B_BLOG(GROUP_ID, ACTIVE)
/
CREATE INDEX IX_BLOG_BLOG_2 ON B_BLOG(OWNER_ID)
/
CREATE UNIQUE INDEX IX_BLOG_BLOG_4 ON B_BLOG(URL)
/
CREATE INDEX IX_BLOG_BLOG_5 ON B_BLOG(LAST_POST_DATE)
/
CREATE INDEX IX_BLOG_BLOG_6 ON B_BLOG(SOCNET_GROUP_ID)
/

create table B_BLOG_GROUP
(
  ID number(18) not null
,  NAME varchar2(255 CHAR) not null
,  SITE_ID char(2 CHAR) not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_GROUP INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE INDEX IX_BLOG_GROUP_1 ON B_BLOG_GROUP(SITE_ID)
/

CREATE OR REPLACE TRIGGER B_BLOG_GROUP_INSERT
BEFORE INSERT
ON B_BLOG_GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

create table B_BLOG_POST
(
  ID number(18) not null
,  TITLE varchar2(255 CHAR) not null
,  BLOG_ID number(18) not null
,  AUTHOR_ID number(18) not null
,  PREVIEW_TEXT clob null
,  PREVIEW_TEXT_TYPE char(4 CHAR) default 'text' not null
,  DETAIL_TEXT clob not null
,  DETAIL_TEXT_TYPE char(4 CHAR) default 'text' not null
,  DATE_CREATE date not null
,  DATE_PUBLISH date not null
,  KEYWORDS varchar2(255 CHAR) null
,  PUBLISH_STATUS char(1 CHAR) default 'P' not null
,  CATEGORY_ID char(100 CHAR) null
,  ATRIBUTE varchar2(255 CHAR) null
,  ENABLE_TRACKBACK char(1 CHAR) default 'Y' not null
,  ENABLE_COMMENTS char(1 CHAR) default 'Y' not null
,  ATTACH_IMG number(18) null
,  NUM_COMMENTS int default '0' not null
,  NUM_COMMENTS_ALL int default '0' not null
,  NUM_TRACKBACKS int default '0' not null
,  VIEWS int null
,  FAVORITE_SORT int null
,  PATH varchar2(255 CHAR) null
,  CODE varchar2(255 CHAR) null
,  MICRO char(1 CHAR) default 'N' not null
,  HAS_IMAGES char(1 CHAR) null
,  HAS_PROPS char(1 CHAR) null
,  HAS_TAGS char(1 CHAR) null
,  HAS_COMMENT_IMAGES char(1 CHAR) null
,  HAS_SOCNET_ALL char(1 CHAR) null
,  SEO_TITLE varchar2(255 CHAR) null
,  SEO_TAGS varchar2(255 CHAR) null
,  SEO_DESCRIPTION clob null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_POST INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_POST_INSERT
BEFORE INSERT
ON B_BLOG_POST
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_POST.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_BLOG_POST_1 ON B_BLOG_POST(BLOG_ID, PUBLISH_STATUS, DATE_PUBLISH)
/
CREATE INDEX IX_BLOG_POST_2 ON B_BLOG_POST(BLOG_ID, DATE_PUBLISH, PUBLISH_STATUS)
/
CREATE INDEX IX_BLOG_POST_3 ON B_BLOG_POST(BLOG_ID, CATEGORY_ID)
/
CREATE INDEX IX_BLOG_POST_4 ON B_BLOG_POST(PUBLISH_STATUS, DATE_PUBLISH)
/
CREATE INDEX IX_BLOG_POST_CODE ON B_BLOG_POST(BLOG_ID, CODE)
/
CREATE INDEX IX_BLOG_POST_5 ON B_BLOG_POST(DATE_PUBLISH, AUTHOR_ID)
/
CREATE INDEX IX_BLOG_POST_6 ON B_BLOG_POST(CODE)
/

create table B_BLOG_CATEGORY
(
  ID number(18) not null
,  BLOG_ID number(18) not null
,  NAME varchar2(255 CHAR) not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_CATEGORY INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE UNIQUE INDEX IX_BLOG_CAT_1 ON B_BLOG_CATEGORY(BLOG_ID, NAME)
/

CREATE OR REPLACE TRIGGER B_BLOG_CATEGORY_INSERT
BEFORE INSERT
ON B_BLOG_CATEGORY
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_CATEGORY.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/


create table B_BLOG_COMMENT
(
  ID number(18) not null
,  BLOG_ID number(18) not null
,  POST_ID number(18) not null
,  PARENT_ID number(18) null
,  AUTHOR_ID number(18) null
,  ICON_ID number(18) null
,  AUTHOR_NAME varchar2(255 CHAR) null
,  AUTHOR_EMAIL varchar2(255 CHAR) null
,  AUTHOR_IP varchar2(20 CHAR) null
,  AUTHOR_IP1 varchar2(20 CHAR) null
,  DATE_CREATE date not null
,  TITLE varchar2(255 CHAR) null
,  POST_TEXT clob not null
,  PUBLISH_STATUS char(1 CHAR) default 'P' not null
,  PATH varchar2(255 CHAR) null
,  HAS_PROPS char(1 CHAR) null
,  SHARE_DEST varchar2(255 CHAR) null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_COMMENT INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_COMMENT_INSERT
BEFORE INSERT
ON B_BLOG_COMMENT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_COMMENT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_BLOG_COMM_1 ON B_BLOG_COMMENT(BLOG_ID, POST_ID)
/
CREATE INDEX IX_BLOG_COMM_2 ON B_BLOG_COMMENT(AUTHOR_ID)
/
CREATE INDEX IX_BLOG_COMM_3 ON B_BLOG_COMMENT(DATE_CREATE, AUTHOR_ID)
/
CREATE INDEX IX_BLOG_COMM_4 ON B_BLOG_COMMENT(POST_ID)
/


create table B_BLOG_USER
(
  ID number(18) not null
,  USER_ID number(18) not null
,  ALIAS varchar2(255 CHAR) null
,  DESCRIPTION clob null
,  AVATAR number(18) null
,  INTERESTS varchar2(255 CHAR) null
,  LAST_VISIT date null
,  DATE_REG date not null
,  ALLOW_POST char(1 CHAR) default 'Y' not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_USER INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_USER_INSERT
BEFORE INSERT
ON B_BLOG_USER
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_USER.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE UNIQUE INDEX IX_BLOG_USER_1 ON B_BLOG_USER(USER_ID)
/
CREATE INDEX IX_BLOG_USER_2 ON B_BLOG_USER(ALIAS)
/

create table B_BLOG_USER_GROUP
(
  ID number(18) not null
,  BLOG_ID number(18) null
,  NAME varchar2(255 CHAR) not null
,  primary key (ID)
)
/

CREATE SEQUENCE SQ_B_BLOG_USER_GROUP START WITH 3 INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_USER_GROUP_INSERT
BEFORE INSERT
ON B_BLOG_USER_GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_USER_GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_BLOG_USER_GROUP_1 ON B_BLOG_USER_GROUP(BLOG_ID)
/

INSERT INTO b_blog_user_group(ID, BLOG_ID, NAME) VALUES(1, null, 'all')
/
INSERT INTO b_blog_user_group(ID, BLOG_ID, NAME) VALUES(2, null, 'registered')
/


create table B_BLOG_USER2USER_GROUP
(
  ID number(18) not null
,  USER_ID number(18) not null
,  BLOG_ID number(18) not null
,  USER_GROUP_ID number(18) not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_USER2USER_GROUP INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_USER2USER_GROUP_INSERT
BEFORE INSERT
ON B_BLOG_USER2USER_GROUP
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_USER2USER_GROUP.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE UNIQUE INDEX IX_BLOG_USER2GROUP_1 ON B_BLOG_USER2USER_GROUP(USER_ID, BLOG_ID, USER_GROUP_ID)
/

create table B_BLOG_USER_GROUP_PERMS
(
  ID number(18) not null
,  BLOG_ID number(18) not null
,  USER_GROUP_ID number(18) not null
,  PERMS_TYPE char(1 CHAR) default 'P' not null
,  POST_ID number(18) null
,  PERMS char(1 CHAR) default 'D' not null
,  AUTOSET char(1 CHAR) default 'N' not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_USER_GROUP_PERMS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_USER_GROUP_PERMS_INSERT
BEFORE INSERT
ON B_BLOG_USER_GROUP_PERMS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_USER_GROUP_PERMS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE UNIQUE INDEX IX_BLOG_UG_PERMS_1 ON B_BLOG_USER_GROUP_PERMS(BLOG_ID, USER_GROUP_ID, PERMS_TYPE, POST_ID)
/
CREATE INDEX IX_BLOG_UG_PERMS_2 ON B_BLOG_USER_GROUP_PERMS(USER_GROUP_ID, PERMS_TYPE, POST_ID)
/
CREATE INDEX IX_BLOG_UG_PERMS_3 ON B_BLOG_USER_GROUP_PERMS(POST_ID, USER_GROUP_ID, PERMS_TYPE)
/

create table B_BLOG_USER2BLOG
(
  ID int not null
,  USER_ID int not null
,  BLOG_ID int not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_USER2BLOG INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_USER2BLOG_INSERT
BEFORE INSERT
ON B_BLOG_USER2BLOG
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_USER2BLOG.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE UNIQUE INDEX IX_BLOG_USER2BLOG_1 ON B_BLOG_USER2BLOG(BLOG_ID, USER_ID)
/



create table B_BLOG_TRACKBACK
(
  ID number(18) not null
,  TITLE varchar2(255 CHAR) not null
,  URL varchar2(255 CHAR) not null
,  PREVIEW_TEXT clob not null
,  BLOG_NAME varchar2(255 CHAR) null
,  POST_DATE date not null
,  BLOG_ID number(18) not null
,  POST_ID number(18) not null
,  primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_TRACKBACK INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_TRACKBACK_INSERT
BEFORE INSERT
ON B_BLOG_TRACKBACK
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_TRACKBACK.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE INDEX IX_BLOG_TRBK_1 ON B_BLOG_TRACKBACK(BLOG_ID, POST_ID)
/
CREATE INDEX IX_BLOG_TRBK_2 ON B_BLOG_TRACKBACK(POST_ID)
/

CREATE TABLE B_BLOG_IMAGE (
  ID number(18),
  FILE_ID number(18) default 0 NOT NULL,
  BLOG_ID number(18) default 0 NOT NULL,
  POST_ID number(18) default 0 NOT NULL,
  USER_ID number(18) default 0 NOT NULL,
  TIMESTAMP_X date default sysdate NOT NULL,
  TITLE varchar2(255 CHAR),
  IMAGE_SIZE number(18) default 0 NOT NULL,
  IS_COMMENT CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
  COMMENT_ID INTEGER DEFAULT NULL,
  CONSTRAINT PK_b_blog_image PRIMARY KEY  (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_IMAGE INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_BLOG_IMAGE_INSERT
BEFORE INSERT
ON B_BLOG_IMAGE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_IMAGE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_BLOG_IMAGE_1 ON B_BLOG_IMAGE(POST_ID, BLOG_ID)
/

CREATE TABLE B_BLOG_POST_CATEGORY(  
  ID number(18) not null,
  BLOG_ID number(18) not null,  
  POST_ID number(18) not null,  
  CATEGORY_ID number(18) not null  
)
/
CREATE SEQUENCE SQ_B_BLOG_POST_CATEGORY INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_BLOG_POST_CATEGORY_INSERT
BEFORE INSERT
ON B_BLOG_POST_CATEGORY
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_POST_CATEGORY.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE UNIQUE INDEX IX_BLOG_POST_CATEGORY ON B_BLOG_POST_CATEGORY(POST_ID, CATEGORY_ID)
/

CREATE TABLE B_BLOG_SOCNET (
  ID int not null,
  BLOG_ID int not null,
  primary key (ID))
/
CREATE SEQUENCE SQ_B_BLOG_SOCNET INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/

CREATE OR REPLACE TRIGGER B_BLOG_SOCNET_INSERT
BEFORE INSERT
ON B_BLOG_SOCNET
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_SOCNET.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE UNIQUE INDEX IX_B_BLOG_SOCNET ON B_BLOG_SOCNET(BLOG_ID)
/

CREATE TABLE B_BLOG_SOCNET_RIGHTS (
	ID  number(18) not null,
	POST_ID number(18) NOT NULL,
	ENTITY_TYPE varchar2(45 CHAR) NOT NULL,
	ENTITY_ID number(18) NOT NULL,
	ENTITY varchar2(45 CHAR) NOT NULL,
	primary key (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_SOCNET_RIGHTS INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_BLOG_SOCNET_RIGHTS_INSERT
BEFORE INSERT
ON B_BLOG_SOCNET_RIGHTS
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_SOCNET_RIGHTS.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_BLOG_SR_1 ON B_BLOG_SOCNET_RIGHTS(POST_ID)
/
CREATE TABLE B_BLOG_POST_PARAM
(
	ID  int not null,
	POST_ID number(18),
	USER_ID number(18),
	NAME varchar2(50 CHAR) NOT NULL,
	VALUE varchar2(255 CHAR) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE SEQUENCE SQ_B_BLOG_POST_PARAM INCREMENT BY 1 NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
CREATE OR REPLACE TRIGGER B_BLOG_POST_PARAM_INSERT
BEFORE INSERT
ON B_BLOG_POST_PARAM
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_BLOG_POST_PARAM.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
CREATE INDEX IX_BLOG_PP_1 ON B_BLOG_POST_PARAM(POST_ID, USER_ID)
/
CREATE INDEX IX_BLOG_PP_2 ON B_BLOG_POST_PARAM(USER_ID)
/
